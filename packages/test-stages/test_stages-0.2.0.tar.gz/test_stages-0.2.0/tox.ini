# SPDX-FileCopyrightText: Peter Pentchev <roam@ringlet.net>
# SPDX-License-Identifier: BSD-2-Clause

[tox]
minversion = 4.1
envlist =
  ruff
  format
  mypy
  reuse
  unit-tests-no-tox
  unit-tests-tox-4
  selftest
  selftest-uv
  docs
isolated_build = True

[defs]
pyfiles_mypy =
  src/selftest \
  src/test_stages \
  tests/unit

pyfiles =
  {[defs]pyfiles_mypy} \
  src/tox_trivtags

[testenv:ruff]
skip_install = True
tags =
  check
  ruff
  quick
deps =
  -r requirements/ruff.txt
commands =
  ruff check -- {[defs]pyfiles}

[testenv:format]
skip_install = True
tags =
  check
  quick
deps =
  -r requirements/ruff.txt
commands =
  ruff check --config ruff-base.toml --select=D,I --diff -- {[defs]pyfiles}
  ruff format --check --config ruff-base.toml --diff -- {[defs]pyfiles}

[testenv:reformat]
skip_install = True
tags =
  format
  manual
deps =
  -r requirements/ruff.txt
commands =
  ruff check --config ruff-base.toml --select=D,I --fix -- {[defs]pyfiles}
  ruff format --config ruff-base.toml -- {[defs]pyfiles}

[testenv:mypy]
skip_install = True
tags =
  check
deps =
  -r requirements/install.txt
  -r requirements/selftest.txt
  -r requirements/test.txt
  mypy >= 1, < 2

  # There seems to be some misunderstanding between mypy 1.4.1 and click 8.1.4
  click != 8.1.4

  # pytest still needs this one...
  types-setuptools >= 20
setenv =
  MYPYPATH = {toxinidir}/stubs
commands =
  mypy --follow-imports silent --exclude tox_trivtags {[defs]pyfiles_mypy}

[testenv:unit-tests-no-tox]
tags =
  tests
deps =
  -r requirements/install.txt
  -r requirements/test.txt
allowlist_externals =
  sh
commands =
  tox-stages --help
  sh -c 'if tox-stages available; then echo Waat; exit 1; else echo Not available; fi'

[testenv:unit-tests-tox-4]
tags =
  tests
deps =
  -r requirements/install.txt
  -r requirements/test.txt
  tox >= 4, < 5
allowlist_externals =
  sh
commands =
  tox-stages --help
  tox-stages available
  pytest {posargs} tests/unit

[testenv:selftest]
tags =
  tests
deps =
  -r requirements/install.txt
  -r requirements/selftest.txt
  hatchling >= 1.14.1, < 2
  hatch-requirements-txt >= 0.4, < 0.5
setenv =
  PYTHONPATH = {toxinidir}/src
commands =
  python3 -m selftest

[testenv:selftest-uv]
tags =
  tests
deps =
  -r requirements/install.txt
  -r requirements/selftest-uv.txt
  hatchling >= 1.14.1, < 2
  hatch-requirements-txt >= 0.4, < 0.5
setenv =
  PYTHONPATH = {toxinidir}/src
commands =
  python3 -m selftest

# The pyupgrade tool does not seem to have a "check only" mode
[testenv:pyupgrade]
skip_install = True
tags =
  check
  manual
deps =
  pyupgrade >= 3, < 4
allowlist_externals =
  sh
commands =
  sh -c 'pyupgrade --py310-plus src/test_stages/*.py src/test_stages/tox_stages/*.py src/tox_trivtags/*.py tests/unit/*.py'

[testenv:reuse]
skip_install = True
tags =
  check
  quick
deps =
  reuse >= 2, < 3
allowlist_externals =
  sh
commands =
  sh -c 'if [ -d .git ]; then reuse lint; else echo skipped; fi'

[testenv:docs]
skip_install = True
tags =
  check
  docs
deps =
  -r requirements/docs.txt
commands =
  mkdocs build

[testenv:t-single]
tags =
  something
commands =
  python3 -c 'raise NotImplementedError()'

[testenv:t-several]
tags =
  all
  the
  things
commands =
  python3 -c 'raise NotImplementedError()'

[testenv:t-special]
tags =
  So,
  how many
  $tags
  is "too many",
  'eh"?
commands =
  python3 -c 'raise NotImplementedError()'

[testenv:t-selftest-marker]
tags =
  selftest
commands =
  python3 -c 'import pathlib; pathlib.Path("selftest-marker.txt").write_text("", encoding="UTF-8")'
