{"version":3,"file":"BrZFS-fp.js","mappings":";AAgCA;;;;AAIA;;AAEA;AAIA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;AAKA;;;;;;;;;;;;;;;;;;;;;AAyBA","sources":["webpack://knx-frontend/./homeassistant-frontend/src/components/ha-form/ha-form-expandable.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"./ha-form\";\nimport type {\n  HaFormDataContainer,\n  HaFormElement,\n  HaFormExpandableSchema,\n  HaFormSchema,\n} from \"./types\";\n\n@customElement(\"ha-form-expandable\")\nexport class HaFormExpendable extends LitElement implements HaFormElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public data!: HaFormDataContainer;\n\n  @property({ attribute: false }) public schema!: HaFormExpandableSchema;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ attribute: false }) public computeLabel?: (\n    schema: HaFormSchema,\n    data?: HaFormDataContainer\n  ) => string;\n\n  @property({ attribute: false }) public computeHelper?: (\n    schema: HaFormSchema\n  ) => string;\n\n  protected render() {\n    return html`\n      <ha-expansion-panel outlined .expanded=${Boolean(this.schema.expanded)}>\n        <div\n          slot=\"header\"\n          role=\"heading\"\n          aria-level=${this.schema.headingLevel?.toString() ?? \"3\"}\n        >\n          ${this.schema.icon\n            ? html` <ha-icon .icon=${this.schema.icon}></ha-icon> `\n            : this.schema.iconPath\n              ? html`\n                  <ha-svg-icon .path=${this.schema.iconPath}></ha-svg-icon>\n                `\n              : nothing}\n          ${this.schema.title}\n        </div>\n        <div class=\"content\">\n          <ha-form\n            .hass=${this.hass}\n            .data=${this.data}\n            .schema=${this.schema.schema}\n            .disabled=${this.disabled}\n            .computeLabel=${this.computeLabel}\n            .computeHelper=${this.computeHelper}\n          ></ha-form>\n        </div>\n      </ha-expansion-panel>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: flex !important;\n        flex-direction: column;\n      }\n      :host ha-form {\n        display: block;\n      }\n      .content {\n        padding: 12px;\n      }\n      ha-expansion-panel {\n        display: block;\n        --expansion-panel-content-padding: 0;\n        border-radius: 6px;\n        --ha-card-border-radius: 6px;\n      }\n      ha-svg-icon,\n      ha-icon {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-expandable\": HaFormExpendable;\n  }\n}\n"],"names":[],"sourceRoot":""}