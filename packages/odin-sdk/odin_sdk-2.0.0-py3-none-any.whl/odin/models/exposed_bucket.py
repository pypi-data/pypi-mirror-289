# coding: utf-8

"""
    Odin

    ODIN APIs to search across IP Services, CVEs, Certificates, Exposed Files/Buckets, Domains and more  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ExposedBucket(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'age_in_days': 'int',
        'categories': 'list[str]',
        'deleted': 'bool',
        'ef_mod_at': 'str',
        'file_cat_count': 'dict(str, int)',
        'files': 'int',
        'ins_at': 'str',
        'labels': 'list[str]',
        'last_found_at': 'str',
        'last_open_at': 'str',
        'lf_mod_at': 'str',
        'name': 'str',
        'new_files': 'int',
        'open': 'bool',
        'owner_id': 'str',
        'prev_scan_at': 'str',
        'provider': 'str',
        'region': 'str',
        'scan_at': 'str',
        'sensitive_files': 'int'
    }

    attribute_map = {
        'age_in_days': 'age_in_days',
        'categories': 'categories',
        'deleted': 'deleted',
        'ef_mod_at': 'ef_mod_at',
        'file_cat_count': 'file_cat_count',
        'files': 'files',
        'ins_at': 'ins_at',
        'labels': 'labels',
        'last_found_at': 'last_found_at',
        'last_open_at': 'last_open_at',
        'lf_mod_at': 'lf_mod_at',
        'name': 'name',
        'new_files': 'new_files',
        'open': 'open',
        'owner_id': 'owner_id',
        'prev_scan_at': 'prev_scan_at',
        'provider': 'provider',
        'region': 'region',
        'scan_at': 'scan_at',
        'sensitive_files': 'sensitive_files'
    }

    def __init__(self, age_in_days=None, categories=None, deleted=None, ef_mod_at=None, file_cat_count=None, files=None, ins_at=None, labels=None, last_found_at=None, last_open_at=None, lf_mod_at=None, name=None, new_files=None, open=None, owner_id=None, prev_scan_at=None, provider=None, region=None, scan_at=None, sensitive_files=None):  # noqa: E501
        """ExposedBucket - a model defined in Swagger"""  # noqa: E501
        self._age_in_days = None
        self._categories = None
        self._deleted = None
        self._ef_mod_at = None
        self._file_cat_count = None
        self._files = None
        self._ins_at = None
        self._labels = None
        self._last_found_at = None
        self._last_open_at = None
        self._lf_mod_at = None
        self._name = None
        self._new_files = None
        self._open = None
        self._owner_id = None
        self._prev_scan_at = None
        self._provider = None
        self._region = None
        self._scan_at = None
        self._sensitive_files = None
        self.discriminator = None
        if age_in_days is not None:
            self.age_in_days = age_in_days
        if categories is not None:
            self.categories = categories
        if deleted is not None:
            self.deleted = deleted
        if ef_mod_at is not None:
            self.ef_mod_at = ef_mod_at
        if file_cat_count is not None:
            self.file_cat_count = file_cat_count
        if files is not None:
            self.files = files
        if ins_at is not None:
            self.ins_at = ins_at
        if labels is not None:
            self.labels = labels
        if last_found_at is not None:
            self.last_found_at = last_found_at
        if last_open_at is not None:
            self.last_open_at = last_open_at
        if lf_mod_at is not None:
            self.lf_mod_at = lf_mod_at
        if name is not None:
            self.name = name
        if new_files is not None:
            self.new_files = new_files
        if open is not None:
            self.open = open
        if owner_id is not None:
            self.owner_id = owner_id
        if prev_scan_at is not None:
            self.prev_scan_at = prev_scan_at
        if provider is not None:
            self.provider = provider
        if region is not None:
            self.region = region
        if scan_at is not None:
            self.scan_at = scan_at
        if sensitive_files is not None:
            self.sensitive_files = sensitive_files

    @property
    def age_in_days(self):
        """Gets the age_in_days of this ExposedBucket.  # noqa: E501


        :return: The age_in_days of this ExposedBucket.  # noqa: E501
        :rtype: int
        """
        return self._age_in_days

    @age_in_days.setter
    def age_in_days(self, age_in_days):
        """Sets the age_in_days of this ExposedBucket.


        :param age_in_days: The age_in_days of this ExposedBucket.  # noqa: E501
        :type: int
        """

        self._age_in_days = age_in_days

    @property
    def categories(self):
        """Gets the categories of this ExposedBucket.  # noqa: E501


        :return: The categories of this ExposedBucket.  # noqa: E501
        :rtype: list[str]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this ExposedBucket.


        :param categories: The categories of this ExposedBucket.  # noqa: E501
        :type: list[str]
        """

        self._categories = categories

    @property
    def deleted(self):
        """Gets the deleted of this ExposedBucket.  # noqa: E501


        :return: The deleted of this ExposedBucket.  # noqa: E501
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this ExposedBucket.


        :param deleted: The deleted of this ExposedBucket.  # noqa: E501
        :type: bool
        """

        self._deleted = deleted

    @property
    def ef_mod_at(self):
        """Gets the ef_mod_at of this ExposedBucket.  # noqa: E501


        :return: The ef_mod_at of this ExposedBucket.  # noqa: E501
        :rtype: str
        """
        return self._ef_mod_at

    @ef_mod_at.setter
    def ef_mod_at(self, ef_mod_at):
        """Sets the ef_mod_at of this ExposedBucket.


        :param ef_mod_at: The ef_mod_at of this ExposedBucket.  # noqa: E501
        :type: str
        """

        self._ef_mod_at = ef_mod_at

    @property
    def file_cat_count(self):
        """Gets the file_cat_count of this ExposedBucket.  # noqa: E501


        :return: The file_cat_count of this ExposedBucket.  # noqa: E501
        :rtype: dict(str, int)
        """
        return self._file_cat_count

    @file_cat_count.setter
    def file_cat_count(self, file_cat_count):
        """Sets the file_cat_count of this ExposedBucket.


        :param file_cat_count: The file_cat_count of this ExposedBucket.  # noqa: E501
        :type: dict(str, int)
        """

        self._file_cat_count = file_cat_count

    @property
    def files(self):
        """Gets the files of this ExposedBucket.  # noqa: E501


        :return: The files of this ExposedBucket.  # noqa: E501
        :rtype: int
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this ExposedBucket.


        :param files: The files of this ExposedBucket.  # noqa: E501
        :type: int
        """

        self._files = files

    @property
    def ins_at(self):
        """Gets the ins_at of this ExposedBucket.  # noqa: E501


        :return: The ins_at of this ExposedBucket.  # noqa: E501
        :rtype: str
        """
        return self._ins_at

    @ins_at.setter
    def ins_at(self, ins_at):
        """Sets the ins_at of this ExposedBucket.


        :param ins_at: The ins_at of this ExposedBucket.  # noqa: E501
        :type: str
        """

        self._ins_at = ins_at

    @property
    def labels(self):
        """Gets the labels of this ExposedBucket.  # noqa: E501


        :return: The labels of this ExposedBucket.  # noqa: E501
        :rtype: list[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this ExposedBucket.


        :param labels: The labels of this ExposedBucket.  # noqa: E501
        :type: list[str]
        """

        self._labels = labels

    @property
    def last_found_at(self):
        """Gets the last_found_at of this ExposedBucket.  # noqa: E501


        :return: The last_found_at of this ExposedBucket.  # noqa: E501
        :rtype: str
        """
        return self._last_found_at

    @last_found_at.setter
    def last_found_at(self, last_found_at):
        """Sets the last_found_at of this ExposedBucket.


        :param last_found_at: The last_found_at of this ExposedBucket.  # noqa: E501
        :type: str
        """

        self._last_found_at = last_found_at

    @property
    def last_open_at(self):
        """Gets the last_open_at of this ExposedBucket.  # noqa: E501


        :return: The last_open_at of this ExposedBucket.  # noqa: E501
        :rtype: str
        """
        return self._last_open_at

    @last_open_at.setter
    def last_open_at(self, last_open_at):
        """Sets the last_open_at of this ExposedBucket.


        :param last_open_at: The last_open_at of this ExposedBucket.  # noqa: E501
        :type: str
        """

        self._last_open_at = last_open_at

    @property
    def lf_mod_at(self):
        """Gets the lf_mod_at of this ExposedBucket.  # noqa: E501


        :return: The lf_mod_at of this ExposedBucket.  # noqa: E501
        :rtype: str
        """
        return self._lf_mod_at

    @lf_mod_at.setter
    def lf_mod_at(self, lf_mod_at):
        """Sets the lf_mod_at of this ExposedBucket.


        :param lf_mod_at: The lf_mod_at of this ExposedBucket.  # noqa: E501
        :type: str
        """

        self._lf_mod_at = lf_mod_at

    @property
    def name(self):
        """Gets the name of this ExposedBucket.  # noqa: E501


        :return: The name of this ExposedBucket.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ExposedBucket.


        :param name: The name of this ExposedBucket.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def new_files(self):
        """Gets the new_files of this ExposedBucket.  # noqa: E501


        :return: The new_files of this ExposedBucket.  # noqa: E501
        :rtype: int
        """
        return self._new_files

    @new_files.setter
    def new_files(self, new_files):
        """Sets the new_files of this ExposedBucket.


        :param new_files: The new_files of this ExposedBucket.  # noqa: E501
        :type: int
        """

        self._new_files = new_files

    @property
    def open(self):
        """Gets the open of this ExposedBucket.  # noqa: E501


        :return: The open of this ExposedBucket.  # noqa: E501
        :rtype: bool
        """
        return self._open

    @open.setter
    def open(self, open):
        """Sets the open of this ExposedBucket.


        :param open: The open of this ExposedBucket.  # noqa: E501
        :type: bool
        """

        self._open = open

    @property
    def owner_id(self):
        """Gets the owner_id of this ExposedBucket.  # noqa: E501


        :return: The owner_id of this ExposedBucket.  # noqa: E501
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this ExposedBucket.


        :param owner_id: The owner_id of this ExposedBucket.  # noqa: E501
        :type: str
        """

        self._owner_id = owner_id

    @property
    def prev_scan_at(self):
        """Gets the prev_scan_at of this ExposedBucket.  # noqa: E501


        :return: The prev_scan_at of this ExposedBucket.  # noqa: E501
        :rtype: str
        """
        return self._prev_scan_at

    @prev_scan_at.setter
    def prev_scan_at(self, prev_scan_at):
        """Sets the prev_scan_at of this ExposedBucket.


        :param prev_scan_at: The prev_scan_at of this ExposedBucket.  # noqa: E501
        :type: str
        """

        self._prev_scan_at = prev_scan_at

    @property
    def provider(self):
        """Gets the provider of this ExposedBucket.  # noqa: E501


        :return: The provider of this ExposedBucket.  # noqa: E501
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this ExposedBucket.


        :param provider: The provider of this ExposedBucket.  # noqa: E501
        :type: str
        """

        self._provider = provider

    @property
    def region(self):
        """Gets the region of this ExposedBucket.  # noqa: E501


        :return: The region of this ExposedBucket.  # noqa: E501
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this ExposedBucket.


        :param region: The region of this ExposedBucket.  # noqa: E501
        :type: str
        """

        self._region = region

    @property
    def scan_at(self):
        """Gets the scan_at of this ExposedBucket.  # noqa: E501


        :return: The scan_at of this ExposedBucket.  # noqa: E501
        :rtype: str
        """
        return self._scan_at

    @scan_at.setter
    def scan_at(self, scan_at):
        """Sets the scan_at of this ExposedBucket.


        :param scan_at: The scan_at of this ExposedBucket.  # noqa: E501
        :type: str
        """

        self._scan_at = scan_at

    @property
    def sensitive_files(self):
        """Gets the sensitive_files of this ExposedBucket.  # noqa: E501


        :return: The sensitive_files of this ExposedBucket.  # noqa: E501
        :rtype: int
        """
        return self._sensitive_files

    @sensitive_files.setter
    def sensitive_files(self, sensitive_files):
        """Sets the sensitive_files of this ExposedBucket.


        :param sensitive_files: The sensitive_files of this ExposedBucket.  # noqa: E501
        :type: int
        """

        self._sensitive_files = sensitive_files

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ExposedBucket, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ExposedBucket):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
