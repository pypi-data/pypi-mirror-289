from datetime import datetime
from .Aggregates import IndexBars, TickerBars, CoveredWarrantBars, DerivativeBars
from .FiinIndicator import FiinIndicator
from .SubscribeCoveredWarrantEvents import SubscribeCoveredWarrantEvents
from .SubscribeIndexEvents import SubscribeIndexEvents
from .SubscribeTickerEvents import SubscribeTickerEvents
from .SubscribeDerivativeEvents import SubscribeDerivativeEvents

class FiinSession:
    def __init__(self, username: str, password: str) -> None: ...

    def login(self) -> FiinSession: ...
   
    def FiinIndicator(self) -> FiinIndicator: ...
    
    def IndexBars(self, ticker: str, by: str, from_date: str | datetime, to_date: str | datetime  = datetime.now(), 
                  multiplier: int = 1, limit: int = 1000) -> IndexBars:...
    
    def TickerBars(self,ticker: str, by: str, from_date: str | datetime, to_date: str | datetime = datetime.now(), 
                  multiplier: int = 1, limit: int = 1000) -> TickerBars:...
    
    def DerivativeBars(self,ticker: str, by: str, from_date: str | datetime, to_date: str | datetime = datetime.now(), 
                  multiplier: int = 1, limit: int = 1000) -> DerivativeBars:...
    
    def CoveredWarrantBars(self,ticker: str, by: str, from_date: str | datetime, to_date: str | datetime = datetime.now(), 
                  multiplier: int = 1, limit: int = 1000) -> CoveredWarrantBars:...
    
    def SubscribeDerivativeEvents(self, tickers: list, callback: callable) -> SubscribeDerivativeEvents: ...

    def SubscribeCoveredWarrantEvents(self, tickers: list, callback: callable) -> SubscribeCoveredWarrantEvents: ...

    def SubscribeTickerEvents(self, tickers: list, callback: callable) -> SubscribeTickerEvents: ...

    def SubscribeIndexEvents(self, tickers: list, callback: callable) -> SubscribeIndexEvents: ...
    