name: Run test ✅

on:
  pull_request:
    branches: [main]

jobs:
  pytest:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, macos-13]
        environment: [py39, py310, py311, py312]
    runs-on: ${{ matrix.os }}

    steps:
    - name: check out repo
      uses: actions/checkout@v4

    - name: Set up Pixi 🟨
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        environments: ${{ matrix.environment }}

    - name: Execute pytest ✅ with 🐍 ${{ matrix.environment }} - ${{ matrix.os }}
      env:
        REPORT_OUTPUT: md_report.md
      run: |
        pixi run --environment ${{ matrix.environment }} pip install --upgrade pytest-md-report
        pixi run --environment ${{ matrix.environment }} postinstall-e
        echo "REPORT_FILE=${REPORT_OUTPUT}" >> "$GITHUB_ENV"
        pixi run --environment ${{ matrix.environment }} test --md-report-flavor gfm --md-report-exclude-outcomes passed skipped xpassed --md-report-output "$REPORT_OUTPUT"
      continue-on-error: true

    - name: Output reports to the job summary when tests fail
      if: failure()
      shell: bash
      run: |
        if [ -f "$REPORT_FILE" ]; then
          echo "<details><summary>Failed Test Report</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat "$REPORT_FILE" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY
        fi
