[build-system]
requires = ["wheel", "meson-python", "tomli; python_version < '3.11'"]
build-backend = "mesonpy"

[project]
name = "cherab-inversion"
description = "Cherab inversion framework"
version = "0.3.1"
readme = "README.md"
authors = [
    { name = "Koyo Munechika", email = "munechika.koyo@torus.nr.titech.ac.jp" },
]
maintainers = [
    { name = "Koyo Munechika", email = "munechika.koyo@torus.nr.titech.ac.jp" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">= 3.9"
dependencies = ["numpy", "scipy", "matplotlib", "scikit-sparse"]
license = { file = "LICENSE.md" }

[project.urls]
Homepage = "https://cherab-inversion.readthedocs.io/"
documentation = "https://cherab-inversion.readthedocs.io/"
repository = "https://github.com/munechika-koyo/cherab_inversion"


[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
target-version = "py311"
namespace-packages = ["cherab/inversion"]

[tool.ruff.lint]
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F", "W", "I", "N", "B", "NPY"]
ignore = ["E501", "N802", "N803", "N806"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["E", "F", "W", "I", "B", "NPY"]
unfixable = ["E501"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.mypy]
follow-imports = "silent"
ignore-missing-imports = true
show-column-numbers = true
no-pretty = true

[tool.docformatter]
recursive = true
wrap-summaries = 100
wrap-descriptions = 100
blank = false

[tool.numpydoc_validation]
checks = [
    "all",  # report on all checks, except the below
    "GL01", # Docstring text (summary) should start in the line immediately
    "EX01", # No examples section found
    "SA01", # See Also section not found
    "ES01", # No extended summary found
    "GL08", # The object does not have a docstring
    "RT01", # No Returns section found
    "PR01", # Parameters {missing_params} not documented
    "SS06", # Summary should fit in a single line
]
# remember to use single quotes for regex in TOML
exclude = [ # don't report on objects that match any of these regex
    '\.__repr__$',
]
override_SS05 = ['^Process ', '^Assess ', '^Access ']

# --------------------------
# === Pixi configuration ===
# --------------------------
[tool.pixi.project]
channels = ["https://fast.prefix.dev/conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[tool.pixi.dependencies]
# Runtime dependencies
numpy = "*"
scipy = "*"
matplotlib = "*"
scikit-sparse = "*"
pip = "*"           # Required for editable installs temporarily
meson-python = "*"  # Required for editable installs temporarily

[tool.pixi.pypi-dependencies]
# Built editable in development mode
# cherab-inversion = { path = ".", editable = true }

[tool.pixi.tasks]
postinstall-e = "python -m pip install --no-build-isolation --no-deps --disable-pip-version-check -e ."


# === JupyterLab Features ===
[tool.pixi.feature.lab]
dependencies = { jupyterlab = "*", ipython = "*", ipywidgets = "*" }
pypi-dependencies = { cherab-inversion = { path = ".", editable = false } }
tasks = { lab = "jupyter lab --notebook-dir docs/notebooks/" }

# === Testing Features ===
[tool.pixi.feature.test]
dependencies = { pytest = "*" }
tasks = { test = "pytest --pyargs cherab.inversion" }

# === Documentation Features ===
[tool.pixi.feature.docs.tasks]
docs = "sphinx-build -b html docs/source/ docs/build/html"
clean-docs = "rm -rf docs/build && rm -rf docs/source/_api"

[tool.pixi.feature.docs.dependencies]
docutils = "*"
ipykernel = "*"
ipywidgets = "*"
jinja2 = "*"
nbconvert = ">=7.3"
nbsphinx = "*"
numpydoc = "*"
pillow = "*"
pygments = ">=2.11.0"
sphinx = "*"
sphinx-prompt = "*"
sphinx-copybutton = "*"
pydata-sphinx-theme = "<0.16"
sphinx-design = "*"
pandoc = "*"
sphinx-codeautolink = "*"
sphinxcontrib-bibtex = "*"

[tool.pixi.feature.docs.pypi-dependencies]
sphinx-github-style = "*"

# === Development Features ===
[tool.pixi.feature.dev.dependencies]
tomli = "*"
ipython = "*"
black = "*"
ruff = "*"
mypy = "*"
pre-commit = "*"

# === Build Features ===
[tool.pixi.feature.build.dependencies]
build = "*"
meson-python = "*"
ninja = "*"
wheel = "*"
pkg-config = "*"
[tool.pixi.feature.build.target]
linux-64 = { dependencies = { patchelf = "*" } }
osx-64 = { dependencies = { patchelf = "*" } }
osx-arm64 = { dependencies = { patchelf = "*" } }

[tool.pixi.feature.build.tasks]
# Create a sdist/wheel for installation
build-wheel = "python -m build --no-isolation --wheel ."
build-sdist = "python -m build --no-isolation --sdist ."


# === Python Version Features ===
[tool.pixi.feature.py39.dependencies]
python = "3.9.*"
[tool.pixi.feature.py310.dependencies]
python = "3.10.*"
[tool.pixi.feature.py311.dependencies]
python = "3.11.*"
[tool.pixi.feature.py312.dependencies]
python = "3.12.*"


[tool.pixi.environments]
default = { solve-group = "default" }
lab = { features = ["lab"], solve-group = "default" }
dev = { features = ["build", "dev", "test", "docs"], solve-group = "default" }
test = { features = ["test"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }
build = { features = ["build"], solve-group = "default" }

# For Test on Github actions
py39 = { features = ["test", "py39"] }
py310 = { features = ["test", "py310"] }
py311 = { features = ["test", "py311"] }
py312 = { features = ["test", "py312"] }
