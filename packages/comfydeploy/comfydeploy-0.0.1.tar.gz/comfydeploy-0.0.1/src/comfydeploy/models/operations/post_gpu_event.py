"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import httpmetadata as components_httpmetadata
from comfydeploy import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Optional


class GpuType(str, Enum):
    T4 = 'T4'
    L4 = 'L4'
    A10_G = 'A10G'
    A100 = 'A100'
    H100 = 'H100'


class WsGpuType(str, Enum):
    FOUR_THOUSAND_AND_NINETY = '4090'


class EventType(str, Enum):
    GPU_START = 'gpu_start'
    GPU_END = 'gpu_end'


class GpuProvider(str, Enum):
    MODAL = 'modal'
    RUNPOD = 'runpod'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostGpuEventRequestBody:
    UNSET='__SPEAKEASY_UNSET__'
    machine_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machine_id') }})
    timestamp: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp') }})
    event_type: EventType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventType') }})
    gpu_provider: GpuProvider = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gpu_provider') }})
    gpu_type: Optional[GpuType] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gpuType'), 'exclude': lambda f: f is PostGpuEventRequestBody.UNSET }})
    ws_gpu_type: Optional[WsGpuType] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wsGpuType'), 'exclude': lambda f: f is PostGpuEventRequestBody.UNSET }})
    event_id: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_id'), 'exclude': lambda f: f is PostGpuEventRequestBody.UNSET }})
    is_workspace: Optional[bool] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_workspace'), 'exclude': lambda f: f is PostGpuEventRequestBody.UNSET }})
    user_or_org_id: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_or_org_id'), 'exclude': lambda f: f is PostGpuEventRequestBody.UNSET }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostGpuEventResponseBody:
    r"""Machine event registered"""
    event_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_id') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostGpuEventResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field(metadata={'dataclasses_json': { 'exclude': lambda f: True }})
    object: Optional[PostGpuEventResponseBody] = dataclasses.field(default=None)
    r"""Machine event registered"""
    

