Metadata-Version: 2.1
Name: ESIRemote
Version: 0.3
Summary: Python library for remote controlling the environment in FwESI
Author-email: "@dieserniko" <hello@dieserniko.link>
License: MIT License
        
        Copyright (c) 2024 dieser-niko (dieserniko.link)
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/dieser-niko/ESIRemote
Project-URL: Repository, https://github.com/dieser-niko/ESIRemote
Project-URL: Issues, https://github.com/dieser-niko/ESIRemote/issues
Keywords: fwesi,api,wrapper
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests

# ESIRemote

A Python library to remotely control the environment in [FwESI](https://fwesi.de/)

This library is still in early development, but can already be used with some modifications.

## Functionality

FwESI has a remote control (basically a local web server) where the user can control the application without having to interact with the computer itself.

This includes actions such as
- changing the map
- controlling variables of a fire engine (such as the height of the ladder)
- start a fire (in FwESI)
- check state of door
- show/hide elements

The last action is still quite buggy with smoke in the latest tested version (1.10.1) and needs to be fixed by the FwESI developers.
Actions like video control are also a bit unstable.

What **CAN'T** be done:
- read/change coordinates of elements (like the user himself)
- get a livestream of the situation
- detect button presses (there are no buttons)

---

## TODO list

- [ ] Add more docstrings and comments
- [ ] Add more to readme (stuff like installation and usage)
- [x] Add more helper functions (like search by ID, name, type, etc)
  - Maybe do something like a custom list object with a function called "search_by_attribute" or something
- [ ] remove test code
- [ ] add some examples (and maybe supply scenes)
- [ ] make sure it works flawlessly (check the models especially)
- [ ] add `setup.py` or `pyproject.toml`
- [ ] publish to PyPi with GH Actions
- [ ] add unittests
