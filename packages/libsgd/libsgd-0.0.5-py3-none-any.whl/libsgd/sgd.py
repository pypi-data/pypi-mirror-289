# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _sgd
else:
    import _sgd

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


TRUE = _sgd.TRUE
FALSE = _sgd.FALSE
PI = _sgd.PI
TWO_PI = _sgd.TWO_PI
HALF_PI = _sgd.HALF_PI
DEGREES_TO_RADIANS = _sgd.DEGREES_TO_RADIANS
RADIANS_TO_DEGREES = _sgd.RADIANS_TO_DEGREES

def init():
    return _sgd.init()

def terminate():
    return _sgd.terminate()

def set_config_var(name, value):
    return _sgd.set_config_var(name, value)

def set_error_handler(handler, context):
    return _sgd.set_error_handler(handler, context)

def error(error):
    return _sgd.error(error)

def alert(message):
    return _sgd.alert(message)

def log(line):
    return _sgd.log(line)

def get_desktop_width():
    return _sgd.get_desktop_width()

def get_desktop_height():
    return _sgd.get_desktop_height()
EVENT_MASK_CLOSE_CLICKED = _sgd.EVENT_MASK_CLOSE_CLICKED
EVENT_MASK_SIZE_CHANGED = _sgd.EVENT_MASK_SIZE_CHANGED
EVENT_MASK_LOST_FOCUS = _sgd.EVENT_MASK_LOST_FOCUS
EVENT_MASK_GOT_FOCUS = _sgd.EVENT_MASK_GOT_FOCUS
EVENT_MASK_SUSPENDED = _sgd.EVENT_MASK_SUSPENDED
EVENT_MASK_RESUMED = _sgd.EVENT_MASK_RESUMED

def poll_events():
    return _sgd.poll_events()

def debug_memory():
    return _sgd.debug_memory()
WINDOW_STATE_CLOSED = _sgd.WINDOW_STATE_CLOSED
WINDOW_STATE_MINIMIZED = _sgd.WINDOW_STATE_MINIMIZED
WINDOW_STATE_NORMAL = _sgd.WINDOW_STATE_NORMAL
WINDOW_STATE_MAXIMIZED = _sgd.WINDOW_STATE_MAXIMIZED
WINDOW_STATE_FULLSCREEN = _sgd.WINDOW_STATE_FULLSCREEN
WINDOW_FLAGS_FULLSCREEN = _sgd.WINDOW_FLAGS_FULLSCREEN
WINDOW_FLAGS_RESIZABLE = _sgd.WINDOW_FLAGS_RESIZABLE
WINDOW_FLAGS_CENTERED = _sgd.WINDOW_FLAGS_CENTERED
WINDOW_FLAGS_FULLSCREEN_60HZ = _sgd.WINDOW_FLAGS_FULLSCREEN_60HZ

def create_window(width, height, title, flags):
    return _sgd.create_window(width, height, title, flags)

def destroy_window():
    return _sgd.destroy_window()

def set_window_position(x, y):
    return _sgd.set_window_position(x, y)

def get_window_x():
    return _sgd.get_window_x()

def get_window_y():
    return _sgd.get_window_y()

def set_window_size(width, height):
    return _sgd.set_window_size(width, height)

def get_window_width():
    return _sgd.get_window_width()

def get_window_height():
    return _sgd.get_window_height()

def set_window_title(title):
    return _sgd.set_window_title(title)

def get_window_title():
    return _sgd.get_window_title()

def set_fullscreen_mode(width, height, hertz):
    return _sgd.set_fullscreen_mode(width, height, hertz)

def set_window_state(state):
    return _sgd.set_window_state(state)

def get_window_state():
    return _sgd.get_window_state()

def is_key_down(keyCode):
    return _sgd.is_key_down(keyCode)

def is_key_hit(keyCode):
    return _sgd.is_key_hit(keyCode)

def get_char():
    return _sgd.get_char()

def flush_chars():
    return _sgd.flush_chars()

def get_mouse_x():
    return _sgd.get_mouse_x()

def get_mouse_y():
    return _sgd.get_mouse_y()

def get_mouse_z():
    return _sgd.get_mouse_z()

def get_mouse_vx():
    return _sgd.get_mouse_vx()

def get_mouse_vy():
    return _sgd.get_mouse_vy()

def get_mouse_vz():
    return _sgd.get_mouse_vz()

def set_mouse_z(z):
    return _sgd.set_mouse_z(z)
MOUSE_CURSOR_MODE_NORMAL = _sgd.MOUSE_CURSOR_MODE_NORMAL
MOUSE_CURSOR_MODE_HIDDEN = _sgd.MOUSE_CURSOR_MODE_HIDDEN
MOUSE_CURSOR_MODE_DISABLED = _sgd.MOUSE_CURSOR_MODE_DISABLED
MOUSE_CURSOR_MODE_CAPTURED = _sgd.MOUSE_CURSOR_MODE_CAPTURED

def set_mouse_cursor_mode(cursorMode):
    return _sgd.set_mouse_cursor_mode(cursorMode)

def is_mouse_button_down(button):
    return _sgd.is_mouse_button_down(button)

def is_mouse_button_hit(button):
    return _sgd.is_mouse_button_hit(button)

def is_gamepad_connected(gamepad):
    return _sgd.is_gamepad_connected(gamepad)

def is_gamepad_button_down(gamepad, button):
    return _sgd.is_gamepad_button_down(gamepad, button)

def is_gamepad_button_hit(gamepad, button):
    return _sgd.is_gamepad_button_hit(gamepad, button)

def get_gamepad_axis(gamepad, axis):
    return _sgd.get_gamepad_axis(gamepad, axis)
TEXTURE_FORMAT_R8 = _sgd.TEXTURE_FORMAT_R8
TEXTURE_FORMAT_RG8 = _sgd.TEXTURE_FORMAT_RG8
TEXTURE_FORMAT_RGBA8 = _sgd.TEXTURE_FORMAT_RGBA8
TEXTURE_FORMAT_SRGBA8 = _sgd.TEXTURE_FORMAT_SRGBA8
TEXTURE_FORMAT_RGBA16F = _sgd.TEXTURE_FORMAT_RGBA16F
TEXTURE_FORMAT_DEPTH32F = _sgd.TEXTURE_FORMAT_DEPTH32F
TEXTURE_FLAGS_NONE = _sgd.TEXTURE_FLAGS_NONE
TEXTURE_FLAGS_CLAMP_U = _sgd.TEXTURE_FLAGS_CLAMP_U
TEXTURE_FLAGS_CLAMP_V = _sgd.TEXTURE_FLAGS_CLAMP_V
TEXTURE_FLAGS_CLAMP_W = _sgd.TEXTURE_FLAGS_CLAMP_W
TEXTURE_FLAGS_CLAMP_COORDS = _sgd.TEXTURE_FLAGS_CLAMP_COORDS
TEXTURE_FLAGS_FILTER = _sgd.TEXTURE_FLAGS_FILTER
TEXTURE_FLAGS_MIPMAP = _sgd.TEXTURE_FLAGS_MIPMAP
TEXTURE_FLAGS_CUBE = _sgd.TEXTURE_FLAGS_CUBE
TEXTURE_FLAGS_ENVMAP_DEFAULT = _sgd.TEXTURE_FLAGS_ENVMAP_DEFAULT
TEXTURE_FLAGS_MATERIAL_DEFAULT = _sgd.TEXTURE_FLAGS_MATERIAL_DEFAULT
TEXTURE_FLAGS_IMAGE_DEFAULT = _sgd.TEXTURE_FLAGS_IMAGE_DEFAULT

def load_texture(path, format, flags):
    return _sgd.load_texture(path, format, flags)
BLEND_MODE_OPAQUE = _sgd.BLEND_MODE_OPAQUE
BLEND_MODE_ALPHA_MASK = _sgd.BLEND_MODE_ALPHA_MASK
BLEND_MODE_ALPHA_BLEND = _sgd.BLEND_MODE_ALPHA_BLEND
DEPTH_FUNC_NEVER = _sgd.DEPTH_FUNC_NEVER
DEPTH_FUNC_LESS = _sgd.DEPTH_FUNC_LESS
DEPTH_FUNC_EQUAL = _sgd.DEPTH_FUNC_EQUAL
DEPTH_FUNC_LESS_EQUAL = _sgd.DEPTH_FUNC_LESS_EQUAL
DEPTH_FUNC_GREATER = _sgd.DEPTH_FUNC_GREATER
DEPTH_FUNC_NOT_EQUAL = _sgd.DEPTH_FUNC_NOT_EQUAL
DEPTH_FUNC_GREATER_EQUAL = _sgd.DEPTH_FUNC_GREATER_EQUAL
DEPTH_FUNC_ALWAYS = _sgd.DEPTH_FUNC_ALWAYS
CULL_MODE_NONE = _sgd.CULL_MODE_NONE
CULL_MODE_FRONT = _sgd.CULL_MODE_FRONT
CULL_MODE_BACK = _sgd.CULL_MODE_BACK

def create_pbr_material():
    return _sgd.create_pbr_material()

def load_pbr_material(path):
    return _sgd.load_pbr_material(path)

def create_prelit_material():
    return _sgd.create_prelit_material()

def load_prelit_material(path):
    return _sgd.load_prelit_material(path)

def set_material_blend_mode(material, blendMode):
    return _sgd.set_material_blend_mode(material, blendMode)

def set_material_depth_func(material, depthFunc):
    return _sgd.set_material_depth_func(material, depthFunc)

def set_material_cull_mode(material, cullMode):
    return _sgd.set_material_cull_mode(material, cullMode)

def set_material_vector4f(material, property, x, y, z, w):
    return _sgd.set_material_vector4f(material, property, x, y, z, w)

def set_material_vector3f(material, property, x, y, z):
    return _sgd.set_material_vector3f(material, property, x, y, z)

def set_material_vector2f(material, property, x, y):
    return _sgd.set_material_vector2f(material, property, x, y)

def set_material_float(material, property, n):
    return _sgd.set_material_float(material, property, n)

def set_material_texture(material, property, texture):
    return _sgd.set_material_texture(material, property, texture)

def load_mesh(path):
    return _sgd.load_mesh(path)

def create_box_mesh(minX, minY, minZ, maxX, maxY, maxZ, material):
    return _sgd.create_box_mesh(minX, minY, minZ, maxX, maxY, maxZ, material)

def create_sphere_mesh(radius, xSegs, ySegs, material):
    return _sgd.create_sphere_mesh(radius, xSegs, ySegs, material)

def create_cylinder_mesh(height, radius, segs, material):
    return _sgd.create_cylinder_mesh(height, radius, segs, material)

def create_cone_mesh(height, radius, segs, material):
    return _sgd.create_cone_mesh(height, radius, segs, material)

def create_torus_mesh(outerRadius, innerRadius, outerSegs, innerSegs, material):
    return _sgd.create_torus_mesh(outerRadius, innerRadius, outerSegs, innerSegs, material)

def set_mesh_shadows_enabled(mesh, enabled):
    return _sgd.set_mesh_shadows_enabled(mesh, enabled)

def is_mesh_shadows_enabled(mesh):
    return _sgd.is_mesh_shadows_enabled(mesh)

def copy_mesh(mesh):
    return _sgd.copy_mesh(mesh)

def update_mesh_normals(mesh):
    return _sgd.update_mesh_normals(mesh)

def update_mesh_tangents(mesh):
    return _sgd.update_mesh_tangents(mesh)

def fit_mesh(mesh, minX, minY, minZ, maxX, maxY, maxZ, uniform):
    return _sgd.fit_mesh(mesh, minX, minY, minZ, maxX, maxY, maxZ, uniform)

def t_form_mesh(mesh, tx, ty, tz, rx, ry, rz, sx, sy, sz):
    return _sgd.t_form_mesh(mesh, tx, ty, tz, rx, ry, rz, sx, sy, sz)

def t_form_mesh_tex_coords(mesh, scaleX, scaleY, offsetX, offsetY):
    return _sgd.t_form_mesh_tex_coords(mesh, scaleX, scaleY, offsetX, offsetY)

def flip_mesh(mesh):
    return _sgd.flip_mesh(mesh)

def create_mesh(vertexCount, flags):
    return _sgd.create_mesh(vertexCount, flags)

def resize_vertices(mesh, count):
    return _sgd.resize_vertices(mesh, count)

def get_vertex_count(mesh):
    return _sgd.get_vertex_count(mesh)

def add_vertex(mesh, x, y, z, nx, ny, nz, s, t):
    return _sgd.add_vertex(mesh, x, y, z, nx, ny, nz, s, t)

def set_vertex(mesh, vertex, x, y, z, nx, ny, nz, s, t):
    return _sgd.set_vertex(mesh, vertex, x, y, z, nx, ny, nz, s, t)

def set_vertex_position(mesh, vertex, x, y, z):
    return _sgd.set_vertex_position(mesh, vertex, x, y, z)

def set_vertex_normal(mesh, vertex, nx, ny, nz):
    return _sgd.set_vertex_normal(mesh, vertex, nx, ny, nz)

def set_vertex_tangent(mesh, vertex, tx, ty, tz, tw):
    return _sgd.set_vertex_tangent(mesh, vertex, tx, ty, tz, tw)

def set_vertex_color(mesh, vertex, r, g, b, a):
    return _sgd.set_vertex_color(mesh, vertex, r, g, b, a)

def set_vertex_tex_coord0(mesh, vertex, u0, v0):
    return _sgd.set_vertex_tex_coord0(mesh, vertex, u0, v0)

def get_vertex_x(mesh, vertex):
    return _sgd.get_vertex_x(mesh, vertex)

def get_vertex_y(mesh, vertex):
    return _sgd.get_vertex_y(mesh, vertex)

def get_vertex_z(mesh, vertex):
    return _sgd.get_vertex_z(mesh, vertex)

def get_vertex_nx(mesh, vertex):
    return _sgd.get_vertex_nx(mesh, vertex)

def get_vertex_ny(mesh, vertex):
    return _sgd.get_vertex_ny(mesh, vertex)

def get_vertex_nz(mesh, vertex):
    return _sgd.get_vertex_nz(mesh, vertex)

def get_vertex_tx(mesh, vertex):
    return _sgd.get_vertex_tx(mesh, vertex)

def get_vertex_ty(mesh, vertex):
    return _sgd.get_vertex_ty(mesh, vertex)

def get_vertex_tz(mesh, vertex):
    return _sgd.get_vertex_tz(mesh, vertex)

def get_vertex_tw(mesh, vertex):
    return _sgd.get_vertex_tw(mesh, vertex)

def get_vertex_red(mesh, vertex):
    return _sgd.get_vertex_red(mesh, vertex)

def get_vertex_green(mesh, vertex):
    return _sgd.get_vertex_green(mesh, vertex)

def get_vertex_blue(mesh, vertex):
    return _sgd.get_vertex_blue(mesh, vertex)

def get_vertex_alpha(mesh, vertex):
    return _sgd.get_vertex_alpha(mesh, vertex)

def get_vertex_u0(mesh, vertex):
    return _sgd.get_vertex_u0(mesh, vertex)

def get_vertex_v0(mesh, vertex):
    return _sgd.get_vertex_v0(mesh, vertex)

def create_surface(mesh, material, triangleCount):
    return _sgd.create_surface(mesh, material, triangleCount)

def get_surface_count(mesh):
    return _sgd.get_surface_count(mesh)

def get_surface(mesh, surface):
    return _sgd.get_surface(mesh, surface)

def get_surface_material(surface):
    return _sgd.get_surface_material(surface)

def resize_triangles(surface, count):
    return _sgd.resize_triangles(surface, count)

def get_triangle_count(surface):
    return _sgd.get_triangle_count(surface)

def add_triangle(surface, v0, v1, v2):
    return _sgd.add_triangle(surface, v0, v1, v2)

def set_triangle(surface, triangle, v0, v1, v2):
    return _sgd.set_triangle(surface, triangle, v0, v1, v2)

def get_triangle_vertex(surface, triangle, vertex):
    return _sgd.get_triangle_vertex(surface, triangle, vertex)

def load_font(path, height):
    return _sgd.load_font(path, height)

def get_text_width(font, text):
    return _sgd.get_text_width(font, text)

def get_font_height(font):
    return _sgd.get_font_height(font)

def load_image(path, depth):
    return _sgd.load_image(path, depth)
IMAGE_VIEW_MODE_FIXED = _sgd.IMAGE_VIEW_MODE_FIXED
IMAGE_VIEW_MODE_FREE = _sgd.IMAGE_VIEW_MODE_FREE
IMAGE_VIEW_MODE_UPRIGHT = _sgd.IMAGE_VIEW_MODE_UPRIGHT

def set_image_view_mode(image, viewMode):
    return _sgd.set_image_view_mode(image, viewMode)

def set_image_rect(image, minX, minY, maxX, maxY):
    return _sgd.set_image_rect(image, minX, minY, maxX, maxY)

def set_image_2d_handle(image, x, y):
    return _sgd.set_image_2d_handle(image, x, y)

def set_image_blend_mode(image, blendMode):
    return _sgd.set_image_blend_mode(image, blendMode)

def get_image_width(image):
    return _sgd.get_image_width(image)

def get_image_height(image):
    return _sgd.get_image_height(image)

def get_image_depth(image):
    return _sgd.get_image_depth(image)

def set_2d_fill_color(red, green, blue, alpha):
    return _sgd.set_2d_fill_color(red, green, blue, alpha)

def set_2d_fill_material(material):
    return _sgd.set_2d_fill_material(material)

def set_2d_fill_enabled(enabled):
    return _sgd.set_2d_fill_enabled(enabled)

def set_2d_outline_color(red, green, blue, alpha):
    return _sgd.set_2d_outline_color(red, green, blue, alpha)

def set_2d_outline_width(width):
    return _sgd.set_2d_outline_width(width)

def set_2d_outline_enabled(enabled):
    return _sgd.set_2d_outline_enabled(enabled)

def set_2d_line_width(width):
    return _sgd.set_2d_line_width(width)

def set_2d_point_size(size):
    return _sgd.set_2d_point_size(size)

def set_2d_font(font):
    return _sgd.set_2d_font(font)

def set_2d_text_color(red, green, blue, alpha):
    return _sgd.set_2d_text_color(red, green, blue, alpha)

def get_2d_text_width(text):
    return _sgd.get_2d_text_width(text)

def get_2d_font_height():
    return _sgd.get_2d_font_height()

def clear_2d():
    return _sgd.clear_2d()

def push_2d_layer():
    return _sgd.push_2d_layer()

def pop_2d_layer():
    return _sgd.pop_2d_layer()

def draw_2d_point(x0, y0):
    return _sgd.draw_2d_point(x0, y0)

def draw_2d_line(x0, y0, x1, y1):
    return _sgd.draw_2d_line(x0, y0, x1, y1)

def draw_2d_rect(minX, minY, maxX, maxY):
    return _sgd.draw_2d_rect(minX, minY, maxX, maxY)

def draw_2d_image(image, x, y, frame):
    return _sgd.draw_2d_image(image, x, y, frame)

def draw_2d_oval(minX, minY, maxX, maxY):
    return _sgd.draw_2d_oval(minX, minY, maxX, maxY)

def draw_2d_text(text, x, y):
    return _sgd.draw_2d_text(text, x, y)

def load_sound(path):
    return _sgd.load_sound(path)

def play_sound(sound):
    return _sgd.play_sound(sound)

def cue_sound(sound):
    return _sgd.cue_sound(sound)

def set_audio_volume(audio, volume):
    return _sgd.set_audio_volume(audio, volume)

def set_audio_pan(audio, pan):
    return _sgd.set_audio_pan(audio, pan)

def set_audio_pitch_scale(audio, scale):
    return _sgd.set_audio_pitch_scale(audio, scale)

def set_audio_looping(audio, looping):
    return _sgd.set_audio_looping(audio, looping)

def set_audio_paused(audio, paused):
    return _sgd.set_audio_paused(audio, paused)

def is_audio_valid(audio):
    return _sgd.is_audio_valid(audio)

def stop_audio(audio):
    return _sgd.stop_audio(audio)

def clear_scene():
    return _sgd.clear_scene()

def set_ambient_light_color(red, green, blue, alpha):
    return _sgd.set_ambient_light_color(red, green, blue, alpha)

def set_clear_color(red, green, blue, alpha):
    return _sgd.set_clear_color(red, green, blue, alpha)

def set_clear_depth(depth):
    return _sgd.set_clear_depth(depth)

def set_env_texture(texture):
    return _sgd.set_env_texture(texture)

def set_csm_texture_size(textureSize):
    return _sgd.set_csm_texture_size(textureSize)

def set_max_csm_lights(maxLights):
    return _sgd.set_max_csm_lights(maxLights)

def set_csm_split_distances(sklit0, split1, split2, split3):
    return _sgd.set_csm_split_distances(sklit0, split1, split2, split3)

def set_csm_clip_range(range):
    return _sgd.set_csm_clip_range(range)

def set_csm_depth_bias(bias):
    return _sgd.set_csm_depth_bias(bias)

def set_psm_texture_size(textureSize):
    return _sgd.set_psm_texture_size(textureSize)

def set_max_psm_lights(maxLights):
    return _sgd.set_max_psm_lights(maxLights)

def set_psm_clip_near(near):
    return _sgd.set_psm_clip_near(near)

def set_psm_depth_bias(bias):
    return _sgd.set_psm_depth_bias(bias)

def set_ssm_texture_size(textureSize):
    return _sgd.set_ssm_texture_size(textureSize)

def set_max_ssm_lights(maxLights):
    return _sgd.set_max_ssm_lights(maxLights)

def set_ssm_clip_near(near):
    return _sgd.set_ssm_clip_near(near)

def set_ssm_depth_bias(bias):
    return _sgd.set_ssm_depth_bias(bias)

def render_scene():
    return _sgd.render_scene()

def present():
    return _sgd.present()

def get_fps():
    return _sgd.get_fps()

def get_rps():
    return _sgd.get_rps()

def set_entity_enabled(entity, enabled):
    return _sgd.set_entity_enabled(entity, enabled)

def is_entity_enabled(entity):
    return _sgd.is_entity_enabled(entity)

def set_entity_visible(entity, visible):
    return _sgd.set_entity_visible(entity, visible)

def is_entity_visible(entity):
    return _sgd.is_entity_visible(entity)

def destroy_entity(entity):
    return _sgd.destroy_entity(entity)

def reset_entity(entity):
    return _sgd.reset_entity(entity)

def copy_entity(entity):
    return _sgd.copy_entity(entity)

def set_entity_name(entity, name):
    return _sgd.set_entity_name(entity, name)

def get_entity_name(entity):
    return _sgd.get_entity_name(entity)

def set_entity_parent(entity, parent):
    return _sgd.set_entity_parent(entity, parent)

def get_entity_parent(entity):
    return _sgd.get_entity_parent(entity)

def get_entity_child_count(entity):
    return _sgd.get_entity_child_count(entity)

def get_entity_child(entity, childIndex):
    return _sgd.get_entity_child(entity, childIndex)

def find_entity_child(entity, childName):
    return _sgd.find_entity_child(entity, childName)

def set_entity_position(entity, tx, ty, tz):
    return _sgd.set_entity_position(entity, tx, ty, tz)

def set_entity_rotation(entity, rx, ry, rz):
    return _sgd.set_entity_rotation(entity, rx, ry, rz)

def set_entity_scale(entity, sx, sy, sz):
    return _sgd.set_entity_scale(entity, sx, sy, sz)

def translate_entity(entity, tx, ty, tz):
    return _sgd.translate_entity(entity, tx, ty, tz)

def rotate_entity(entity, rx, ry, rz):
    return _sgd.rotate_entity(entity, rx, ry, rz)

def scale_entity(entity, sx, sy, sz):
    return _sgd.scale_entity(entity, sx, sy, sz)

def move_entity(entity, tx, ty, tz):
    return _sgd.move_entity(entity, tx, ty, tz)

def turn_entity(entity, rx, ry, rz):
    return _sgd.turn_entity(entity, rx, ry, rz)

def get_entity_x(entity):
    return _sgd.get_entity_x(entity)

def get_entity_y(entity):
    return _sgd.get_entity_y(entity)

def get_entity_z(entity):
    return _sgd.get_entity_z(entity)

def get_entity_rx(entity):
    return _sgd.get_entity_rx(entity)

def get_entity_ry(entity):
    return _sgd.get_entity_ry(entity)

def get_entity_rz(entity):
    return _sgd.get_entity_rz(entity)

def get_entity_sx(entity):
    return _sgd.get_entity_sx(entity)

def get_entity_sy(entity):
    return _sgd.get_entity_sy(entity)

def get_entity_sz(entity):
    return _sgd.get_entity_sz(entity)

def get_entity_ix(entity):
    return _sgd.get_entity_ix(entity)

def get_entity_iy(entity):
    return _sgd.get_entity_iy(entity)

def get_entity_iz(entity):
    return _sgd.get_entity_iz(entity)

def get_entity_jx(entity):
    return _sgd.get_entity_jx(entity)

def get_entity_jy(entity):
    return _sgd.get_entity_jy(entity)

def get_entity_jz(entity):
    return _sgd.get_entity_jz(entity)

def get_entity_kx(entity):
    return _sgd.get_entity_kx(entity)

def get_entity_ky(entity):
    return _sgd.get_entity_ky(entity)

def get_entity_kz(entity):
    return _sgd.get_entity_kz(entity)

def aim_entity_at_entity(entity, target, roll):
    return _sgd.aim_entity_at_entity(entity, target, roll)

def aim_entity_at_point(entity, x, y, z, roll):
    return _sgd.aim_entity_at_point(entity, x, y, z, roll)

def t_form_point(x, y, z, srcEntity, dstEntity):
    return _sgd.t_form_point(x, y, z, srcEntity, dstEntity)

def t_form_vector(x, y, z, srcEntity, dstEntity):
    return _sgd.t_form_vector(x, y, z, srcEntity, dstEntity)

def t_form_normal(x, y, z, srcEntity, dstEntity):
    return _sgd.t_form_normal(x, y, z, srcEntity, dstEntity)

def get_t_formed_x():
    return _sgd.get_t_formed_x()

def get_t_formed_y():
    return _sgd.get_t_formed_y()

def get_t_formed_z():
    return _sgd.get_t_formed_z()

def create_perspective_camera():
    return _sgd.create_perspective_camera()

def create_orthographic_camera():
    return _sgd.create_orthographic_camera()

def set_camera_fov(camera, fovY):
    return _sgd.set_camera_fov(camera, fovY)

def set_camera_near(camera, near):
    return _sgd.set_camera_near(camera, near)

def set_camera_far(camera, far):
    return _sgd.set_camera_far(camera, far)

def camera_project(camera, x, y, z):
    return _sgd.camera_project(camera, x, y, z)

def get_projected_x():
    return _sgd.get_projected_x()

def get_projected_y():
    return _sgd.get_projected_y()

def camera_unproject(camera, windowX, windowY, viewZ):
    return _sgd.camera_unproject(camera, windowX, windowY, viewZ)

def get_unprojected_x():
    return _sgd.get_unprojected_x()

def get_unprojected_y():
    return _sgd.get_unprojected_y()

def get_unprojected_z():
    return _sgd.get_unprojected_z()

def create_directional_light():
    return _sgd.create_directional_light()

def create_point_light():
    return _sgd.create_point_light()

def create_spot_light():
    return _sgd.create_spot_light()

def set_light_color(light, red, green, blue, alpha):
    return _sgd.set_light_color(light, red, green, blue, alpha)

def set_light_range(light, range):
    return _sgd.set_light_range(light, range)

def set_light_falloff(light, falloff):
    return _sgd.set_light_falloff(light, falloff)

def set_light_inner_cone_angle(light, angle):
    return _sgd.set_light_inner_cone_angle(light, angle)

def set_light_outer_cone_angle(light, angle):
    return _sgd.set_light_outer_cone_angle(light, angle)

def set_light_shadows_enabled(light, enabled):
    return _sgd.set_light_shadows_enabled(light, enabled)

def is_light_shadows_enabled(light):
    return _sgd.is_light_shadows_enabled(light)

def set_light_priority(light, priority):
    return _sgd.set_light_priority(light, priority)
ANIMATION_MODE_ONE_SHOT = _sgd.ANIMATION_MODE_ONE_SHOT
ANIMATION_MODE_LOOP = _sgd.ANIMATION_MODE_LOOP
ANIMATION_MODE_PING_PONG = _sgd.ANIMATION_MODE_PING_PONG

def load_model(path):
    return _sgd.load_model(path)

def load_boned_model(path, skinned):
    return _sgd.load_boned_model(path, skinned)

def create_model(mesh):
    return _sgd.create_model(mesh)

def set_model_mesh(model, mesh):
    return _sgd.set_model_mesh(model, mesh)

def get_model_mesh(model):
    return _sgd.get_model_mesh(model)

def set_model_color(model, red, green, blue, alpha):
    return _sgd.set_model_color(model, red, green, blue, alpha)

def animate_model(model, animation, time, mode, weight):
    return _sgd.animate_model(model, animation, time, mode, weight)

def load_skybox(path, roughness):
    return _sgd.load_skybox(path, roughness)

def create_skybox(texture):
    return _sgd.create_skybox(texture)

def set_skybox_texture(skybox, texture):
    return _sgd.set_skybox_texture(skybox, texture)

def set_skybox_roughness(skybox, roughness):
    return _sgd.set_skybox_roughness(skybox, roughness)

def create_sprite(image):
    return _sgd.create_sprite(image)

def set_sprite_image(sprite, image):
    return _sgd.set_sprite_image(sprite, image)

def set_sprite_color(sprite, red, green, blue, alpha):
    return _sgd.set_sprite_color(sprite, red, green, blue, alpha)

def set_sprite_frame(sprite, frame):
    return _sgd.set_sprite_frame(sprite, frame)
COLLISION_RESPONSE_NONE = _sgd.COLLISION_RESPONSE_NONE
COLLISION_RESPONSE_STOP = _sgd.COLLISION_RESPONSE_STOP
COLLISION_RESPONSE_SLIDE = _sgd.COLLISION_RESPONSE_SLIDE
COLLISION_RESPONSE_SLIDEXZ = _sgd.COLLISION_RESPONSE_SLIDEXZ

def create_sphere_collider(entity, colliderType, radius):
    return _sgd.create_sphere_collider(entity, colliderType, radius)

def create_ellipsoid_collider(entity, colliderType, radius, height):
    return _sgd.create_ellipsoid_collider(entity, colliderType, radius, height)

def create_mesh_collider(entity, colliderType, mesh):
    return _sgd.create_mesh_collider(entity, colliderType, mesh)

def get_collider_entity(collider):
    return _sgd.get_collider_entity(collider)

def set_collider_radius(collider, radius):
    return _sgd.set_collider_radius(collider, radius)

def set_collider_height(collider, height):
    return _sgd.set_collider_height(collider, height)

def enable_collisions(srcColliderType, dstColliderType, response):
    return _sgd.enable_collisions(srcColliderType, dstColliderType, response)

def update_colliders():
    return _sgd.update_colliders()

def get_collision_count(collider):
    return _sgd.get_collision_count(collider)

def get_collision_x(collider, index):
    return _sgd.get_collision_x(collider, index)

def get_collision_y(collider, index):
    return _sgd.get_collision_y(collider, index)

def get_collision_z(collider, index):
    return _sgd.get_collision_z(collider, index)

def get_collision_nx(collider, index):
    return _sgd.get_collision_nx(collider, index)

def get_collision_ny(collider, index):
    return _sgd.get_collision_ny(collider, index)

def get_collision_nz(collider, index):
    return _sgd.get_collision_nz(collider, index)

def camera_pick(camera, windowX, windowY, colliderMask):
    return _sgd.camera_pick(camera, windowX, windowY, colliderMask)

def line_pick(x0, y0, z0, x1, y1, z1, radius, colliderMask):
    return _sgd.line_pick(x0, y0, z0, x1, y1, z1, radius, colliderMask)

def get_picked_x():
    return _sgd.get_picked_x()

def get_picked_y():
    return _sgd.get_picked_y()

def get_picked_z():
    return _sgd.get_picked_z()

def get_picked_nx():
    return _sgd.get_picked_nx()

def get_picked_ny():
    return _sgd.get_picked_ny()

def get_picked_nz():
    return _sgd.get_picked_nz()

def create_bloom_effect():
    return _sgd.create_bloom_effect()

def create_blur_effect():
    return _sgd.create_blur_effect()

def set_blur_effect_radius(effect, radius):
    return _sgd.set_blur_effect_radius(effect, radius)

def create_fog_effect():
    return _sgd.create_fog_effect()

def set_fog_effect_color(effect, red, green, blue, alpha):
    return _sgd.set_fog_effect_color(effect, red, green, blue, alpha)

def set_fog_effect_range(effect, near, far):
    return _sgd.set_fog_effect_range(effect, near, far)

def set_fog_effect_power(effect, power):
    return _sgd.set_fog_effect_power(effect, power)

def create_monocolor_effect():
    return _sgd.create_monocolor_effect()

def set_monocolor_effect_color(effect, red, green, blue, alpha):
    return _sgd.set_monocolor_effect_color(effect, red, green, blue, alpha)

def set_render_effect_enabled(effect, enabled):
    return _sgd.set_render_effect_enabled(effect, enabled)

def is_render_effect_enabled(effect):
    return _sgd.is_render_effect_enabled(effect)
KEY_SPACE = _sgd.KEY_SPACE
KEY_APOSTROPHE = _sgd.KEY_APOSTROPHE
KEY_COMMA = _sgd.KEY_COMMA
KEY_MINUS = _sgd.KEY_MINUS
KEY_PERIOD = _sgd.KEY_PERIOD
KEY_SLASH = _sgd.KEY_SLASH
KEY_0 = _sgd.KEY_0
KEY_1 = _sgd.KEY_1
KEY_2 = _sgd.KEY_2
KEY_3 = _sgd.KEY_3
KEY_4 = _sgd.KEY_4
KEY_5 = _sgd.KEY_5
KEY_6 = _sgd.KEY_6
KEY_7 = _sgd.KEY_7
KEY_8 = _sgd.KEY_8
KEY_9 = _sgd.KEY_9
KEY_SEMICOLON = _sgd.KEY_SEMICOLON
KEY_EQUAL = _sgd.KEY_EQUAL
KEY_A = _sgd.KEY_A
KEY_B = _sgd.KEY_B
KEY_C = _sgd.KEY_C
KEY_D = _sgd.KEY_D
KEY_E = _sgd.KEY_E
KEY_F = _sgd.KEY_F
KEY_G = _sgd.KEY_G
KEY_H = _sgd.KEY_H
KEY_I = _sgd.KEY_I
KEY_J = _sgd.KEY_J
KEY_K = _sgd.KEY_K
KEY_L = _sgd.KEY_L
KEY_M = _sgd.KEY_M
KEY_N = _sgd.KEY_N
KEY_O = _sgd.KEY_O
KEY_P = _sgd.KEY_P
KEY_Q = _sgd.KEY_Q
KEY_R = _sgd.KEY_R
KEY_S = _sgd.KEY_S
KEY_T = _sgd.KEY_T
KEY_U = _sgd.KEY_U
KEY_V = _sgd.KEY_V
KEY_W = _sgd.KEY_W
KEY_X = _sgd.KEY_X
KEY_Y = _sgd.KEY_Y
KEY_Z = _sgd.KEY_Z
KEY_LEFT_BRACKET = _sgd.KEY_LEFT_BRACKET
KEY_BACKSLASH = _sgd.KEY_BACKSLASH
KEY_RIGHT_BRACKET = _sgd.KEY_RIGHT_BRACKET
KEY_GRAVE_ACCENT = _sgd.KEY_GRAVE_ACCENT
KEY_WORLD_1 = _sgd.KEY_WORLD_1
KEY_WORLD_2 = _sgd.KEY_WORLD_2
KEY_ESCAPE = _sgd.KEY_ESCAPE
KEY_ENTER = _sgd.KEY_ENTER
KEY_TAB = _sgd.KEY_TAB
KEY_BACKSPACE = _sgd.KEY_BACKSPACE
KEY_INSERT = _sgd.KEY_INSERT
KEY_DELETE = _sgd.KEY_DELETE
KEY_RIGHT = _sgd.KEY_RIGHT
KEY_LEFT = _sgd.KEY_LEFT
KEY_DOWN = _sgd.KEY_DOWN
KEY_UP = _sgd.KEY_UP
KEY_PAGE_UP = _sgd.KEY_PAGE_UP
KEY_PAGE_DOWN = _sgd.KEY_PAGE_DOWN
KEY_HOME = _sgd.KEY_HOME
KEY_END = _sgd.KEY_END
KEY_CAPS_LOCK = _sgd.KEY_CAPS_LOCK
KEY_SCROLL_LOCK = _sgd.KEY_SCROLL_LOCK
KEY_NUM_LOCK = _sgd.KEY_NUM_LOCK
KEY_PRINT_SCREEN = _sgd.KEY_PRINT_SCREEN
KEY_PAUSE = _sgd.KEY_PAUSE
KEY_F1 = _sgd.KEY_F1
KEY_F2 = _sgd.KEY_F2
KEY_F3 = _sgd.KEY_F3
KEY_F4 = _sgd.KEY_F4
KEY_F5 = _sgd.KEY_F5
KEY_F6 = _sgd.KEY_F6
KEY_F7 = _sgd.KEY_F7
KEY_F8 = _sgd.KEY_F8
KEY_F9 = _sgd.KEY_F9
KEY_F10 = _sgd.KEY_F10
KEY_F11 = _sgd.KEY_F11
KEY_F12 = _sgd.KEY_F12
KEY_F13 = _sgd.KEY_F13
KEY_F14 = _sgd.KEY_F14
KEY_F15 = _sgd.KEY_F15
KEY_F16 = _sgd.KEY_F16
KEY_F17 = _sgd.KEY_F17
KEY_F18 = _sgd.KEY_F18
KEY_F19 = _sgd.KEY_F19
KEY_F20 = _sgd.KEY_F20
KEY_F21 = _sgd.KEY_F21
KEY_F22 = _sgd.KEY_F22
KEY_F23 = _sgd.KEY_F23
KEY_F24 = _sgd.KEY_F24
KEY_F25 = _sgd.KEY_F25
KEY_KP_0 = _sgd.KEY_KP_0
KEY_KP_1 = _sgd.KEY_KP_1
KEY_KP_2 = _sgd.KEY_KP_2
KEY_KP_3 = _sgd.KEY_KP_3
KEY_KP_4 = _sgd.KEY_KP_4
KEY_KP_5 = _sgd.KEY_KP_5
KEY_KP_6 = _sgd.KEY_KP_6
KEY_KP_7 = _sgd.KEY_KP_7
KEY_KP_8 = _sgd.KEY_KP_8
KEY_KP_9 = _sgd.KEY_KP_9
KEY_KP_DECIMAL = _sgd.KEY_KP_DECIMAL
KEY_KP_DIVIDE = _sgd.KEY_KP_DIVIDE
KEY_KP_MULTIPLY = _sgd.KEY_KP_MULTIPLY
KEY_KP_SUBTRACT = _sgd.KEY_KP_SUBTRACT
KEY_KP_ADD = _sgd.KEY_KP_ADD
KEY_KP_ENTER = _sgd.KEY_KP_ENTER
KEY_KP_EQUAL = _sgd.KEY_KP_EQUAL
KEY_LEFT_SHIFT = _sgd.KEY_LEFT_SHIFT
KEY_LEFT_CONTROL = _sgd.KEY_LEFT_CONTROL
KEY_LEFT_ALT = _sgd.KEY_LEFT_ALT
KEY_LEFT_SUPER = _sgd.KEY_LEFT_SUPER
KEY_RIGHT_SHIFT = _sgd.KEY_RIGHT_SHIFT
KEY_RIGHT_CONTROL = _sgd.KEY_RIGHT_CONTROL
KEY_RIGHT_ALT = _sgd.KEY_RIGHT_ALT
KEY_RIGHT_SUPER = _sgd.KEY_RIGHT_SUPER
KEY_MENU = _sgd.KEY_MENU
KEY_LAST = _sgd.KEY_LAST
KEY_MODIFIER_SHIFT = _sgd.KEY_MODIFIER_SHIFT
KEY_MODIFIER_CONTROL = _sgd.KEY_MODIFIER_CONTROL
KEY_MODIFIER_ALT = _sgd.KEY_MODIFIER_ALT
KEY_MODIFIER_SUPER = _sgd.KEY_MODIFIER_SUPER
KEY_MODIFIER_CAPS_LOCK = _sgd.KEY_MODIFIER_CAPS_LOCK
KEY_MODIFIER_NUM_LOCK = _sgd.KEY_MODIFIER_NUM_LOCK
MOUSE_BUTTON_LEFT = _sgd.MOUSE_BUTTON_LEFT
MOUSE_BUTTON_RIGHT = _sgd.MOUSE_BUTTON_RIGHT
MOUSE_BUTTON_MIDDLE = _sgd.MOUSE_BUTTON_MIDDLE
GAMEPAD_BUTTON_A = _sgd.GAMEPAD_BUTTON_A
GAMEPAD_BUTTON_B = _sgd.GAMEPAD_BUTTON_B
GAMEPAD_BUTTON_X = _sgd.GAMEPAD_BUTTON_X
GAMEPAD_BUTTON_Y = _sgd.GAMEPAD_BUTTON_Y
GAMEPAD_BUTTON_LEFT_BUMPER = _sgd.GAMEPAD_BUTTON_LEFT_BUMPER
GAMEPAD_BUTTON_RIGHT_BUMPER = _sgd.GAMEPAD_BUTTON_RIGHT_BUMPER
GAMEPAD_BUTTON_BACK = _sgd.GAMEPAD_BUTTON_BACK
GAMEPAD_BUTTON_START = _sgd.GAMEPAD_BUTTON_START
GAMEPAD_BUTTON_GUIDE = _sgd.GAMEPAD_BUTTON_GUIDE
GAMEPAD_BUTTON_LEFT_THUMB = _sgd.GAMEPAD_BUTTON_LEFT_THUMB
GAMEPAD_BUTTON_RIGHT_THUMB = _sgd.GAMEPAD_BUTTON_RIGHT_THUMB
GAMEPAD_BUTTON_DPAD_UP = _sgd.GAMEPAD_BUTTON_DPAD_UP
GAMEPAD_BUTTON_DPAD_RIGHT = _sgd.GAMEPAD_BUTTON_DPAD_RIGHT
GAMEPAD_BUTTON_DPAD_DOWN = _sgd.GAMEPAD_BUTTON_DPAD_DOWN
GAMEPAD_BUTTON_DPAD_LEFT = _sgd.GAMEPAD_BUTTON_DPAD_LEFT
GAMEPAD_BUTTON_CROSS = _sgd.GAMEPAD_BUTTON_CROSS
GAMEPAD_BUTTON_CIRCLE = _sgd.GAMEPAD_BUTTON_CIRCLE
GAMEPAD_BUTTON_SQUARE = _sgd.GAMEPAD_BUTTON_SQUARE
GAMEPAD_BUTTON_TRIANGLE = _sgd.GAMEPAD_BUTTON_TRIANGLE
GAMEPAD_AXIS_LEFT_X = _sgd.GAMEPAD_AXIS_LEFT_X
GAMEPAD_AXIS_LEFT_Y = _sgd.GAMEPAD_AXIS_LEFT_Y
GAMEPAD_AXIS_RIGHT_X = _sgd.GAMEPAD_AXIS_RIGHT_X
GAMEPAD_AXIS_RIGHT_Y = _sgd.GAMEPAD_AXIS_RIGHT_Y
GAMEPAD_AXIS_LEFT_TRIGGER = _sgd.GAMEPAD_AXIS_LEFT_TRIGGER
GAMEPAD_AXIS_RIGHT_TRIGGER = _sgd.GAMEPAD_AXIS_RIGHT_TRIGGER

