- name: message
  debug:
    msg: "******************************start init k8s on master******************************"

- name: not apiserver_advertise_address
  set_fact:
    addr_cmd: ""
    image_repository: ""
    control_plane_cmd: ""

- name: get kubernets version
  shell: kubelet --version | awk '{print $2}'
  register: k8s_version

- name: set apiserver_advertise_address
  set_fact:
    addr_cmd: "--apiserver-advertise-address={{ k8s_api_server_ip }}"
  when:
    - k8s_api_server_ip != ""

- name: set control-plane-endpoint
  set_fact:
    control_plane_cmd: '--control-plane-endpoint "{{ KUBE_VIP }}:6443" --upload-certs'
  when:
    - groups['master'] | length > 2

- name: set k8s image repository
  set_fact:
    image_repository: "--image-repository={{ HARBOR_SERVER }}/{{ k8s_repo_name }}"
  when:
    - use_harbor

- name: init cluster by kubeadm init
  shell: >
    kubeadm init
    --kubernetes-version={{ k8s_version.stdout }}
    --node-name={{ NODE_NAME }}
    --service-cidr={{ KUBE_SERVICE_CIDR }}
    --pod-network-cidr={{ POD_NETWORK_CIDR }}
    {{ addr_cmd }} {{ image_repository }} {{ control_plane_cmd }}
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""

- name: create home kube directory with root
  file:
    path: "/root/.kube"
    state: directory
    owner: "root"
    group: "root"
    mode: 0750

- name: set cluster config with root
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/root/.kube/config"
    mode: "0640"
    owner: "root"
    group: "root"
    remote_src: yes

- name: remove coredns loop param
  shell: "kubectl get cm -n kube-system coredns -oyaml | sed '/loop/d' | kubectl apply -f -"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""

- name: create calico image pull secret
  shell: "kubectl create secret generic {{ KUBE_SYSTEM_SECRET_NAME }} --from-file=.dockerconfigjson=/root/.docker/config.json --type=kubernetes.io/dockerconfigjson -n kube-system"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when:
    - use_harbor


- name: create deploy directory on host
  file:
    path: "{{ CALICO_YAML_DIR }}"
    state: directory
    mode: 0750

- name: set calico_320 yaml
  template:
    src: "../../templates/calico_{{calico_version_3_20}}.yaml"
    dest: "{{ CALICO_YAML_DIR }}/calico_{{calico_version_3_20}}.yaml"
    mode: 0640
  when: use_old_k8s_version


- name: set calico_325 yaml
  template:
    src: "{{resource_dir}}/templates/calico_{{calico_version_3_25}}.yaml"
    dest: "{{ CALICO_YAML_DIR }}/calico_{{calico_version_3_25}}.yaml"
    mode: 0640
  when: not use_old_k8s_version

- name: set calico_325 yaml on ipv6
  template:
    src: "../../templates/calico_{{calico_version_3_25}}.ipv6.yaml"
    dest: "{{ CALICO_YAML_DIR }}/calico_{{calico_version_3_25}}.yaml"
    mode: 0640
  when: not use_old_k8s_version and working_on_ipv6=="true"

- name: apply 3.20 calico
  shell: "kubectl apply -f {{ CALICO_YAML_DIR }}/calico_{{calico_version_3_20}}.yaml"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: use_old_k8s_version

- name: change image to harbor for calico on 3.25
  shell: "sed -i 's#image: docker.io/calico#image: {{ HARBOR_SERVER }}/calico#g' {{ CALICO_YAML_DIR }}/calico_{{ calico_version_3_25 }}.yaml"
  when: not use_old_k8s_version and use_harbor

- name: apply 3.25 calico
  shell: "kubectl apply -f {{ CALICO_YAML_DIR }}/calico_{{calico_version_3_25}}.yaml"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: not use_old_k8s_version

- name: taint nodes
  shell: kubectl taint nodes --all node-role.kubernetes.io/control-plane-
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: not use_old_k8s_version

- name: taint nodes
  shell: kubectl taint nodes --all node-role.kubernetes.io/master-
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: use_old_k8s_version
