///Generated by Sideko (sideko.dev)
#[derive(Debug, thiserror::Error)]
pub enum Error<T> {
    #[error("Failed serializing json: {0} ")]
    Serialize(serde_json::Error),
    #[error("Failed sending http request: {0}")]
    Dispatch(reqwest::Error),
    #[error("Api Error status:{status_code:?}")]
    BlockingApiError {
        status_code: u16,
        method: String,
        url: String,
        response: reqwest::blocking::Response,
    },
    #[error("Api Error status:{status_code:?}")]
    ApiError {
        status_code: u16,
        method: String,
        url: String,
        response: reqwest::Response,
    },
    #[error("Response returned unsuccessful status code: {status_code:?}")]
    Response { status_code: u16, method: String, url: String, data: T },
    #[error("Failed extracting bytes from response: {0}")]
    ResponseBytes(reqwest::Error),
    #[error("Failed reading file: {0}")]
    File(std::io::Error),
}
pub type Result<T, E> = std::result::Result<T, Error<E>>;
