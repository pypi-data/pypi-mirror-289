# This workflow will upload a Python Package using Twine when a release is created
# It also changes automatically the version of pyproject.toml so that the version upload to pypi is the one from the release tag.

name: Upload Python Package

on:
  release:
    types:
      - "created"

permissions:
  contents: write

jobs:  
  build-and-push:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.DEPLOY_GH_TOKEN }}

    - id: get_version
      name: Get version
      uses: jannemattila/get-version-from-tag@v3
    - name: Write version of release to pyproject.toml
      run: |
        VERSION=$(echo "${{ steps.get_version.outputs.version }}")
        sed -i 's/version =.*/version = \"'"$VERSION"'\"/' pyproject.toml

    - name: Commit and push to master.
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        branch: master
        commit_message: Apply version to pyproject.toml
        file_pattern: pyproject.toml
        push_options: --force
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN_PT42API_WRAPPER }}
