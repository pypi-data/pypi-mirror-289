[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "eventiq-msgpack"
dynamic = ["version"]
description = "MessagePack encoder for eventiq"
readme = "README.md"
requires-python = ">=3.9"
license = "Apache-2.0"
keywords = []
authors = []
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Framework :: AsyncIO",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = ["ormsgpack>=1.2.5,<2.0", "eventiq>=1.0.0"]

[project.urls]
Documentation = "https://github.com/asynq-io/eventiq-msgpack#readme"
Issues = "https://github.com/asynq-io/eventiq-msgpack/issues"
Source = "https://github.com/asynq-io/eventiq-msgpack"

[tool.hatch.version]
path = "eventiq_msgpack/__about__.py"

[tool.hatch.envs.default]
dependencies = ["pytest", "pyyaml", "pytest-cov", "ruff", "mypy", "bandit"]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
check = [
    "ruff check ./eventiq_msgpack",
    "ruff format --check ./eventiq_msgpack",
    "mypy --install-types --non-interactive {args:eventiq_msgpack tests}",
    "bandit -r ./eventiq_msgpack",
]

[tool.coverage.run]
source_pkgs = ["eventiq_msgpack", "tests"]
branch = true
parallel = true
omit = ["eventiq_msgpack/__about__.py"]

[tool.coverage.paths]
package = ["eventiq_msgpack"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.pyright]
venvPath = ".venv"
venv = "eventiq-msgpack"

[tool.mypy]
python_version = "3.9"
disallow_untyped_defs = false
disallow_incomplete_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
warn_no_return = false
warn_unused_ignores = true

[tool.ruff]
target-version = "py39"

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "B008", # do not perform function calls in argument defaults
    "E501", # line too long
]

[tool.bandit]
skips = ['B101']
