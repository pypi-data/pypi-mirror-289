[tool.poetry]
name = "artix"
version = "0.0.dev2"
description = "A generic artifact management utility."
authors = ["celestialorb <chris.m.busby@gmail.com>"]
license = "MIT License"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
rich-click = "^1.8.3"
click = "^8.1.7"
dynaconf = "^3.2.6"
loguru = "^0.7.2"
packaging = "^24.1"
importlib-metadata = "^8.2.0"
requests = "^2.32.3"
tomli = "^2.0.1"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.27.0"
pytest = "^8.3.2"
pytest-repeat = "^0.9.3"
pytest-mypy = "^0.10.3"
pytest-cov = "^5.0.0"
ruff = "^0.5.6"
pytest-ruff = "^0.4.1"
pytest-parallel = "^0.1.1"
py = "^1.11.0"
pytest-timeout = "^2.3.1"
requests-mock = "^1.12.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
artix = "artix.cli:cli"

[tool.poe.tasks]
artix = "python artix/main.py"
clean = "git clean -dfX"
format = "ruff format"
hook = "pytest --count=1"
test = "pytest"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
--cov=artix
--cov-fail-under=100
--cov-report=xml:coverage.xml
--junit-xml=tests.xml
--mypy
--ruff
--ruff-format
--workers=auto
"""
testpaths = ["tests"]
timeout = 10

[tool.ruff.lint]
ignore = [
    "D203", # Ignore `one-blank-line-before-class` rule.
    "D213", # Ignore `multi-line-summary-second-line` rule.
]
select = ["ALL"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*.py" = ["INP001", "S101"]
