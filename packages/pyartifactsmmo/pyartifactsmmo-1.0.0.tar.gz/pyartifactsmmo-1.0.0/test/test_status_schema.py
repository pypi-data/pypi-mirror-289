# coding: utf-8

"""
    Artifacts API

     Artifacts is an API-based MMO game where you can manage 5 characters to explore, fight, gather resources, craft items and much more.  Website: https://artifactsmmo.com/  Documentation: https://docs.artifactsmmo.com/  OpenAPI Spec: https://api.artifactsmmo.com/openapi.json 

    The version of the OpenAPI document: 1.6
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pyartifactsmmo.models.status_schema import StatusSchema

class TestStatusSchema(unittest.TestCase):
    """StatusSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StatusSchema:
        """Test StatusSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StatusSchema`
        """
        model = StatusSchema()
        if include_optional:
            return StatusSchema(
                status = '',
                version = '',
                characters_online = 56,
                server_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                announcements = [
                    pyartifactsmmo.models.announcement_schema.AnnouncementSchema(
                        message = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                last_wipe = '',
                next_wipe = ''
            )
        else:
            return StatusSchema(
                status = '',
                last_wipe = '',
                next_wipe = '',
        )
        """

    def testStatusSchema(self):
        """Test StatusSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
