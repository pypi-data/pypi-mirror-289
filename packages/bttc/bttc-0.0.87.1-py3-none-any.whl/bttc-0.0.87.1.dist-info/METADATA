Metadata-Version: 2.1
Name: bttc
Version: 0.0.87.1
Summary: A package to provide common utilities for BT testing.
Home-page: https://github.com/johnklee/bt_test_common
Author: John Lee/Yuan Long Luo/Denny Chai
Author-email: puremonkey2007@gmail.com
License: MIT License
Classifier: Development Status :: 1 - Planning
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: PyYAML (==6.0.1)
Requires-Dist: cmd2 (==2.4.3)
Requires-Dist: deprecation (==2.1.0)
Requires-Dist: mobly (>=1.12.2)
Requires-Dist: numpy
Requires-Dist: portpicker (==1.6.0)
Requires-Dist: psutil (==5.9.8)
Requires-Dist: pure-python-adb (==0.3.0.dev0)
Requires-Dist: python-dotenv (==1.0.1)
Requires-Dist: six (==1.16.0)
Requires-Dist: snippet-uiautomator (>=1.1.0)

## Common utilities used in BT testing
This package is used to hold common utilities for BT testing.

## Installation
You can install the released package from pip:

```shell
$ pip install bttc
```

or download the source then run command below to use the latest version:

```shell
$ git clone https://github.com/johnklee/bt_test_common.git
$ cd bt_test_common
$ pip install .
```

You may need `sudo` for the above commands if your system has certain permission restrictions.

## Basic Usage

### Retrieve device
You can use function `get_all` to retrieve all local connected adb devices:

```shell
$ adb devices
List of devices attached
07311JECB08252  device
36121FDJG000GR  device

$ python
>>> import bttc
>>> devices = bttc.get_all()
>>> devices['07311JECB08252'].gm.sdk
34
```

Or use function `get` to retrieve a specific device by its serial number:

```shell
>>> import bttc
>>> dut = bttc.get('07311JECB08252', {'wifi'})
>>> dut.wifi.status()
<WifiStatus.ENABLED: 'enabled'>
```

### `dut.gm`: Utility used in general operations of device.
The `dut.gm` utility, loaded automatically when you access your device, streamlines common actions like:
- Getting/setting device properties
- Searching logcat messages
- Managing airplane mode
- Taking screenshots
- Dumping system information (build number, model, etc.)
- And more!


### `dut.mc`: Utility to support common Media control operations/methods.
The `dut.mc` utility, loaded automatically when you access your device, lets you control music playback and get its current state.


## Release info
* Release v0.0.87: #314, #313, #309, #307, #304, #301, #298
* Release v0.0.86: #291, #290, #283
* Release v0.0.85: #285, #284, #280
* Release v0.0.84: #270, #274, #188
* Release v0.0.83: #266, #264, #260, #259
* Release v0.0.82: #251, #248, #245, #187
* Release v0.0.81: #237, #238, #240
* Release v0.0.80: #230
* Release v0.0.79: #211, #222
* Release v0.0.78: #207, #209, #212, #213, #215, #217
* Release v0.0.77: #202
* Release v0.0.76: #198, #196, #194, #192
* Release v0.0.75: #64
* Release v0.0.74: #125, #159, #171, #173, #176, #178, #180
* Release v0.0.73: #158, #163
