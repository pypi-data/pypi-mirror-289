# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from lob.api_helper import APIHelper
from lob.configuration import Server
from lob.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from lob.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from lob.models.billing_group import BillingGroup
from lob.models.billing_groups_response import BillingGroupsResponse
from lob.exceptions.domains_0_error_1_exception import Domains0Error1Exception


class BillingGroupsController(BaseController):

    """A Controller to access Endpoints in the lob API."""
    def __init__(self, config):
        super(BillingGroupsController, self).__init__(config)

    def billing_group_retrieve(self,
                               bg_id):
        """Does a GET request to /billing_groups/{bg_id}.

        Retrieves the details of an existing billing_group. You need only
        supply the unique billing_group identifier that was returned upon
        billing_group creation.

        Args:
            bg_id (str): id of the billing_group

        Returns:
            BillingGroup: Response from the API. Returns a billing_group
                object.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/billing_groups/{bg_id}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('bg_id')
                            .value(bg_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basicAuth'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(BillingGroup.from_dictionary)
            .local_error('default', 'Error', Domains0Error1Exception)
        ).execute()

    def billing_group_update(self,
                             bg_id,
                             content_type,
                             description=None,
                             name=None):
        """Does a POST request to /billing_groups/{bg_id}.

        Updates all editable attributes of the billing_group with the given
        id.

        Args:
            bg_id (str): id of the billing_group
            content_type (ContentTypeEnum): TODO: type description here.
            description (str, optional): Description of the billing group.
            name (str, optional): Name of the billing group.

        Returns:
            BillingGroup: Response from the API. Returns a billing group
                object

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/billing_groups/{bg_id}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('bg_id')
                            .value(bg_id)
                            .should_encode(True))
            .form_param(Parameter()
                        .key('description')
                        .value(description))
            .form_param(Parameter()
                        .key('name')
                        .value(name))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basicAuth'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(BillingGroup.from_dictionary)
            .local_error('default', 'Error', Domains0Error1Exception)
        ).execute()

    def billing_groups_list(self,
                            limit=10,
                            offset=0,
                            include=None,
                            date_created=None,
                            date_modified=None,
                            sort_by=None):
        """Does a GET request to /billing_groups.

        Returns a list of your billing_groups. The billing_groups are returned
        sorted by creation date, with the most recently created billing_groups
        appearing first.

        Args:
            limit (int, optional): How many results to return.
            offset (int, optional): An integer that designates the offset at
                which to begin returning results. Defaults to 0.
            include (List[str], optional): Request that the response include
                the total count by specifying `include=["total_count"]`.
            date_created (Dict[str, str], optional): Filter by date created.
                Accepted formats are ISO-8601 date or datetime, e.g. `{ "gt":
                "2012-01-01", "lt": "2012-01-31T12:34:56Z" }` where `gt` is >,
                `lt` is <, `gte` is â‰¥, and `lte` is â‰¤.
            date_modified (Dict[str, str], optional): Filter by date modified.
                Accepted formats are ISO-8601 date or datetime, e.g. `{ "gt":
                "2012-01-01", "lt": "2012-01-31T12:34:56Z" }` where `gt` is >,
                `lt` is <, `gte` is â‰¥, and `lte` is â‰¤.
            sort_by (SortBy, optional): Sorts items by ascending or descending
                dates. Use either `date_created` or `date_modified`, not
                both.

        Returns:
            BillingGroupsResponse: Response from the API. Returns a list of
                billing_groups.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/billing_groups')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('limit')
                         .value(limit))
            .query_param(Parameter()
                         .key('offset')
                         .value(offset))
            .query_param(Parameter()
                         .key('include')
                         .value(include))
            .query_param(Parameter()
                         .key('date_created')
                         .value(date_created))
            .query_param(Parameter()
                         .key('date_modified')
                         .value(date_modified))
            .query_param(Parameter()
                         .key('sort_by')
                         .value(sort_by))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basicAuth'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(BillingGroupsResponse.from_dictionary)
            .local_error('default', 'Error', Domains0Error1Exception)
        ).execute()

    def billing_group_create(self,
                             body):
        """Does a POST request to /billing_groups.

        Creates a new billing_group with the provided properties.

        Args:
            body (BillingGroupEditable): TODO: type description here.

        Returns:
            BillingGroup: Response from the API. Returns a billing group
                object

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/billing_groups')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('basicAuth'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(BillingGroup.from_dictionary)
            .local_error('default', 'Error', Domains0Error1Exception)
        ).execute()
