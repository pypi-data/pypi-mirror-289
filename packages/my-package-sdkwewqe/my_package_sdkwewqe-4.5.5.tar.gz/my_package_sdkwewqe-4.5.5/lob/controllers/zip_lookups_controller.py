# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from lob.api_helper import APIHelper
from lob.configuration import Server
from lob.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from lob.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from lob.models.zip import Zip
from lob.exceptions.domains_0_error_1_exception import Domains0Error1Exception


class ZipLookupsController(BaseController):

    """A Controller to access Endpoints in the lob API."""
    def __init__(self, config):
        super(ZipLookupsController, self).__init__(config)

    def zip_lookup(self,
                   content_type,
                   zip_code):
        """Does a POST request to /us_zip_lookups.

        Returns information about a ZIP code

        Args:
            content_type (ContentTypeEnum): TODO: type description here.
            zip_code (str): A 5-digit ZIP code.

        Returns:
            Zip: Response from the API. Returns a zip lookup object if a valid
                zip was provided.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/us_zip_lookups')
            .http_method(HttpMethodEnum.POST)
            .form_param(Parameter()
                        .key('zip_code')
                        .value(zip_code))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basicAuth'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Zip.from_dictionary)
            .local_error('default', 'Error', Domains0Error1Exception)
        ).execute()
