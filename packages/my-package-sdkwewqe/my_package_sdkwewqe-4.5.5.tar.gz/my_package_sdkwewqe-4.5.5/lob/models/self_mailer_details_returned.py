# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lob.api_helper import APIHelper


class SelfMailerDetailsReturned(object):

    """Implementation of the 'self_mailer_details_returned' model.

    Properties that the self mailers in your Creative should have. Check
    within in order to add a QR code to your creative.

    Attributes:
        mail_type (MailTypeEnum): TODO: type description here.
        size (SelfMailerSizeEnum): TODO: type description here.
        inside_original_url (str): The original URL of the `inside` template.
        outside_original_url (str): The original URL of the `outside`
            template.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mail_type": 'mail_type',
        "size": 'size',
        "inside_original_url": 'inside_original_url',
        "outside_original_url": 'outside_original_url'
    }

    _optionals = [
        'mail_type',
        'size',
        'inside_original_url',
        'outside_original_url',
    ]

    def __init__(self,
                 mail_type=APIHelper.SKIP,
                 size=APIHelper.SKIP,
                 inside_original_url=APIHelper.SKIP,
                 outside_original_url=APIHelper.SKIP):
        """Constructor for the SelfMailerDetailsReturned class"""

        # Initialize members of the class
        if mail_type is not APIHelper.SKIP:
            self.mail_type = mail_type 
        if size is not APIHelper.SKIP:
            self.size = size 
        if inside_original_url is not APIHelper.SKIP:
            self.inside_original_url = inside_original_url 
        if outside_original_url is not APIHelper.SKIP:
            self.outside_original_url = outside_original_url 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mail_type = dictionary.get("mail_type") if dictionary.get("mail_type") else APIHelper.SKIP
        size = dictionary.get("size") if dictionary.get("size") else APIHelper.SKIP
        inside_original_url = dictionary.get("inside_original_url") if dictionary.get("inside_original_url") else APIHelper.SKIP
        outside_original_url = dictionary.get("outside_original_url") if dictionary.get("outside_original_url") else APIHelper.SKIP
        # Return an object of this model
        return cls(mail_type,
                   size,
                   inside_original_url,
                   outside_original_url)
