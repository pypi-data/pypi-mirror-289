# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Name1Enum(object):

    """Implementation of the 'Name1' enum.

    Name of tracking event for Certified letters. Letters sent with USPS
    Certified Mail are fully tracked by USPS, therefore their tracking events
    have an additional details object with more detailed information about the
    tracking event. Some certified tracking event names have multiple
    meanings, noted in the list here. See the description of the details
    object for the full set of combined certified tracking event name
    meanings.
      * `Mailed` - Package has been accepted into the carrier network for
      delivery.
      * `In Transit` - Maps to four distinct stages of transit.
      * `In Local Area` - Package is at a location near the end destination.
      * `Processed for Delivery` - Maps to two distinct stages of delivery.
      * `Pickup Available` - Package is available for pickup at carrier
      location.
      * `Delivered` - Package has been delivered.
      * `Re-Routed` - Package has been forwarded.
      * `Returned to Sender` - Package is to be returned to sender.
      * `Issue` - Maps to (at least) 15 possible issues, some of which are
      actionable.

    Attributes:
        MAILED: TODO: type description here.
        ENUM_IN TRANSIT: TODO: type description here.
        ENUM_IN LOCAL AREA: TODO: type description here.
        ENUM_PROCESSED FOR DELIVERY: TODO: type description here.
        ENUM_PICKUP AVAILABLE: TODO: type description here.
        DELIVERED: TODO: type description here.
        REROUTED: TODO: type description here.
        ENUM_RETURNED TO SENDER: TODO: type description here.
        ISSUE: TODO: type description here.

    """
    _all_values = ['Mailed', 'In Transit', 'In Local Area', 'Processed for Delivery', 'Pickup Available', 'Delivered', 'Re-Routed', 'Returned to Sender', 'Issue']
    MAILED = 'Mailed'

    ENUM_IN_TRANSIT = 'In Transit'

    ENUM_IN_LOCAL_AREA = 'In Local Area'

    ENUM_PROCESSED_FOR_DELIVERY = 'Processed for Delivery'

    ENUM_PICKUP_AVAILABLE = 'Pickup Available'

    DELIVERED = 'Delivered'

    REROUTED = 'Re-Routed'

    ENUM_RETURNED_TO_SENDER = 'Returned to Sender'

    ISSUE = 'Issue'

    @classmethod
    def validate(cls, value):
        """Validates value contains in enum

        Args:
            value: the value to be validated

        Returns:
            boolean : if value is valid enum values.

        """
        return value in cls._all_values
   