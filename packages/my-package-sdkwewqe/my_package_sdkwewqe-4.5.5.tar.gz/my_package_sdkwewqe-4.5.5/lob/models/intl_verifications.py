# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lob.api_helper import APIHelper


class IntlVerifications(object):

    """Implementation of the 'intl_verifications' model.

    TODO: type model description here.

    Attributes:
        addresses (List[IntlVerification | Error]): TODO: type description
            here.
        errors (bool): Indicates whether any errors occurred during the
            verification process.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "addresses": 'addresses',
        "errors": 'errors'
    }

    def __init__(self,
                 addresses=None,
                 errors=None):
        """Constructor for the IntlVerifications class"""

        # Initialize members of the class
        self.addresses = addresses 
        self.errors = errors 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        from lob.utilities.union_type_lookup import UnionTypeLookUp

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        addresses = APIHelper.deserialize_union_type(UnionTypeLookUp.get('IntlVerificationsAddresses'), dictionary.get('addresses'), False) if dictionary.get('addresses') is not None else None
        errors = dictionary.get("errors") if "errors" in dictionary.keys() else None
        # Return an object of this model
        return cls(addresses,
                   errors)

    @classmethod
    def validate(cls, dictionary):
        """Validates dictionary against class required properties

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            boolean : if dictionary is valid contains required properties.

        """
        from lob.utilities.union_type_lookup import UnionTypeLookUp

        if isinstance(dictionary, cls):
            return UnionTypeLookUp.get('IntlVerificationsAddresses').validate(dictionary.addresses).is_valid \
                and APIHelper.is_valid_type(value=dictionary.errors,
                                            type_callable=lambda value: isinstance(value, bool))

        if not isinstance(dictionary, dict):
            return False

        return UnionTypeLookUp.get('IntlVerificationsAddresses').validate(dictionary.get('addresses')).is_valid \
            and APIHelper.is_valid_type(value=dictionary.get('errors'),
                                        type_callable=lambda value: isinstance(value, bool))
