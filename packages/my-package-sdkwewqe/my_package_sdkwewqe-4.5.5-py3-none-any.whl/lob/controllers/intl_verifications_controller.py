# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from lob.api_helper import APIHelper
from lob.configuration import Server
from lob.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from lob.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from lob.models.intl_verifications import IntlVerifications
from lob.models.intl_verification import IntlVerification
from lob.exceptions.domains_0_error_1_exception import Domains0Error1Exception


class IntlVerificationsController(BaseController):

    """A Controller to access Endpoints in the lob API."""
    def __init__(self, config):
        super(IntlVerificationsController, self).__init__(config)

    def bulk_intl_verifications(self,
                                content_type,
                                addresses):
        """Does a POST request to /bulk/intl_verifications.

        Verify a list of international (except US or US territories) address
        _with a live API key_. Requests to this endpoint with a test API key
        will return a dummy response based on the primary line you input.

        Args:
            content_type (ContentTypeEnum): TODO: type description here.
            addresses (List[MultipleComponentsIntl]): TODO: type description
                here.

        Returns:
            IntlVerifications: Response from the API. Returns an array of
                international verification objects.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/bulk/intl_verifications')
            .http_method(HttpMethodEnum.POST)
            .form_param(Parameter()
                        .key('addresses')
                        .value(addresses))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basicAuth'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(IntlVerifications.from_dictionary)
            .local_error('default', 'Error', Domains0Error1Exception)
        ).execute()

    def intl_verification(self,
                          body,
                          x_lang_output=None):
        """Does a POST request to /intl_verifications.

        Verify an international (except US or US territories) address _with a
        live API key_. Requests to this endpoint with a test API key will
        return a dummy response based on the primary line you input.

        Args:
            body (object): TODO: type description here.
            x_lang_output (XLangOutput1Enum, optional): * `native` - Translate
                response to the native language of the country in the request
                * `match` - match the response to the language in the request 
                Default response is in English.

        Returns:
            IntlVerification: Response from the API. Returns an international
                verification object.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/intl_verifications')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('x-lang-output')
                          .value(x_lang_output))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('basicAuth'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(IntlVerification.from_dictionary)
            .local_error('default', 'Error', Domains0Error1Exception)
        ).execute()
