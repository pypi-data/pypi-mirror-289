# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class RequiredAddressColumnMapping(object):

    """Implementation of the 'RequiredAddressColumnMapping' model.

    TODO: type model description here.

    Attributes:
        name (str): The column header from the csv file that should be mapped
            to the required field `name`
        address_line_1 (str): The column header from the csv file that should
            be mapped to the required field `address_line1`
        address_city (str): The column header from the csv file that should be
            mapped to the required field `address_city`
        address_state (str): The column header from the csv file that should
            be mapped to the required field `address_state`
        address_zip (str): The column header from the csv file that should be
            mapped to the required field `address_zip`

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "address_line_1": 'address_line1',
        "address_city": 'address_city',
        "address_state": 'address_state',
        "address_zip": 'address_zip'
    }

    _nullables = [
        'name',
        'address_line_1',
        'address_city',
        'address_state',
        'address_zip',
    ]

    def __init__(self,
                 name=None,
                 address_line_1=None,
                 address_city=None,
                 address_state=None,
                 address_zip=None):
        """Constructor for the RequiredAddressColumnMapping class"""

        # Initialize members of the class
        self.name = name 
        self.address_line_1 = address_line_1 
        self.address_city = address_city 
        self.address_state = address_state 
        self.address_zip = address_zip 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get("name") if dictionary.get("name") else None
        address_line_1 = dictionary.get("address_line1") if dictionary.get("address_line1") else None
        address_city = dictionary.get("address_city") if dictionary.get("address_city") else None
        address_state = dictionary.get("address_state") if dictionary.get("address_state") else None
        address_zip = dictionary.get("address_zip") if dictionary.get("address_zip") else None
        # Return an object of this model
        return cls(name,
                   address_line_1,
                   address_city,
                   address_state,
                   address_zip)
