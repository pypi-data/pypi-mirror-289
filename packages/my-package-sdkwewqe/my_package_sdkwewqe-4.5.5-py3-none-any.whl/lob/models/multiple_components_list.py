# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lob.models.multiple_components import MultipleComponents


class MultipleComponentsList(object):

    """Implementation of the 'multiple_components_list' model.

    TODO: type model description here.

    Attributes:
        addresses (List[MultipleComponents]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "addresses": 'addresses'
    }

    def __init__(self,
                 addresses=None):
        """Constructor for the MultipleComponentsList class"""

        # Initialize members of the class
        self.addresses = addresses 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        addresses = None
        if dictionary.get('addresses') is not None:
            addresses = [MultipleComponents.from_dictionary(x) for x in dictionary.get('addresses')]
        # Return an object of this model
        return cls(addresses)
