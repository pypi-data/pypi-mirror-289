# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lob.api_helper import APIHelper


class InputFromUs(object):

    """Implementation of the 'input_from_us' model.

    TODO: type model description here.

    Attributes:
        mfrom (str | InlineAddressUs | None): *Required* if `to` address is
            international. Must either be an address ID or an inline object
            with correct address parameters. Must either be an address ID or
            an inline object with correct address parameters. All addresses
            will be standardized into uppercase without being modified by
            verification.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mfrom": 'from'
    }

    _optionals = [
        'mfrom',
    ]

    def __init__(self,
                 mfrom=APIHelper.SKIP):
        """Constructor for the InputFromUs class"""

        # Initialize members of the class
        if mfrom is not APIHelper.SKIP:
            self.mfrom = mfrom 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        from lob.utilities.union_type_lookup import UnionTypeLookUp

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mfrom = APIHelper.deserialize_union_type(UnionTypeLookUp.get('InputFromUsFrom'), dictionary.get('from'), False) if dictionary.get('from') is not None else APIHelper.SKIP
        # Return an object of this model
        return cls(mfrom)
