# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class SortBy1(object):

    """Implementation of the 'sort_by1' model.

    TODO: type model description here.

    Attributes:
        date_created (DateCreatedEnum): TODO: type description here.
        send_date (DateCreatedEnum): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "date_created": 'date_created',
        "send_date": 'send_date'
    }

    def __init__(self,
                 date_created=None,
                 send_date=None):
        """Constructor for the SortBy1 class"""

        # Initialize members of the class
        self.date_created = date_created 
        self.send_date = send_date 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        send_date = dictionary.get("send_date") if dictionary.get("send_date") else None
        # Return an object of this model
        return cls(date_created,
                   send_date)
