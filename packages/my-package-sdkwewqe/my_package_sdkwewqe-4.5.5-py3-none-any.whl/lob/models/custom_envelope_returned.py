# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CustomEnvelopeReturned(object):

    """Implementation of the 'custom_envelope_returned' model.

    A nested custom envelope object containing more information about the
    custom envelope used or `null` if a custom envelope was not used.

    Attributes:
        id (str): The unique identifier of the custom envelope used.
        url (str): The url of the envelope asset used.
        object (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "url": 'url',
        "object": 'object'
    }

    def __init__(self,
                 id=None,
                 url=None):
        """Constructor for the CustomEnvelopeReturned class"""

        # Initialize members of the class
        self.id = id 
        self.url = url 
        self.object = 'envelope' 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else None
        url = dictionary.get("url") if dictionary.get("url") else None
        # Return an object of this model
        return cls(id,
                   url)
