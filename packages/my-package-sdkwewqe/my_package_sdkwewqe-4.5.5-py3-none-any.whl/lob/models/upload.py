# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lob.api_helper import APIHelper
from lob.models.metadata_1 import Metadata1
from lob.models.optional_address_column_mapping import OptionalAddressColumnMapping
from lob.models.required_address_column_mapping import RequiredAddressColumnMapping


class Upload(object):

    """Implementation of the 'upload' model.

    TODO: type model description here.

    Attributes:
        campaign_id (str): TODO: type description here.
        required_address_column_mapping (RequiredAddressColumnMapping): TODO:
            type description here.
        optional_address_column_mapping (OptionalAddressColumnMapping): TODO:
            type description here.
        metadata (Metadata1): TODO: type description here.
        merge_variable_column_mapping (object): The mapping of column headers
            in your file to the merge variables present in your creative. See
            our <a
            href="https://help.lob.com/print-and-mail/building-a-mail-strategy/
            campaign-or-triggered-sends/campaign-audience-guide#step-3-map-merg
            e-variable-data-if-applicable-7" target="_blank">Campaign Audience
            Guide</a> for additional details. <br />If a merge variable has
            the same "name" as a "key" in the `requiredAddressColumnMapping`
            or `optionalAddressColumnMapping` objects, then they **CANNOT**
            have a different value in this object. If a different value is
            provided, then when the campaign is processing it will get
            overwritten with the mapped value present in the
            `requiredAddressColumnMapping` or `optionalAddressColumnMapping`
            objects. If using customized QR code redirect from the Audience
            file, then a `qr_code_redirect_url` must be mapped to the column
            header as used in the CSV.
        id (str): Unique identifier prefixed with `upl_`.
        account_id (str): Account ID that made the request
        mode (ModeEnum): TODO: type description here.
        failures_url (str): Url where your campaign mailpiece failures can be
            retrieved
        original_filename (str): Filename of the upload
        state (UploadStateEnum): TODO: type description here.
        total_mailpieces (int): Total number of recipients for the campaign
        failed_mailpieces (int): Number of mailpieces that failed to create
        validated_mailpieces (int): Number of mailpieces that were
            successfully created
        bytes_processed (int): Number of bytes processed in your CSV
        date_created (datetime): A timestamp in ISO 8601 format of the date
            the upload was created
        date_modified (datetime): A timestamp in ISO 8601 format of the date
            the upload was last modified

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "campaign_id": 'campaignId',
        "required_address_column_mapping": 'requiredAddressColumnMapping',
        "optional_address_column_mapping": 'optionalAddressColumnMapping',
        "metadata": 'metadata',
        "merge_variable_column_mapping": 'mergeVariableColumnMapping',
        "id": 'id',
        "account_id": 'accountId',
        "mode": 'mode',
        "state": 'state',
        "total_mailpieces": 'totalMailpieces',
        "failed_mailpieces": 'failedMailpieces',
        "validated_mailpieces": 'validatedMailpieces',
        "bytes_processed": 'bytesProcessed',
        "date_created": 'dateCreated',
        "date_modified": 'dateModified',
        "failures_url": 'failuresUrl',
        "original_filename": 'originalFilename'
    }

    _optionals = [
        'failures_url',
        'original_filename',
    ]

    _nullables = [
        'merge_variable_column_mapping',
    ]

    def __init__(self,
                 campaign_id=None,
                 required_address_column_mapping=None,
                 optional_address_column_mapping=None,
                 metadata=None,
                 merge_variable_column_mapping=None,
                 id=None,
                 account_id=None,
                 mode=None,
                 state=None,
                 total_mailpieces=None,
                 failed_mailpieces=None,
                 validated_mailpieces=None,
                 bytes_processed=None,
                 date_created=None,
                 date_modified=None,
                 failures_url=APIHelper.SKIP,
                 original_filename=APIHelper.SKIP):
        """Constructor for the Upload class"""

        # Initialize members of the class
        self.campaign_id = campaign_id 
        self.required_address_column_mapping = required_address_column_mapping 
        self.optional_address_column_mapping = optional_address_column_mapping 
        self.metadata = metadata 
        self.merge_variable_column_mapping = merge_variable_column_mapping 
        self.id = id 
        self.account_id = account_id 
        self.mode = mode 
        if failures_url is not APIHelper.SKIP:
            self.failures_url = failures_url 
        if original_filename is not APIHelper.SKIP:
            self.original_filename = original_filename 
        self.state = state 
        self.total_mailpieces = total_mailpieces 
        self.failed_mailpieces = failed_mailpieces 
        self.validated_mailpieces = validated_mailpieces 
        self.bytes_processed = bytes_processed 
        self.date_created = APIHelper.apply_datetime_converter(date_created, APIHelper.RFC3339DateTime) if date_created else None 
        self.date_modified = APIHelper.apply_datetime_converter(date_modified, APIHelper.RFC3339DateTime) if date_modified else None 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        campaign_id = dictionary.get("campaignId") if dictionary.get("campaignId") else None
        required_address_column_mapping = RequiredAddressColumnMapping.from_dictionary(dictionary.get('requiredAddressColumnMapping')) if dictionary.get('requiredAddressColumnMapping') else None
        optional_address_column_mapping = OptionalAddressColumnMapping.from_dictionary(dictionary.get('optionalAddressColumnMapping')) if dictionary.get('optionalAddressColumnMapping') else None
        metadata = Metadata1.from_dictionary(dictionary.get('metadata')) if dictionary.get('metadata') else None
        merge_variable_column_mapping = dictionary.get("mergeVariableColumnMapping") if dictionary.get("mergeVariableColumnMapping") else None
        id = dictionary.get("id") if dictionary.get("id") else None
        account_id = dictionary.get("accountId") if dictionary.get("accountId") else None
        mode = dictionary.get("mode") if dictionary.get("mode") else None
        state = dictionary.get("state") if dictionary.get("state") else None
        total_mailpieces = dictionary.get("totalMailpieces") if dictionary.get("totalMailpieces") else None
        failed_mailpieces = dictionary.get("failedMailpieces") if dictionary.get("failedMailpieces") else None
        validated_mailpieces = dictionary.get("validatedMailpieces") if dictionary.get("validatedMailpieces") else None
        bytes_processed = dictionary.get("bytesProcessed") if dictionary.get("bytesProcessed") else None
        date_created = APIHelper.RFC3339DateTime.from_value(dictionary.get("dateCreated")).datetime if dictionary.get("dateCreated") else None
        date_modified = APIHelper.RFC3339DateTime.from_value(dictionary.get("dateModified")).datetime if dictionary.get("dateModified") else None
        failures_url = dictionary.get("failuresUrl") if dictionary.get("failuresUrl") else APIHelper.SKIP
        original_filename = dictionary.get("originalFilename") if dictionary.get("originalFilename") else APIHelper.SKIP
        # Return an object of this model
        return cls(campaign_id,
                   required_address_column_mapping,
                   optional_address_column_mapping,
                   metadata,
                   merge_variable_column_mapping,
                   id,
                   account_id,
                   mode,
                   state,
                   total_mailpieces,
                   failed_mailpieces,
                   validated_mailpieces,
                   bytes_processed,
                   date_created,
                   date_modified,
                   failures_url,
                   original_filename)
