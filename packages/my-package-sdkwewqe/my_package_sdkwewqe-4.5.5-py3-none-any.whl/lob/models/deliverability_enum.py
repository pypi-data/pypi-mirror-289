# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class DeliverabilityEnum(object):

    """Implementation of the 'Deliverability' enum.

    Summarizes the deliverability of the `us_verification` object.
    For full details, see the `deliverability_analysis` field. Possible values
    are:
    * `deliverable` – The address is deliverable by the USPS.
    * `deliverable_unnecessary_unit` – The address is deliverable, but the
    secondary unit information is unnecessary.
    * `deliverable_incorrect_unit` – The address is deliverable to the
    building's default address but the secondary unit provided may not exist.
    There is a chance the mail will not reach the intended recipient.
    * `deliverable_missing_unit` – The address is deliverable to the
    building's default address but is missing secondary unit information.
    There is a chance the mail will not reach the intended recipient.
    * `undeliverable` – The address is not deliverable according to the USPS.

    Attributes:
        DELIVERABLE: TODO: type description here.
        DELIVERABLE_UNNECESSARY_UNIT: TODO: type description here.
        DELIVERABLE_INCORRECT_UNIT: TODO: type description here.
        DELIVERABLE_MISSING_UNIT: TODO: type description here.
        UNDELIVERABLE: TODO: type description here.

    """
    _all_values = ['deliverable', 'deliverable_unnecessary_unit', 'deliverable_incorrect_unit', 'deliverable_missing_unit', 'undeliverable']
    DELIVERABLE = 'deliverable'

    DELIVERABLE_UNNECESSARY_UNIT = 'deliverable_unnecessary_unit'

    DELIVERABLE_INCORRECT_UNIT = 'deliverable_incorrect_unit'

    DELIVERABLE_MISSING_UNIT = 'deliverable_missing_unit'

    UNDELIVERABLE = 'undeliverable'

    @classmethod
    def validate(cls, value):
        """Validates value contains in enum

        Args:
            value: the value to be validated

        Returns:
            boolean : if value is valid enum values.

        """
        return value in cls._all_values
   