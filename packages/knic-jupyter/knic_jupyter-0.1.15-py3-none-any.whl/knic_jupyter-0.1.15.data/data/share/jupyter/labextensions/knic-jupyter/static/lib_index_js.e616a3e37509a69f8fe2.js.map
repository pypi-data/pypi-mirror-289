{"version":3,"file":"lib_index_js.e616a3e37509a69f8fe2.js","mappings":"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","sources":["webpack://knic-jupyter/./src/index.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { Cell, ICellModel } from '@jupyterlab/cells';\nimport {\n  ICodeCell,\n  IError,\n  IOutput,\n  IStream,\n  MultilineString\n} from '@jupyterlab/nbformat';\nimport {\n  INotebookTracker,\n  KernelError,\n  Notebook,\n  NotebookActions,\n  NotebookPanel\n} from '@jupyterlab/notebook';\nimport { UUID } from '@lumino/coreutils';\nimport axios from 'axios';\n\n/**\n * Supported Jupyter Lab events in knic-jupyter\n */\n\nconst JUPYTER_LOADED_EVENT = 'JUPYTER_LOADED';\nconst NOTEBOOK_OPENED_EVENT = 'NOTEBOOK_OPENED';\nconst NOTEBOOK_LOADED_EVENT = 'NOTEBOOK_LOADED';\nconst CELL_SELECTED_EVENT = 'CELL_SELECTED';\nconst NOTEBOOK_MODIFIED_EVENT = 'NOTEBOOK_MODIFIED';\nconst CELL_EXECUTION_BEGIN_EVENT = 'CELL_EXECUTION_BEGIN';\nconst CELL_EXECUTED_END_EVENT = 'CELL_EXECUTION_END';\n\n// CELL MODIFIED EVENT\nconst CELL_MODIFIED_EVENT = 'CELL_MODIFIED';\nconst CELL_MODIFIED_EVENT_TIMEOUT = 1000; // 1 second\nconst CELL_MODIFIED_EVENT_INTERVAL = 3000; // 3 seconds\nlet CELL_MODIFIED_EVENT_INTERVAL_ID: any;\nlet CELL_MODIFIED_EVENT_TIMEOUT_ID: any;\n\n/**\n * Initialization data for knic-jupyter\n */\nconst USER = new URLSearchParams(window.location.search).get('userid');\nconst SESSION = new URLSearchParams(window.location.search).get('sessionid');\nconst SERVER_ENDPOINT = `http://localhost:5642/knic/user/${USER}/event`;\n\nlet ENUMERATION = 0;\nlet NOTEBOOK_NAME: string = '';\nlet NOTEBOOK_SESSION = UUID.uuid4();\n\nlet ORIGINAL_CELL_DATA: any[] = [];\n\ninterface ICellData {\n  cellId: string;\n  type: string;\n  value: string;\n  metadata: any;\n}\n\ninterface IErrorData {\n  errorName: string;\n  errorText: string;\n  stackTrace: string[];\n}\n\ninterface IEventData {\n  notebookName: string;\n  location: string;\n}\n\ninterface IJupyterLoaded {\n  location: string;\n}\n\ninterface ICellSelected extends IEventData {\n  cell: ICellData;\n}\n\ninterface ICellModifiedExecuted extends IEventData {\n  cell: ICellData;\n  isCellModified: boolean;\n}\n\ninterface ICellModified extends IEventData {\n  cell: ICellData;\n  changeEvents: ICellData[];\n}\n\ninterface INotebookModified extends IEventData {\n  cells: ICellData[];\n}\n\ninterface ICellExecutionBegin extends IEventData {\n  cell: ICellData;\n  executionCount: number;\n}\n\ninterface ICellExecutionEnded extends IEventData {\n  cell: ICellData;\n  executionCount: number | null;\n  output: MultilineString[];\n  errors: IErrorData[];\n}\n\ninterface INotebookEvent {\n  user: string | null;\n  session: string | null;\n  timestamp: string;\n  eventName: string;\n  enumeration: number;\n  notebookSession: string;\n  eventData:\n    | IEventData\n    | IJupyterLoaded\n    | INotebookModified\n    | ICellExecutionBegin\n    | ICellExecutionEnded\n    | ICellSelected\n    | ICellModifiedExecuted\n    | ICellModified;\n}\n\nlet notebookJustOpened: boolean = false;\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'knic-jupyter:plugin',\n  autoStart: true,\n  requires: [INotebookTracker],\n  activate: (app: JupyterFrontEnd, notebookTracker: INotebookTracker) => {\n    // Log jupyter loaded event\n    onJupyterLoaded();\n\n    notebookTracker.widgetAdded.connect(onWidgetAdded, this);\n    notebookTracker.activeCellChanged.connect(logActiveCell, this);\n    NotebookActions.executed.connect(onCellExecutionEnded, this);\n    NotebookActions.executionScheduled.connect(onCellExecutionBegin, this);\n  }\n};\n\nlet timeout: NodeJS.Timeout | undefined = undefined;\n\nfunction toCellData(cellModel: ICellModel): ICellData {\n  return {\n    cellId: cellModel.id,\n    type: cellModel.type,\n    metadata: cellModel.metadata,\n    value: cellModel.value.text\n  };\n}\n\nfunction isCellModified(cellDataExecuted: ICellData): boolean {\n  if (\n    ORIGINAL_CELL_DATA.some(\n      e => e.value.trim() === cellDataExecuted.value.trim()\n    )\n  ) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nasync function onCellExecutionBegin(\n  emitter: any,\n  args: { notebook: Notebook; cell: Cell<ICellModel> }\n): Promise<void> {\n  if (args?.cell.model && args.cell.model.type === 'code') {\n    const model: ICodeCell = args.cell.model.toJSON() as ICodeCell;\n\n    const event: INotebookEvent = {\n      eventData: {\n        cell: toCellData(args.cell.model),\n        notebookName: NOTEBOOK_NAME,\n        location: window.location.toString(),\n        executionCount: model.execution_count\n      },\n      enumeration: ENUMERATION++,\n      notebookSession: NOTEBOOK_SESSION,\n      eventName: CELL_EXECUTION_BEGIN_EVENT,\n      user: USER,\n      session: SESSION,\n      timestamp: new Date().toISOString()\n    };\n    axios.post(SERVER_ENDPOINT, encodeURI(JSON.stringify(event)), {\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function onCellExecutionEnded(\n  emitter: any,\n  args: {\n    notebook: Notebook;\n    cell: Cell<ICellModel>;\n    success: boolean;\n    error?: KernelError | null;\n  }\n): Promise<void> {\n  if (args?.cell.model && args.cell.model.type === 'code') {\n    const model: ICodeCell = args.cell.model.toJSON() as ICodeCell;\n    const errors: IErrorData[] = model.outputs\n      .map((element: IOutput): IErrorData => {\n        if (element.output_type === 'error') {\n          const error: IError = element as IError;\n          return {\n            errorName: error.ename,\n            errorText: error.evalue,\n            stackTrace: error.traceback\n          };\n        }\n        return { errorName: '', errorText: '', stackTrace: [] };\n      })\n      .filter(value => {\n        return value.errorName !== '';\n      });\n\n    const outputs: MultilineString[] = model.outputs\n      .map((element: IOutput) => {\n        if (element.output_type === 'stream') {\n          return (element as IStream).text;\n        } else {\n          return [];\n        }\n      })\n      .filter(value => {\n        return value.length > 0;\n      });\n\n    const event: INotebookEvent = {\n      eventData: {\n        cell: toCellData(args.cell.model),\n        notebookName: NOTEBOOK_NAME,\n        location: window.location.toString(),\n        output: outputs,\n        executionCount: model.execution_count,\n        errors: errors\n      },\n      enumeration: ENUMERATION++,\n      notebookSession: NOTEBOOK_SESSION,\n      eventName: CELL_EXECUTED_END_EVENT,\n      session: SESSION,\n      user: USER,\n      timestamp: new Date().toISOString()\n    };\n\n    axios.post(SERVER_ENDPOINT, encodeURI(JSON.stringify(event)), {\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function onWidgetAdded(\n  emitter: INotebookTracker,\n  args: NotebookPanel\n): Promise<void> {\n  notebookJustOpened = true;\n  args.content.modelContentChanged.connect(onModelContentChanged);\n  ENUMERATION = 0;\n  NOTEBOOK_SESSION = UUID.uuid4();\n  NOTEBOOK_NAME = args.context.path;\n  const event: INotebookEvent = {\n    eventData: {\n      notebookName: NOTEBOOK_NAME,\n      location: window.location.toString()\n    },\n    user: USER,\n    session: SESSION,\n    enumeration: ENUMERATION++,\n    notebookSession: NOTEBOOK_SESSION,\n    timestamp: new Date().toISOString(),\n    eventName: NOTEBOOK_OPENED_EVENT\n  };\n  axios.post(SERVER_ENDPOINT, encodeURI(JSON.stringify(event)), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n\nasync function onJupyterLoaded(): Promise<void> {\n  ENUMERATION = 0;\n  NOTEBOOK_SESSION = UUID.uuid4();\n  const event: INotebookEvent = {\n    eventData: {\n      location: window.location.toString()\n    },\n    user: USER,\n    session: SESSION,\n    enumeration: ENUMERATION++,\n    notebookSession: NOTEBOOK_SESSION,\n    timestamp: new Date().toISOString(),\n    eventName: JUPYTER_LOADED_EVENT\n  };\n  axios.post(SERVER_ENDPOINT, encodeURI(JSON.stringify(event)), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n\nasync function onModelContentChanged(emitter: Notebook): Promise<void> {\n  if (notebookJustOpened) {\n    notebookJustOpened = false;\n    setTimeout(async () => {\n      const cells: ICellData[] = [];\n      if (emitter.model?.cells) {\n        for (let index = 0; index < emitter.model.cells.length; index++) {\n          const cellModel: ICellModel = emitter.model.cells.get(index);\n          cells.push(toCellData(cellModel));\n          ORIGINAL_CELL_DATA.push(toCellData(cellModel));\n        }\n      }\n\n      const event: INotebookEvent = {\n        eventData: {\n          notebookName: NOTEBOOK_NAME,\n          location: window.location.toString(),\n          cells: cells\n        },\n        enumeration: ENUMERATION++,\n        notebookSession: NOTEBOOK_SESSION,\n        eventName: NOTEBOOK_LOADED_EVENT,\n        user: USER,\n        session: SESSION,\n        timestamp: new Date().toISOString()\n      };\n      axios.post(SERVER_ENDPOINT, encodeURI(JSON.stringify(event)), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }, 1000);\n  } else {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(async () => {\n      const cells: ICellData[] = [];\n      if (emitter.model?.cells) {\n        for (let index = 0; index < emitter.model.cells.length; index++) {\n          const cellModel: ICellModel = emitter.model.cells.get(index);\n          cells.push(toCellData(cellModel));\n          ORIGINAL_CELL_DATA.push(toCellData(cellModel));\n        }\n      }\n      const event: INotebookEvent = {\n        eventData: {\n          notebookName: NOTEBOOK_NAME,\n          location: window.location.toString(),\n          cells: cells\n        },\n        enumeration: ENUMERATION++,\n        notebookSession: NOTEBOOK_SESSION,\n        eventName: NOTEBOOK_MODIFIED_EVENT,\n        user: USER,\n        session: SESSION,\n        timestamp: new Date().toISOString()\n      };\n      axios.post(SERVER_ENDPOINT, encodeURI(JSON.stringify(event)), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }, 5000);\n  }\n}\n\nasync function logActiveCell(\n  emitter: INotebookTracker,\n  args: Cell<ICellModel> | null\n): Promise<void> {\n  if (args?.model) {\n    const cellData: ICellData = toCellData(args?.model);\n    const event: INotebookEvent = {\n      eventData: {\n        cell: cellData,\n        notebookName: NOTEBOOK_NAME,\n        location: window.location.toString()\n      },\n      enumeration: ENUMERATION++,\n      notebookSession: NOTEBOOK_SESSION,\n      eventName: CELL_SELECTED_EVENT,\n      user: USER,\n      session: SESSION,\n      timestamp: new Date().toISOString()\n    };\n\n    axios.post(SERVER_ENDPOINT, encodeURI(JSON.stringify(event)), {\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n    // connect onContentChanged listener to the cell model\n    args?.model.contentChanged.connect(logDisplayChange);\n\n  }\n\n}\n\nasync function logDisplayChange(args: ICellModel | null): Promise<void> {\n  if (args) {\n\n    const cellData: ICellData = toCellData(args);\n\n    // check if the cell was modified\n    if (isCellModified(cellData)) {\n\n      // setup periodic updates for the cell modified events\n      if ( !CELL_MODIFIED_EVENT_INTERVAL_ID ) {\n\n        CELL_MODIFIED_EVENT_INTERVAL_ID = setInterval(cellData => {\n\n          // check if the cell was modified\n          if ( isCellModified(cellData) ) {\n            const event: INotebookEvent = {\n              eventData: {\n                cell: cellData,\n                notebookName: NOTEBOOK_NAME,\n                location: window.location.toString(),\n                changeEvents: [cellData],\n              },\n              enumeration: ENUMERATION++,\n              notebookSession: NOTEBOOK_SESSION,\n              eventName: CELL_MODIFIED_EVENT,\n              user: USER,\n              session: SESSION,\n              timestamp: new Date().toISOString()\n            };\n\n            axios.post(SERVER_ENDPOINT, encodeURI(JSON.stringify(event)), {\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n\n        }, CELL_MODIFIED_EVENT_INTERVAL, cellData);\n      }\n\n      clearTimeout(CELL_MODIFIED_EVENT_TIMEOUT_ID)\n      CELL_MODIFIED_EVENT_TIMEOUT_ID = setTimeout(() => {\n\n        // clear periodic updates for the cell modified event\n        clearInterval(CELL_MODIFIED_EVENT_INTERVAL_ID)\n        CELL_MODIFIED_EVENT_INTERVAL_ID = null;\n\n        const event: INotebookEvent = {\n          eventData: {\n            cell: cellData,\n            notebookName: NOTEBOOK_NAME,\n            location: window.location.toString(),\n            changeEvents: [cellData],\n          },\n          enumeration: ENUMERATION++,\n          notebookSession: NOTEBOOK_SESSION,\n          eventName: CELL_MODIFIED_EVENT,\n          user: USER,\n          session: SESSION,\n          timestamp: new Date().toISOString()\n        };\n\n        axios.post(SERVER_ENDPOINT, encodeURI(JSON.stringify(event)), {\n          headers: { 'Content-Type': 'application/json' }\n        });\n\n      }, CELL_MODIFIED_EVENT_TIMEOUT);\n\n    }\n  }\n}\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}