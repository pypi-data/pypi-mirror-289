[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = [
  "poetry-core<2,>=1",
  "poetry-dynamic-versioning",
]

[tool.poetry]
name = "tap-pushbullet"
version = "0.3.1"
description = "`tap-pushbullet` is a Singer tap for Pushbullet, built with the Meltano SDK for Singer Taps."
authors = [
  "Edgar Ramírez-Mondragón <edgarrm358@gmail.com>",
]
classifiers = [
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
keywords = [
  "ELT",
  "singer.io",
  "Pushbullet",
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/edgarrmondragon/tap-pushbullet"
repository = "https://github.com/edgarrmondragon/tap-pushbullet"
documentation = "https://github.com/edgarrmondragon/tap-pushbullet#readme"

[tool.poetry.dependencies]
python = ">=3.8"
requests-cache = ">=1.1.0,<2"
singer-sdk = "~=0.39.0"

[tool.poetry.dev-dependencies]
singer-sdk = { version = "*", extras = [
  "testing",
] }

[tool.poetry.scripts]
# CLI declaration
"tap-pushbullet" = "tap_pushbullet.tap:TapPushbullet.cli"

[tool.poetry-dynamic-versioning]
enable = false
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""
metadata = true
style = "pep440"
vcs = "git"

[tool.ruff]
target-version = "py38"

line-length = 88
src = [
  "tap_pushbullet",
  "tests",
]
lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN101", # missing-type-self
  "COM812", # missing-trailing-comma
  "DJ",     # flake8-django
  "ISC001", # single-line-implicit-string-concatenation
  "PD",     # pandas-vet
]
lint.per-file-ignores."src/*" = [
  "PD",
]
lint.per-file-ignores."tests/*" = [
  "ANN201",
  "S101",
]
lint.flake8-annotations.allow-star-arg-any = true
lint.flake8-annotations.mypy-init-return = true
lint.flake8-annotations.suppress-dummy-args = true
lint.flake8-errmsg.max-string-length = 30
lint.flake8-quotes.docstring-quotes = "double"
lint.flake8-quotes.inline-quotes = "double"
lint.flake8-quotes.multiline-quotes = "double"
lint.isort.known-first-party = [
  "citric",
]
lint.mccabe.max-complexity = 5
lint.pydocstyle.convention = "google"

[tool.pyproject-fmt]
max_supported_python = "3.13"

[tool.pytest.ini_options]
addopts = "-vvv"
filterwarnings = [
  "error",
  """default:Fields in transformed catalog but not in records:UserWarning""",
]
xfail_strict = true

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "backoff.*",
]
