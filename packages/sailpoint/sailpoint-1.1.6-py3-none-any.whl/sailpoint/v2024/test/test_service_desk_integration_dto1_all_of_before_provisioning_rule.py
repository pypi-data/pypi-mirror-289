# coding: utf-8

"""
    Identity Security Cloud V2024 API

    Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

    The version of the OpenAPI document: v2024
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from sailpoint.v2024.models.service_desk_integration_dto1_all_of_before_provisioning_rule import ServiceDeskIntegrationDto1AllOfBeforeProvisioningRule

class TestServiceDeskIntegrationDto1AllOfBeforeProvisioningRule(unittest.TestCase):
    """ServiceDeskIntegrationDto1AllOfBeforeProvisioningRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceDeskIntegrationDto1AllOfBeforeProvisioningRule:
        """Test ServiceDeskIntegrationDto1AllOfBeforeProvisioningRule
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceDeskIntegrationDto1AllOfBeforeProvisioningRule`
        """
        model = ServiceDeskIntegrationDto1AllOfBeforeProvisioningRule()
        if include_optional:
            return ServiceDeskIntegrationDto1AllOfBeforeProvisioningRule(
                type = 'RULE',
                id = '048eb3d55c5a4758bd07dccb87741c78',
                name = 'Before Provisioning Airtable Rule'
            )
        else:
            return ServiceDeskIntegrationDto1AllOfBeforeProvisioningRule(
        )
        """

    def testServiceDeskIntegrationDto1AllOfBeforeProvisioningRule(self):
        """Test ServiceDeskIntegrationDto1AllOfBeforeProvisioningRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
