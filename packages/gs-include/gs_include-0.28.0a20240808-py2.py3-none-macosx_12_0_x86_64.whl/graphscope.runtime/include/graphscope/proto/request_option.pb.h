// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: request_option.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_request_5foption_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_request_5foption_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_request_5foption_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_request_5foption_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_request_5foption_2eproto;
namespace gs {
namespace rpc {
namespace groot {
class AttributeValue;
struct AttributeValueDefaultTypeInternal;
extern AttributeValueDefaultTypeInternal _AttributeValue_default_instance_;
class RequestOptionsPb;
struct RequestOptionsPbDefaultTypeInternal;
extern RequestOptionsPbDefaultTypeInternal _RequestOptionsPb_default_instance_;
class RequestOptionsPb_AttributesEntry_DoNotUse;
struct RequestOptionsPb_AttributesEntry_DoNotUseDefaultTypeInternal;
extern RequestOptionsPb_AttributesEntry_DoNotUseDefaultTypeInternal _RequestOptionsPb_AttributesEntry_DoNotUse_default_instance_;
}  // namespace groot
}  // namespace rpc
}  // namespace gs
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace gs {
namespace rpc {
namespace groot {

// ===================================================================


// -------------------------------------------------------------------

class AttributeValue final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.AttributeValue) */ {
 public:
  inline AttributeValue() : AttributeValue(nullptr) {}
  ~AttributeValue() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AttributeValue(
      ::google::protobuf::internal::ConstantInitialized);

  inline AttributeValue(const AttributeValue& from) : AttributeValue(nullptr, from) {}
  inline AttributeValue(AttributeValue&& from) noexcept
      : AttributeValue(nullptr, std::move(from)) {}
  inline AttributeValue& operator=(const AttributeValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttributeValue& operator=(AttributeValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttributeValue& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kStringValue = 1,
    kIntValue = 2,
    kLongValue = 3,
    kDoubleValue = 4,
    VALUE_NOT_SET = 0,
  };
  static inline const AttributeValue* internal_default_instance() {
    return reinterpret_cast<const AttributeValue*>(
        &_AttributeValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AttributeValue& a, AttributeValue& b) { a.Swap(&b); }
  inline void Swap(AttributeValue* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttributeValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttributeValue* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AttributeValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttributeValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AttributeValue& from) { AttributeValue::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttributeValue* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.AttributeValue"; }

 protected:
  explicit AttributeValue(::google::protobuf::Arena* arena);
  AttributeValue(::google::protobuf::Arena* arena, const AttributeValue& from);
  AttributeValue(::google::protobuf::Arena* arena, AttributeValue&& from) noexcept
      : AttributeValue(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStringValueFieldNumber = 1,
    kIntValueFieldNumber = 2,
    kLongValueFieldNumber = 3,
    kDoubleValueFieldNumber = 4,
  };
  // string string_value = 1;
  bool has_string_value() const;
  void clear_string_value() ;
  const std::string& string_value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_string_value(Arg_&& arg, Args_... args);
  std::string* mutable_string_value();
  PROTOBUF_NODISCARD std::string* release_string_value();
  void set_allocated_string_value(std::string* value);

  private:
  const std::string& _internal_string_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string_value(
      const std::string& value);
  std::string* _internal_mutable_string_value();

  public:
  // int32 int_value = 2;
  bool has_int_value() const;
  void clear_int_value() ;
  ::int32_t int_value() const;
  void set_int_value(::int32_t value);

  private:
  ::int32_t _internal_int_value() const;
  void _internal_set_int_value(::int32_t value);

  public:
  // int64 long_value = 3;
  bool has_long_value() const;
  void clear_long_value() ;
  ::int64_t long_value() const;
  void set_long_value(::int64_t value);

  private:
  ::int64_t _internal_long_value() const;
  void _internal_set_long_value(::int64_t value);

  public:
  // double double_value = 4;
  bool has_double_value() const;
  void clear_double_value() ;
  double double_value() const;
  void set_double_value(double value);

  private:
  double _internal_double_value() const;
  void _internal_set_double_value(double value);

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.AttributeValue)
 private:
  class _Internal;
  void set_has_string_value();
  void set_has_int_value();
  void set_has_long_value();
  void set_has_double_value();
  inline bool has_value() const;
  inline void clear_has_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 0,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AttributeValue_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AttributeValue& from_msg);
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr string_value_;
      ::int32_t int_value_;
      ::int64_t long_value_;
      double double_value_;
    } value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_request_5foption_2eproto;
};
// -------------------------------------------------------------------

class RequestOptionsPb_AttributesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          RequestOptionsPb_AttributesEntry_DoNotUse, std::string, ::gs::rpc::groot::AttributeValue,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      RequestOptionsPb_AttributesEntry_DoNotUse, std::string, ::gs::rpc::groot::AttributeValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  RequestOptionsPb_AttributesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestOptionsPb_AttributesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit RequestOptionsPb_AttributesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const RequestOptionsPb_AttributesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const RequestOptionsPb_AttributesEntry_DoNotUse*>(
        &_RequestOptionsPb_AttributesEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_request_5foption_2eproto;
};
// -------------------------------------------------------------------

class RequestOptionsPb final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.RequestOptionsPb) */ {
 public:
  inline RequestOptionsPb() : RequestOptionsPb(nullptr) {}
  ~RequestOptionsPb() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestOptionsPb(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestOptionsPb(const RequestOptionsPb& from) : RequestOptionsPb(nullptr, from) {}
  inline RequestOptionsPb(RequestOptionsPb&& from) noexcept
      : RequestOptionsPb(nullptr, std::move(from)) {}
  inline RequestOptionsPb& operator=(const RequestOptionsPb& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestOptionsPb& operator=(RequestOptionsPb&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestOptionsPb& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestOptionsPb* internal_default_instance() {
    return reinterpret_cast<const RequestOptionsPb*>(
        &_RequestOptionsPb_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RequestOptionsPb& a, RequestOptionsPb& b) { a.Swap(&b); }
  inline void Swap(RequestOptionsPb* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestOptionsPb* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestOptionsPb* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RequestOptionsPb>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestOptionsPb& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestOptionsPb& from) { RequestOptionsPb::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestOptionsPb* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.RequestOptionsPb"; }

 protected:
  explicit RequestOptionsPb(::google::protobuf::Arena* arena);
  RequestOptionsPb(::google::protobuf::Arena* arena, const RequestOptionsPb& from);
  RequestOptionsPb(::google::protobuf::Arena* arena, RequestOptionsPb&& from) noexcept
      : RequestOptionsPb(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAttributesFieldNumber = 1,
    kTraceIdFieldNumber = 2,
  };
  // map<string, .gs.rpc.groot.AttributeValue> attributes = 1;
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;

  public:
  void clear_attributes() ;
  const ::google::protobuf::Map<std::string, ::gs::rpc::groot::AttributeValue>& attributes() const;
  ::google::protobuf::Map<std::string, ::gs::rpc::groot::AttributeValue>* mutable_attributes();

  private:
  const ::google::protobuf::Map<std::string, ::gs::rpc::groot::AttributeValue>& _internal_attributes() const;
  ::google::protobuf::Map<std::string, ::gs::rpc::groot::AttributeValue>* _internal_mutable_attributes();

  public:
  // string traceId = 2;
  void clear_traceid() ;
  const std::string& traceid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_traceid(Arg_&& arg, Args_... args);
  std::string* mutable_traceid();
  PROTOBUF_NODISCARD std::string* release_traceid();
  void set_allocated_traceid(std::string* value);

  private:
  const std::string& _internal_traceid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_traceid(
      const std::string& value);
  std::string* _internal_mutable_traceid();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.RequestOptionsPb)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RequestOptionsPb_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequestOptionsPb& from_msg);
    ::google::protobuf::internal::MapField<RequestOptionsPb_AttributesEntry_DoNotUse, std::string, ::gs::rpc::groot::AttributeValue,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        attributes_;
    ::google::protobuf::internal::ArenaStringPtr traceid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_request_5foption_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RequestOptionsPb

// map<string, .gs.rpc.groot.AttributeValue> attributes = 1;
inline int RequestOptionsPb::_internal_attributes_size() const {
  return _internal_attributes().size();
}
inline int RequestOptionsPb::attributes_size() const {
  return _internal_attributes_size();
}
inline void RequestOptionsPb::clear_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributes_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::gs::rpc::groot::AttributeValue>& RequestOptionsPb::_internal_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributes_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::gs::rpc::groot::AttributeValue>& RequestOptionsPb::attributes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:gs.rpc.groot.RequestOptionsPb.attributes)
  return _internal_attributes();
}
inline ::google::protobuf::Map<std::string, ::gs::rpc::groot::AttributeValue>* RequestOptionsPb::_internal_mutable_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attributes_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::gs::rpc::groot::AttributeValue>* RequestOptionsPb::mutable_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:gs.rpc.groot.RequestOptionsPb.attributes)
  return _internal_mutable_attributes();
}

// string traceId = 2;
inline void RequestOptionsPb::clear_traceid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.traceid_.ClearToEmpty();
}
inline const std::string& RequestOptionsPb::traceid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.RequestOptionsPb.traceId)
  return _internal_traceid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RequestOptionsPb::set_traceid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.traceid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.RequestOptionsPb.traceId)
}
inline std::string* RequestOptionsPb::mutable_traceid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_traceid();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.RequestOptionsPb.traceId)
  return _s;
}
inline const std::string& RequestOptionsPb::_internal_traceid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.traceid_.Get();
}
inline void RequestOptionsPb::_internal_set_traceid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.traceid_.Set(value, GetArena());
}
inline std::string* RequestOptionsPb::_internal_mutable_traceid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.traceid_.Mutable( GetArena());
}
inline std::string* RequestOptionsPb::release_traceid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.RequestOptionsPb.traceId)
  return _impl_.traceid_.Release();
}
inline void RequestOptionsPb::set_allocated_traceid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.traceid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.traceid_.IsDefault()) {
          _impl_.traceid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.RequestOptionsPb.traceId)
}

// -------------------------------------------------------------------

// AttributeValue

// string string_value = 1;
inline bool AttributeValue::has_string_value() const {
  return value_case() == kStringValue;
}
inline void AttributeValue::set_has_string_value() {
  _impl_._oneof_case_[0] = kStringValue;
}
inline void AttributeValue::clear_string_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kStringValue) {
    _impl_.value_.string_value_.Destroy();
    clear_has_value();
  }
}
inline const std::string& AttributeValue::string_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.AttributeValue.string_value)
  return _internal_string_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttributeValue::set_string_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStringValue) {
    clear_value();

    set_has_string_value();
    _impl_.value_.string_value_.InitDefault();
  }
  _impl_.value_.string_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.AttributeValue.string_value)
}
inline std::string* AttributeValue::mutable_string_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_string_value();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.AttributeValue.string_value)
  return _s;
}
inline const std::string& AttributeValue::_internal_string_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kStringValue) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.string_value_.Get();
}
inline void AttributeValue::_internal_set_string_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStringValue) {
    clear_value();

    set_has_string_value();
    _impl_.value_.string_value_.InitDefault();
  }
  _impl_.value_.string_value_.Set(value, GetArena());
}
inline std::string* AttributeValue::_internal_mutable_string_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStringValue) {
    clear_value();

    set_has_string_value();
    _impl_.value_.string_value_.InitDefault();
  }
  return _impl_.value_.string_value_.Mutable( GetArena());
}
inline std::string* AttributeValue::release_string_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.AttributeValue.string_value)
  if (value_case() != kStringValue) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.string_value_.Release();
}
inline void AttributeValue::set_allocated_string_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_string_value();
    _impl_.value_.string_value_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.AttributeValue.string_value)
}

// int32 int_value = 2;
inline bool AttributeValue::has_int_value() const {
  return value_case() == kIntValue;
}
inline void AttributeValue::set_has_int_value() {
  _impl_._oneof_case_[0] = kIntValue;
}
inline void AttributeValue::clear_int_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kIntValue) {
    _impl_.value_.int_value_ = 0;
    clear_has_value();
  }
}
inline ::int32_t AttributeValue::int_value() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.AttributeValue.int_value)
  return _internal_int_value();
}
inline void AttributeValue::set_int_value(::int32_t value) {
  if (value_case() != kIntValue) {
    clear_value();
    set_has_int_value();
  }
  _impl_.value_.int_value_ = value;
  // @@protoc_insertion_point(field_set:gs.rpc.groot.AttributeValue.int_value)
}
inline ::int32_t AttributeValue::_internal_int_value() const {
  if (value_case() == kIntValue) {
    return _impl_.value_.int_value_;
  }
  return 0;
}

// int64 long_value = 3;
inline bool AttributeValue::has_long_value() const {
  return value_case() == kLongValue;
}
inline void AttributeValue::set_has_long_value() {
  _impl_._oneof_case_[0] = kLongValue;
}
inline void AttributeValue::clear_long_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kLongValue) {
    _impl_.value_.long_value_ = ::int64_t{0};
    clear_has_value();
  }
}
inline ::int64_t AttributeValue::long_value() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.AttributeValue.long_value)
  return _internal_long_value();
}
inline void AttributeValue::set_long_value(::int64_t value) {
  if (value_case() != kLongValue) {
    clear_value();
    set_has_long_value();
  }
  _impl_.value_.long_value_ = value;
  // @@protoc_insertion_point(field_set:gs.rpc.groot.AttributeValue.long_value)
}
inline ::int64_t AttributeValue::_internal_long_value() const {
  if (value_case() == kLongValue) {
    return _impl_.value_.long_value_;
  }
  return ::int64_t{0};
}

// double double_value = 4;
inline bool AttributeValue::has_double_value() const {
  return value_case() == kDoubleValue;
}
inline void AttributeValue::set_has_double_value() {
  _impl_._oneof_case_[0] = kDoubleValue;
}
inline void AttributeValue::clear_double_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kDoubleValue) {
    _impl_.value_.double_value_ = 0;
    clear_has_value();
  }
}
inline double AttributeValue::double_value() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.AttributeValue.double_value)
  return _internal_double_value();
}
inline void AttributeValue::set_double_value(double value) {
  if (value_case() != kDoubleValue) {
    clear_value();
    set_has_double_value();
  }
  _impl_.value_.double_value_ = value;
  // @@protoc_insertion_point(field_set:gs.rpc.groot.AttributeValue.double_value)
}
inline double AttributeValue::_internal_double_value() const {
  if (value_case() == kDoubleValue) {
    return _impl_.value_.double_value_;
  }
  return 0;
}

inline bool AttributeValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void AttributeValue::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline AttributeValue::ValueCase AttributeValue::value_case() const {
  return AttributeValue::ValueCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace groot
}  // namespace rpc
}  // namespace gs


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_request_5foption_2eproto_2epb_2eh
