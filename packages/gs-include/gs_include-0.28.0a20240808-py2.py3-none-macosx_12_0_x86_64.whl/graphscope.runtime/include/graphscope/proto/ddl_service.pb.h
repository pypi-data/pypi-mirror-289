// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ddl_service.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_ddl_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ddl_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "graph_def.pb.h"
#include "schema_common.pb.h"
#include "request_option.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ddl_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ddl_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ddl_5fservice_2eproto;
namespace gs {
namespace rpc {
namespace groot {
class AddEdgeKindRequest;
struct AddEdgeKindRequestDefaultTypeInternal;
extern AddEdgeKindRequestDefaultTypeInternal _AddEdgeKindRequest_default_instance_;
class AddEdgeTypePropertiesRequest;
struct AddEdgeTypePropertiesRequestDefaultTypeInternal;
extern AddEdgeTypePropertiesRequestDefaultTypeInternal _AddEdgeTypePropertiesRequest_default_instance_;
class AddVertexTypePropertiesRequest;
struct AddVertexTypePropertiesRequestDefaultTypeInternal;
extern AddVertexTypePropertiesRequestDefaultTypeInternal _AddVertexTypePropertiesRequest_default_instance_;
class BatchSubmitRequest;
struct BatchSubmitRequestDefaultTypeInternal;
extern BatchSubmitRequestDefaultTypeInternal _BatchSubmitRequest_default_instance_;
class BatchSubmitRequest_DDLRequest;
struct BatchSubmitRequest_DDLRequestDefaultTypeInternal;
extern BatchSubmitRequest_DDLRequestDefaultTypeInternal _BatchSubmitRequest_DDLRequest_default_instance_;
class BatchSubmitResponse;
struct BatchSubmitResponseDefaultTypeInternal;
extern BatchSubmitResponseDefaultTypeInternal _BatchSubmitResponse_default_instance_;
class CreateEdgeTypeRequest;
struct CreateEdgeTypeRequestDefaultTypeInternal;
extern CreateEdgeTypeRequestDefaultTypeInternal _CreateEdgeTypeRequest_default_instance_;
class CreateVertexTypeRequest;
struct CreateVertexTypeRequestDefaultTypeInternal;
extern CreateVertexTypeRequestDefaultTypeInternal _CreateVertexTypeRequest_default_instance_;
class DropEdgeTypeRequest;
struct DropEdgeTypeRequestDefaultTypeInternal;
extern DropEdgeTypeRequestDefaultTypeInternal _DropEdgeTypeRequest_default_instance_;
class DropVertexTypeRequest;
struct DropVertexTypeRequestDefaultTypeInternal;
extern DropVertexTypeRequestDefaultTypeInternal _DropVertexTypeRequest_default_instance_;
class GetGraphDefRequest;
struct GetGraphDefRequestDefaultTypeInternal;
extern GetGraphDefRequestDefaultTypeInternal _GetGraphDefRequest_default_instance_;
class GetGraphDefResponse;
struct GetGraphDefResponseDefaultTypeInternal;
extern GetGraphDefResponseDefaultTypeInternal _GetGraphDefResponse_default_instance_;
class RemoveEdgeKindRequest;
struct RemoveEdgeKindRequestDefaultTypeInternal;
extern RemoveEdgeKindRequestDefaultTypeInternal _RemoveEdgeKindRequest_default_instance_;
}  // namespace groot
}  // namespace rpc
}  // namespace gs
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace gs {
namespace rpc {
namespace groot {

// ===================================================================


// -------------------------------------------------------------------

class RemoveEdgeKindRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.RemoveEdgeKindRequest) */ {
 public:
  inline RemoveEdgeKindRequest() : RemoveEdgeKindRequest(nullptr) {}
  ~RemoveEdgeKindRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveEdgeKindRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoveEdgeKindRequest(const RemoveEdgeKindRequest& from) : RemoveEdgeKindRequest(nullptr, from) {}
  inline RemoveEdgeKindRequest(RemoveEdgeKindRequest&& from) noexcept
      : RemoveEdgeKindRequest(nullptr, std::move(from)) {}
  inline RemoveEdgeKindRequest& operator=(const RemoveEdgeKindRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveEdgeKindRequest& operator=(RemoveEdgeKindRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveEdgeKindRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveEdgeKindRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveEdgeKindRequest*>(
        &_RemoveEdgeKindRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(RemoveEdgeKindRequest& a, RemoveEdgeKindRequest& b) { a.Swap(&b); }
  inline void Swap(RemoveEdgeKindRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveEdgeKindRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveEdgeKindRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RemoveEdgeKindRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveEdgeKindRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoveEdgeKindRequest& from) { RemoveEdgeKindRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoveEdgeKindRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.RemoveEdgeKindRequest"; }

 protected:
  explicit RemoveEdgeKindRequest(::google::protobuf::Arena* arena);
  RemoveEdgeKindRequest(::google::protobuf::Arena* arena, const RemoveEdgeKindRequest& from);
  RemoveEdgeKindRequest(::google::protobuf::Arena* arena, RemoveEdgeKindRequest&& from) noexcept
      : RemoveEdgeKindRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEdgeLabelFieldNumber = 1,
    kSrcVertexLabelFieldNumber = 2,
    kDstVertexLabelFieldNumber = 3,
  };
  // string edge_label = 1;
  void clear_edge_label() ;
  const std::string& edge_label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_edge_label(Arg_&& arg, Args_... args);
  std::string* mutable_edge_label();
  PROTOBUF_NODISCARD std::string* release_edge_label();
  void set_allocated_edge_label(std::string* value);

  private:
  const std::string& _internal_edge_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_edge_label(
      const std::string& value);
  std::string* _internal_mutable_edge_label();

  public:
  // string src_vertex_label = 2;
  void clear_src_vertex_label() ;
  const std::string& src_vertex_label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_src_vertex_label(Arg_&& arg, Args_... args);
  std::string* mutable_src_vertex_label();
  PROTOBUF_NODISCARD std::string* release_src_vertex_label();
  void set_allocated_src_vertex_label(std::string* value);

  private:
  const std::string& _internal_src_vertex_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_src_vertex_label(
      const std::string& value);
  std::string* _internal_mutable_src_vertex_label();

  public:
  // string dst_vertex_label = 3;
  void clear_dst_vertex_label() ;
  const std::string& dst_vertex_label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dst_vertex_label(Arg_&& arg, Args_... args);
  std::string* mutable_dst_vertex_label();
  PROTOBUF_NODISCARD std::string* release_dst_vertex_label();
  void set_allocated_dst_vertex_label(std::string* value);

  private:
  const std::string& _internal_dst_vertex_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dst_vertex_label(
      const std::string& value);
  std::string* _internal_mutable_dst_vertex_label();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.RemoveEdgeKindRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      85, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RemoveEdgeKindRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoveEdgeKindRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr edge_label_;
    ::google::protobuf::internal::ArenaStringPtr src_vertex_label_;
    ::google::protobuf::internal::ArenaStringPtr dst_vertex_label_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetGraphDefRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.GetGraphDefRequest) */ {
 public:
  inline GetGraphDefRequest() : GetGraphDefRequest(nullptr) {}
  ~GetGraphDefRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGraphDefRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGraphDefRequest(const GetGraphDefRequest& from) : GetGraphDefRequest(nullptr, from) {}
  inline GetGraphDefRequest(GetGraphDefRequest&& from) noexcept
      : GetGraphDefRequest(nullptr, std::move(from)) {}
  inline GetGraphDefRequest& operator=(const GetGraphDefRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGraphDefRequest& operator=(GetGraphDefRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGraphDefRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGraphDefRequest* internal_default_instance() {
    return reinterpret_cast<const GetGraphDefRequest*>(
        &_GetGraphDefRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GetGraphDefRequest& a, GetGraphDefRequest& b) { a.Swap(&b); }
  inline void Swap(GetGraphDefRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGraphDefRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGraphDefRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetGraphDefRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGraphDefRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGraphDefRequest& from) { GetGraphDefRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetGraphDefRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.GetGraphDefRequest"; }

 protected:
  explicit GetGraphDefRequest(::google::protobuf::Arena* arena);
  GetGraphDefRequest(::google::protobuf::Arena* arena, const GetGraphDefRequest& from);
  GetGraphDefRequest(::google::protobuf::Arena* arena, GetGraphDefRequest&& from) noexcept
      : GetGraphDefRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.GetGraphDefRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetGraphDefRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGraphDefRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class DropVertexTypeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.DropVertexTypeRequest) */ {
 public:
  inline DropVertexTypeRequest() : DropVertexTypeRequest(nullptr) {}
  ~DropVertexTypeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DropVertexTypeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DropVertexTypeRequest(const DropVertexTypeRequest& from) : DropVertexTypeRequest(nullptr, from) {}
  inline DropVertexTypeRequest(DropVertexTypeRequest&& from) noexcept
      : DropVertexTypeRequest(nullptr, std::move(from)) {}
  inline DropVertexTypeRequest& operator=(const DropVertexTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DropVertexTypeRequest& operator=(DropVertexTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DropVertexTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DropVertexTypeRequest* internal_default_instance() {
    return reinterpret_cast<const DropVertexTypeRequest*>(
        &_DropVertexTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(DropVertexTypeRequest& a, DropVertexTypeRequest& b) { a.Swap(&b); }
  inline void Swap(DropVertexTypeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DropVertexTypeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DropVertexTypeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DropVertexTypeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DropVertexTypeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DropVertexTypeRequest& from) { DropVertexTypeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DropVertexTypeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.DropVertexTypeRequest"; }

 protected:
  explicit DropVertexTypeRequest(::google::protobuf::Arena* arena);
  DropVertexTypeRequest(::google::protobuf::Arena* arena, const DropVertexTypeRequest& from);
  DropVertexTypeRequest(::google::protobuf::Arena* arena, DropVertexTypeRequest&& from) noexcept
      : DropVertexTypeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLabelFieldNumber = 1,
  };
  // string label = 1;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.DropVertexTypeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DropVertexTypeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DropVertexTypeRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr label_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class DropEdgeTypeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.DropEdgeTypeRequest) */ {
 public:
  inline DropEdgeTypeRequest() : DropEdgeTypeRequest(nullptr) {}
  ~DropEdgeTypeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DropEdgeTypeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DropEdgeTypeRequest(const DropEdgeTypeRequest& from) : DropEdgeTypeRequest(nullptr, from) {}
  inline DropEdgeTypeRequest(DropEdgeTypeRequest&& from) noexcept
      : DropEdgeTypeRequest(nullptr, std::move(from)) {}
  inline DropEdgeTypeRequest& operator=(const DropEdgeTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DropEdgeTypeRequest& operator=(DropEdgeTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DropEdgeTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DropEdgeTypeRequest* internal_default_instance() {
    return reinterpret_cast<const DropEdgeTypeRequest*>(
        &_DropEdgeTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(DropEdgeTypeRequest& a, DropEdgeTypeRequest& b) { a.Swap(&b); }
  inline void Swap(DropEdgeTypeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DropEdgeTypeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DropEdgeTypeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DropEdgeTypeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DropEdgeTypeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DropEdgeTypeRequest& from) { DropEdgeTypeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DropEdgeTypeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.DropEdgeTypeRequest"; }

 protected:
  explicit DropEdgeTypeRequest(::google::protobuf::Arena* arena);
  DropEdgeTypeRequest(::google::protobuf::Arena* arena, const DropEdgeTypeRequest& from);
  DropEdgeTypeRequest(::google::protobuf::Arena* arena, DropEdgeTypeRequest&& from) noexcept
      : DropEdgeTypeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLabelFieldNumber = 1,
  };
  // string label = 1;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.DropEdgeTypeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DropEdgeTypeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DropEdgeTypeRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr label_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AddEdgeKindRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.AddEdgeKindRequest) */ {
 public:
  inline AddEdgeKindRequest() : AddEdgeKindRequest(nullptr) {}
  ~AddEdgeKindRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddEdgeKindRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddEdgeKindRequest(const AddEdgeKindRequest& from) : AddEdgeKindRequest(nullptr, from) {}
  inline AddEdgeKindRequest(AddEdgeKindRequest&& from) noexcept
      : AddEdgeKindRequest(nullptr, std::move(from)) {}
  inline AddEdgeKindRequest& operator=(const AddEdgeKindRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddEdgeKindRequest& operator=(AddEdgeKindRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddEdgeKindRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddEdgeKindRequest* internal_default_instance() {
    return reinterpret_cast<const AddEdgeKindRequest*>(
        &_AddEdgeKindRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(AddEdgeKindRequest& a, AddEdgeKindRequest& b) { a.Swap(&b); }
  inline void Swap(AddEdgeKindRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddEdgeKindRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddEdgeKindRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddEdgeKindRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddEdgeKindRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddEdgeKindRequest& from) { AddEdgeKindRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddEdgeKindRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.AddEdgeKindRequest"; }

 protected:
  explicit AddEdgeKindRequest(::google::protobuf::Arena* arena);
  AddEdgeKindRequest(::google::protobuf::Arena* arena, const AddEdgeKindRequest& from);
  AddEdgeKindRequest(::google::protobuf::Arena* arena, AddEdgeKindRequest&& from) noexcept
      : AddEdgeKindRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEdgeLabelFieldNumber = 1,
    kSrcVertexLabelFieldNumber = 2,
    kDstVertexLabelFieldNumber = 3,
  };
  // string edge_label = 1;
  void clear_edge_label() ;
  const std::string& edge_label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_edge_label(Arg_&& arg, Args_... args);
  std::string* mutable_edge_label();
  PROTOBUF_NODISCARD std::string* release_edge_label();
  void set_allocated_edge_label(std::string* value);

  private:
  const std::string& _internal_edge_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_edge_label(
      const std::string& value);
  std::string* _internal_mutable_edge_label();

  public:
  // string src_vertex_label = 2;
  void clear_src_vertex_label() ;
  const std::string& src_vertex_label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_src_vertex_label(Arg_&& arg, Args_... args);
  std::string* mutable_src_vertex_label();
  PROTOBUF_NODISCARD std::string* release_src_vertex_label();
  void set_allocated_src_vertex_label(std::string* value);

  private:
  const std::string& _internal_src_vertex_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_src_vertex_label(
      const std::string& value);
  std::string* _internal_mutable_src_vertex_label();

  public:
  // string dst_vertex_label = 3;
  void clear_dst_vertex_label() ;
  const std::string& dst_vertex_label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dst_vertex_label(Arg_&& arg, Args_... args);
  std::string* mutable_dst_vertex_label();
  PROTOBUF_NODISCARD std::string* release_dst_vertex_label();
  void set_allocated_dst_vertex_label(std::string* value);

  private:
  const std::string& _internal_dst_vertex_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dst_vertex_label(
      const std::string& value);
  std::string* _internal_mutable_dst_vertex_label();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.AddEdgeKindRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      82, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddEdgeKindRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddEdgeKindRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr edge_label_;
    ::google::protobuf::internal::ArenaStringPtr src_vertex_label_;
    ::google::protobuf::internal::ArenaStringPtr dst_vertex_label_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CreateVertexTypeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.CreateVertexTypeRequest) */ {
 public:
  inline CreateVertexTypeRequest() : CreateVertexTypeRequest(nullptr) {}
  ~CreateVertexTypeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateVertexTypeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateVertexTypeRequest(const CreateVertexTypeRequest& from) : CreateVertexTypeRequest(nullptr, from) {}
  inline CreateVertexTypeRequest(CreateVertexTypeRequest&& from) noexcept
      : CreateVertexTypeRequest(nullptr, std::move(from)) {}
  inline CreateVertexTypeRequest& operator=(const CreateVertexTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateVertexTypeRequest& operator=(CreateVertexTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateVertexTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateVertexTypeRequest* internal_default_instance() {
    return reinterpret_cast<const CreateVertexTypeRequest*>(
        &_CreateVertexTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CreateVertexTypeRequest& a, CreateVertexTypeRequest& b) { a.Swap(&b); }
  inline void Swap(CreateVertexTypeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateVertexTypeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateVertexTypeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateVertexTypeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateVertexTypeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateVertexTypeRequest& from) { CreateVertexTypeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateVertexTypeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.CreateVertexTypeRequest"; }

 protected:
  explicit CreateVertexTypeRequest(::google::protobuf::Arena* arena);
  CreateVertexTypeRequest(::google::protobuf::Arena* arena, const CreateVertexTypeRequest& from);
  CreateVertexTypeRequest(::google::protobuf::Arena* arena, CreateVertexTypeRequest&& from) noexcept
      : CreateVertexTypeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeDefFieldNumber = 1,
  };
  // .gs.rpc.graph.TypeDefPb type_def = 1;
  bool has_type_def() const;
  void clear_type_def() ;
  const ::gs::rpc::graph::TypeDefPb& type_def() const;
  PROTOBUF_NODISCARD ::gs::rpc::graph::TypeDefPb* release_type_def();
  ::gs::rpc::graph::TypeDefPb* mutable_type_def();
  void set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value);
  void unsafe_arena_set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value);
  ::gs::rpc::graph::TypeDefPb* unsafe_arena_release_type_def();

  private:
  const ::gs::rpc::graph::TypeDefPb& _internal_type_def() const;
  ::gs::rpc::graph::TypeDefPb* _internal_mutable_type_def();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.CreateVertexTypeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateVertexTypeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateVertexTypeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::gs::rpc::graph::TypeDefPb* type_def_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CreateEdgeTypeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.CreateEdgeTypeRequest) */ {
 public:
  inline CreateEdgeTypeRequest() : CreateEdgeTypeRequest(nullptr) {}
  ~CreateEdgeTypeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateEdgeTypeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateEdgeTypeRequest(const CreateEdgeTypeRequest& from) : CreateEdgeTypeRequest(nullptr, from) {}
  inline CreateEdgeTypeRequest(CreateEdgeTypeRequest&& from) noexcept
      : CreateEdgeTypeRequest(nullptr, std::move(from)) {}
  inline CreateEdgeTypeRequest& operator=(const CreateEdgeTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateEdgeTypeRequest& operator=(CreateEdgeTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateEdgeTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateEdgeTypeRequest* internal_default_instance() {
    return reinterpret_cast<const CreateEdgeTypeRequest*>(
        &_CreateEdgeTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CreateEdgeTypeRequest& a, CreateEdgeTypeRequest& b) { a.Swap(&b); }
  inline void Swap(CreateEdgeTypeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateEdgeTypeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateEdgeTypeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateEdgeTypeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateEdgeTypeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateEdgeTypeRequest& from) { CreateEdgeTypeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateEdgeTypeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.CreateEdgeTypeRequest"; }

 protected:
  explicit CreateEdgeTypeRequest(::google::protobuf::Arena* arena);
  CreateEdgeTypeRequest(::google::protobuf::Arena* arena, const CreateEdgeTypeRequest& from);
  CreateEdgeTypeRequest(::google::protobuf::Arena* arena, CreateEdgeTypeRequest&& from) noexcept
      : CreateEdgeTypeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeDefFieldNumber = 1,
  };
  // .gs.rpc.graph.TypeDefPb type_def = 1;
  bool has_type_def() const;
  void clear_type_def() ;
  const ::gs::rpc::graph::TypeDefPb& type_def() const;
  PROTOBUF_NODISCARD ::gs::rpc::graph::TypeDefPb* release_type_def();
  ::gs::rpc::graph::TypeDefPb* mutable_type_def();
  void set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value);
  void unsafe_arena_set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value);
  ::gs::rpc::graph::TypeDefPb* unsafe_arena_release_type_def();

  private:
  const ::gs::rpc::graph::TypeDefPb& _internal_type_def() const;
  ::gs::rpc::graph::TypeDefPb* _internal_mutable_type_def();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.CreateEdgeTypeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CreateEdgeTypeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateEdgeTypeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::gs::rpc::graph::TypeDefPb* type_def_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AddVertexTypePropertiesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.AddVertexTypePropertiesRequest) */ {
 public:
  inline AddVertexTypePropertiesRequest() : AddVertexTypePropertiesRequest(nullptr) {}
  ~AddVertexTypePropertiesRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddVertexTypePropertiesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddVertexTypePropertiesRequest(const AddVertexTypePropertiesRequest& from) : AddVertexTypePropertiesRequest(nullptr, from) {}
  inline AddVertexTypePropertiesRequest(AddVertexTypePropertiesRequest&& from) noexcept
      : AddVertexTypePropertiesRequest(nullptr, std::move(from)) {}
  inline AddVertexTypePropertiesRequest& operator=(const AddVertexTypePropertiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddVertexTypePropertiesRequest& operator=(AddVertexTypePropertiesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddVertexTypePropertiesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddVertexTypePropertiesRequest* internal_default_instance() {
    return reinterpret_cast<const AddVertexTypePropertiesRequest*>(
        &_AddVertexTypePropertiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(AddVertexTypePropertiesRequest& a, AddVertexTypePropertiesRequest& b) { a.Swap(&b); }
  inline void Swap(AddVertexTypePropertiesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddVertexTypePropertiesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddVertexTypePropertiesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddVertexTypePropertiesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddVertexTypePropertiesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddVertexTypePropertiesRequest& from) { AddVertexTypePropertiesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddVertexTypePropertiesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.AddVertexTypePropertiesRequest"; }

 protected:
  explicit AddVertexTypePropertiesRequest(::google::protobuf::Arena* arena);
  AddVertexTypePropertiesRequest(::google::protobuf::Arena* arena, const AddVertexTypePropertiesRequest& from);
  AddVertexTypePropertiesRequest(::google::protobuf::Arena* arena, AddVertexTypePropertiesRequest&& from) noexcept
      : AddVertexTypePropertiesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeDefFieldNumber = 1,
  };
  // .gs.rpc.graph.TypeDefPb type_def = 1;
  bool has_type_def() const;
  void clear_type_def() ;
  const ::gs::rpc::graph::TypeDefPb& type_def() const;
  PROTOBUF_NODISCARD ::gs::rpc::graph::TypeDefPb* release_type_def();
  ::gs::rpc::graph::TypeDefPb* mutable_type_def();
  void set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value);
  void unsafe_arena_set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value);
  ::gs::rpc::graph::TypeDefPb* unsafe_arena_release_type_def();

  private:
  const ::gs::rpc::graph::TypeDefPb& _internal_type_def() const;
  ::gs::rpc::graph::TypeDefPb* _internal_mutable_type_def();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.AddVertexTypePropertiesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddVertexTypePropertiesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddVertexTypePropertiesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::gs::rpc::graph::TypeDefPb* type_def_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AddEdgeTypePropertiesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.AddEdgeTypePropertiesRequest) */ {
 public:
  inline AddEdgeTypePropertiesRequest() : AddEdgeTypePropertiesRequest(nullptr) {}
  ~AddEdgeTypePropertiesRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddEdgeTypePropertiesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddEdgeTypePropertiesRequest(const AddEdgeTypePropertiesRequest& from) : AddEdgeTypePropertiesRequest(nullptr, from) {}
  inline AddEdgeTypePropertiesRequest(AddEdgeTypePropertiesRequest&& from) noexcept
      : AddEdgeTypePropertiesRequest(nullptr, std::move(from)) {}
  inline AddEdgeTypePropertiesRequest& operator=(const AddEdgeTypePropertiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddEdgeTypePropertiesRequest& operator=(AddEdgeTypePropertiesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddEdgeTypePropertiesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddEdgeTypePropertiesRequest* internal_default_instance() {
    return reinterpret_cast<const AddEdgeTypePropertiesRequest*>(
        &_AddEdgeTypePropertiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(AddEdgeTypePropertiesRequest& a, AddEdgeTypePropertiesRequest& b) { a.Swap(&b); }
  inline void Swap(AddEdgeTypePropertiesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddEdgeTypePropertiesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddEdgeTypePropertiesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddEdgeTypePropertiesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddEdgeTypePropertiesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddEdgeTypePropertiesRequest& from) { AddEdgeTypePropertiesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddEdgeTypePropertiesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.AddEdgeTypePropertiesRequest"; }

 protected:
  explicit AddEdgeTypePropertiesRequest(::google::protobuf::Arena* arena);
  AddEdgeTypePropertiesRequest(::google::protobuf::Arena* arena, const AddEdgeTypePropertiesRequest& from);
  AddEdgeTypePropertiesRequest(::google::protobuf::Arena* arena, AddEdgeTypePropertiesRequest&& from) noexcept
      : AddEdgeTypePropertiesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeDefFieldNumber = 1,
  };
  // .gs.rpc.graph.TypeDefPb type_def = 1;
  bool has_type_def() const;
  void clear_type_def() ;
  const ::gs::rpc::graph::TypeDefPb& type_def() const;
  PROTOBUF_NODISCARD ::gs::rpc::graph::TypeDefPb* release_type_def();
  ::gs::rpc::graph::TypeDefPb* mutable_type_def();
  void set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value);
  void unsafe_arena_set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value);
  ::gs::rpc::graph::TypeDefPb* unsafe_arena_release_type_def();

  private:
  const ::gs::rpc::graph::TypeDefPb& _internal_type_def() const;
  ::gs::rpc::graph::TypeDefPb* _internal_mutable_type_def();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.AddEdgeTypePropertiesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddEdgeTypePropertiesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddEdgeTypePropertiesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::gs::rpc::graph::TypeDefPb* type_def_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetGraphDefResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.GetGraphDefResponse) */ {
 public:
  inline GetGraphDefResponse() : GetGraphDefResponse(nullptr) {}
  ~GetGraphDefResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetGraphDefResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetGraphDefResponse(const GetGraphDefResponse& from) : GetGraphDefResponse(nullptr, from) {}
  inline GetGraphDefResponse(GetGraphDefResponse&& from) noexcept
      : GetGraphDefResponse(nullptr, std::move(from)) {}
  inline GetGraphDefResponse& operator=(const GetGraphDefResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetGraphDefResponse& operator=(GetGraphDefResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetGraphDefResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetGraphDefResponse* internal_default_instance() {
    return reinterpret_cast<const GetGraphDefResponse*>(
        &_GetGraphDefResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(GetGraphDefResponse& a, GetGraphDefResponse& b) { a.Swap(&b); }
  inline void Swap(GetGraphDefResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetGraphDefResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetGraphDefResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetGraphDefResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetGraphDefResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetGraphDefResponse& from) { GetGraphDefResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetGraphDefResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.GetGraphDefResponse"; }

 protected:
  explicit GetGraphDefResponse(::google::protobuf::Arena* arena);
  GetGraphDefResponse(::google::protobuf::Arena* arena, const GetGraphDefResponse& from);
  GetGraphDefResponse(::google::protobuf::Arena* arena, GetGraphDefResponse&& from) noexcept
      : GetGraphDefResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGraphDefFieldNumber = 1,
  };
  // .gs.rpc.graph.GraphDefPb graph_def = 1;
  bool has_graph_def() const;
  void clear_graph_def() ;
  const ::gs::rpc::graph::GraphDefPb& graph_def() const;
  PROTOBUF_NODISCARD ::gs::rpc::graph::GraphDefPb* release_graph_def();
  ::gs::rpc::graph::GraphDefPb* mutable_graph_def();
  void set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value);
  void unsafe_arena_set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value);
  ::gs::rpc::graph::GraphDefPb* unsafe_arena_release_graph_def();

  private:
  const ::gs::rpc::graph::GraphDefPb& _internal_graph_def() const;
  ::gs::rpc::graph::GraphDefPb* _internal_mutable_graph_def();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.GetGraphDefResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetGraphDefResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetGraphDefResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::gs::rpc::graph::GraphDefPb* graph_def_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class BatchSubmitResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.BatchSubmitResponse) */ {
 public:
  inline BatchSubmitResponse() : BatchSubmitResponse(nullptr) {}
  ~BatchSubmitResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BatchSubmitResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline BatchSubmitResponse(const BatchSubmitResponse& from) : BatchSubmitResponse(nullptr, from) {}
  inline BatchSubmitResponse(BatchSubmitResponse&& from) noexcept
      : BatchSubmitResponse(nullptr, std::move(from)) {}
  inline BatchSubmitResponse& operator=(const BatchSubmitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchSubmitResponse& operator=(BatchSubmitResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BatchSubmitResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BatchSubmitResponse* internal_default_instance() {
    return reinterpret_cast<const BatchSubmitResponse*>(
        &_BatchSubmitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BatchSubmitResponse& a, BatchSubmitResponse& b) { a.Swap(&b); }
  inline void Swap(BatchSubmitResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatchSubmitResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BatchSubmitResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BatchSubmitResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BatchSubmitResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BatchSubmitResponse& from) { BatchSubmitResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BatchSubmitResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.BatchSubmitResponse"; }

 protected:
  explicit BatchSubmitResponse(::google::protobuf::Arena* arena);
  BatchSubmitResponse(::google::protobuf::Arena* arena, const BatchSubmitResponse& from);
  BatchSubmitResponse(::google::protobuf::Arena* arena, BatchSubmitResponse&& from) noexcept
      : BatchSubmitResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGraphDefFieldNumber = 2,
    kFormatVersionFieldNumber = 1,
  };
  // .gs.rpc.graph.GraphDefPb graph_def = 2;
  bool has_graph_def() const;
  void clear_graph_def() ;
  const ::gs::rpc::graph::GraphDefPb& graph_def() const;
  PROTOBUF_NODISCARD ::gs::rpc::graph::GraphDefPb* release_graph_def();
  ::gs::rpc::graph::GraphDefPb* mutable_graph_def();
  void set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value);
  void unsafe_arena_set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value);
  ::gs::rpc::graph::GraphDefPb* unsafe_arena_release_graph_def();

  private:
  const ::gs::rpc::graph::GraphDefPb& _internal_graph_def() const;
  ::gs::rpc::graph::GraphDefPb* _internal_mutable_graph_def();

  public:
  // int32 format_version = 1;
  void clear_format_version() ;
  ::int32_t format_version() const;
  void set_format_version(::int32_t value);

  private:
  ::int32_t _internal_format_version() const;
  void _internal_set_format_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.BatchSubmitResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BatchSubmitResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BatchSubmitResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::gs::rpc::graph::GraphDefPb* graph_def_;
    ::int32_t format_version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class BatchSubmitRequest_DDLRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.BatchSubmitRequest.DDLRequest) */ {
 public:
  inline BatchSubmitRequest_DDLRequest() : BatchSubmitRequest_DDLRequest(nullptr) {}
  ~BatchSubmitRequest_DDLRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BatchSubmitRequest_DDLRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BatchSubmitRequest_DDLRequest(const BatchSubmitRequest_DDLRequest& from) : BatchSubmitRequest_DDLRequest(nullptr, from) {}
  inline BatchSubmitRequest_DDLRequest(BatchSubmitRequest_DDLRequest&& from) noexcept
      : BatchSubmitRequest_DDLRequest(nullptr, std::move(from)) {}
  inline BatchSubmitRequest_DDLRequest& operator=(const BatchSubmitRequest_DDLRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchSubmitRequest_DDLRequest& operator=(BatchSubmitRequest_DDLRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BatchSubmitRequest_DDLRequest& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kCreateVertexTypeRequest = 1,
    kCreateEdgeTypeRequest = 2,
    kAddEdgeKindRequest = 3,
    kRemoveEdgeKindRequest = 4,
    kDropVertexTypeRequest = 5,
    kDropEdgeTypeRequest = 6,
    kAddVertexTypePropertiesRequest = 7,
    kAddEdgeTypePropertiesRequest = 8,
    VALUE_NOT_SET = 0,
  };
  static inline const BatchSubmitRequest_DDLRequest* internal_default_instance() {
    return reinterpret_cast<const BatchSubmitRequest_DDLRequest*>(
        &_BatchSubmitRequest_DDLRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BatchSubmitRequest_DDLRequest& a, BatchSubmitRequest_DDLRequest& b) { a.Swap(&b); }
  inline void Swap(BatchSubmitRequest_DDLRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatchSubmitRequest_DDLRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BatchSubmitRequest_DDLRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BatchSubmitRequest_DDLRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BatchSubmitRequest_DDLRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BatchSubmitRequest_DDLRequest& from) { BatchSubmitRequest_DDLRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BatchSubmitRequest_DDLRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.BatchSubmitRequest.DDLRequest"; }

 protected:
  explicit BatchSubmitRequest_DDLRequest(::google::protobuf::Arena* arena);
  BatchSubmitRequest_DDLRequest(::google::protobuf::Arena* arena, const BatchSubmitRequest_DDLRequest& from);
  BatchSubmitRequest_DDLRequest(::google::protobuf::Arena* arena, BatchSubmitRequest_DDLRequest&& from) noexcept
      : BatchSubmitRequest_DDLRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreateVertexTypeRequestFieldNumber = 1,
    kCreateEdgeTypeRequestFieldNumber = 2,
    kAddEdgeKindRequestFieldNumber = 3,
    kRemoveEdgeKindRequestFieldNumber = 4,
    kDropVertexTypeRequestFieldNumber = 5,
    kDropEdgeTypeRequestFieldNumber = 6,
    kAddVertexTypePropertiesRequestFieldNumber = 7,
    kAddEdgeTypePropertiesRequestFieldNumber = 8,
  };
  // .gs.rpc.groot.CreateVertexTypeRequest create_vertex_type_request = 1;
  bool has_create_vertex_type_request() const;
  private:
  bool _internal_has_create_vertex_type_request() const;

  public:
  void clear_create_vertex_type_request() ;
  const ::gs::rpc::groot::CreateVertexTypeRequest& create_vertex_type_request() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::CreateVertexTypeRequest* release_create_vertex_type_request();
  ::gs::rpc::groot::CreateVertexTypeRequest* mutable_create_vertex_type_request();
  void set_allocated_create_vertex_type_request(::gs::rpc::groot::CreateVertexTypeRequest* value);
  void unsafe_arena_set_allocated_create_vertex_type_request(::gs::rpc::groot::CreateVertexTypeRequest* value);
  ::gs::rpc::groot::CreateVertexTypeRequest* unsafe_arena_release_create_vertex_type_request();

  private:
  const ::gs::rpc::groot::CreateVertexTypeRequest& _internal_create_vertex_type_request() const;
  ::gs::rpc::groot::CreateVertexTypeRequest* _internal_mutable_create_vertex_type_request();

  public:
  // .gs.rpc.groot.CreateEdgeTypeRequest create_edge_type_request = 2;
  bool has_create_edge_type_request() const;
  private:
  bool _internal_has_create_edge_type_request() const;

  public:
  void clear_create_edge_type_request() ;
  const ::gs::rpc::groot::CreateEdgeTypeRequest& create_edge_type_request() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::CreateEdgeTypeRequest* release_create_edge_type_request();
  ::gs::rpc::groot::CreateEdgeTypeRequest* mutable_create_edge_type_request();
  void set_allocated_create_edge_type_request(::gs::rpc::groot::CreateEdgeTypeRequest* value);
  void unsafe_arena_set_allocated_create_edge_type_request(::gs::rpc::groot::CreateEdgeTypeRequest* value);
  ::gs::rpc::groot::CreateEdgeTypeRequest* unsafe_arena_release_create_edge_type_request();

  private:
  const ::gs::rpc::groot::CreateEdgeTypeRequest& _internal_create_edge_type_request() const;
  ::gs::rpc::groot::CreateEdgeTypeRequest* _internal_mutable_create_edge_type_request();

  public:
  // .gs.rpc.groot.AddEdgeKindRequest add_edge_kind_request = 3;
  bool has_add_edge_kind_request() const;
  private:
  bool _internal_has_add_edge_kind_request() const;

  public:
  void clear_add_edge_kind_request() ;
  const ::gs::rpc::groot::AddEdgeKindRequest& add_edge_kind_request() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::AddEdgeKindRequest* release_add_edge_kind_request();
  ::gs::rpc::groot::AddEdgeKindRequest* mutable_add_edge_kind_request();
  void set_allocated_add_edge_kind_request(::gs::rpc::groot::AddEdgeKindRequest* value);
  void unsafe_arena_set_allocated_add_edge_kind_request(::gs::rpc::groot::AddEdgeKindRequest* value);
  ::gs::rpc::groot::AddEdgeKindRequest* unsafe_arena_release_add_edge_kind_request();

  private:
  const ::gs::rpc::groot::AddEdgeKindRequest& _internal_add_edge_kind_request() const;
  ::gs::rpc::groot::AddEdgeKindRequest* _internal_mutable_add_edge_kind_request();

  public:
  // .gs.rpc.groot.RemoveEdgeKindRequest remove_edge_kind_request = 4;
  bool has_remove_edge_kind_request() const;
  private:
  bool _internal_has_remove_edge_kind_request() const;

  public:
  void clear_remove_edge_kind_request() ;
  const ::gs::rpc::groot::RemoveEdgeKindRequest& remove_edge_kind_request() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::RemoveEdgeKindRequest* release_remove_edge_kind_request();
  ::gs::rpc::groot::RemoveEdgeKindRequest* mutable_remove_edge_kind_request();
  void set_allocated_remove_edge_kind_request(::gs::rpc::groot::RemoveEdgeKindRequest* value);
  void unsafe_arena_set_allocated_remove_edge_kind_request(::gs::rpc::groot::RemoveEdgeKindRequest* value);
  ::gs::rpc::groot::RemoveEdgeKindRequest* unsafe_arena_release_remove_edge_kind_request();

  private:
  const ::gs::rpc::groot::RemoveEdgeKindRequest& _internal_remove_edge_kind_request() const;
  ::gs::rpc::groot::RemoveEdgeKindRequest* _internal_mutable_remove_edge_kind_request();

  public:
  // .gs.rpc.groot.DropVertexTypeRequest drop_vertex_type_request = 5;
  bool has_drop_vertex_type_request() const;
  private:
  bool _internal_has_drop_vertex_type_request() const;

  public:
  void clear_drop_vertex_type_request() ;
  const ::gs::rpc::groot::DropVertexTypeRequest& drop_vertex_type_request() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::DropVertexTypeRequest* release_drop_vertex_type_request();
  ::gs::rpc::groot::DropVertexTypeRequest* mutable_drop_vertex_type_request();
  void set_allocated_drop_vertex_type_request(::gs::rpc::groot::DropVertexTypeRequest* value);
  void unsafe_arena_set_allocated_drop_vertex_type_request(::gs::rpc::groot::DropVertexTypeRequest* value);
  ::gs::rpc::groot::DropVertexTypeRequest* unsafe_arena_release_drop_vertex_type_request();

  private:
  const ::gs::rpc::groot::DropVertexTypeRequest& _internal_drop_vertex_type_request() const;
  ::gs::rpc::groot::DropVertexTypeRequest* _internal_mutable_drop_vertex_type_request();

  public:
  // .gs.rpc.groot.DropEdgeTypeRequest drop_edge_type_request = 6;
  bool has_drop_edge_type_request() const;
  private:
  bool _internal_has_drop_edge_type_request() const;

  public:
  void clear_drop_edge_type_request() ;
  const ::gs::rpc::groot::DropEdgeTypeRequest& drop_edge_type_request() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::DropEdgeTypeRequest* release_drop_edge_type_request();
  ::gs::rpc::groot::DropEdgeTypeRequest* mutable_drop_edge_type_request();
  void set_allocated_drop_edge_type_request(::gs::rpc::groot::DropEdgeTypeRequest* value);
  void unsafe_arena_set_allocated_drop_edge_type_request(::gs::rpc::groot::DropEdgeTypeRequest* value);
  ::gs::rpc::groot::DropEdgeTypeRequest* unsafe_arena_release_drop_edge_type_request();

  private:
  const ::gs::rpc::groot::DropEdgeTypeRequest& _internal_drop_edge_type_request() const;
  ::gs::rpc::groot::DropEdgeTypeRequest* _internal_mutable_drop_edge_type_request();

  public:
  // .gs.rpc.groot.AddVertexTypePropertiesRequest add_vertex_type_properties_request = 7;
  bool has_add_vertex_type_properties_request() const;
  private:
  bool _internal_has_add_vertex_type_properties_request() const;

  public:
  void clear_add_vertex_type_properties_request() ;
  const ::gs::rpc::groot::AddVertexTypePropertiesRequest& add_vertex_type_properties_request() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::AddVertexTypePropertiesRequest* release_add_vertex_type_properties_request();
  ::gs::rpc::groot::AddVertexTypePropertiesRequest* mutable_add_vertex_type_properties_request();
  void set_allocated_add_vertex_type_properties_request(::gs::rpc::groot::AddVertexTypePropertiesRequest* value);
  void unsafe_arena_set_allocated_add_vertex_type_properties_request(::gs::rpc::groot::AddVertexTypePropertiesRequest* value);
  ::gs::rpc::groot::AddVertexTypePropertiesRequest* unsafe_arena_release_add_vertex_type_properties_request();

  private:
  const ::gs::rpc::groot::AddVertexTypePropertiesRequest& _internal_add_vertex_type_properties_request() const;
  ::gs::rpc::groot::AddVertexTypePropertiesRequest* _internal_mutable_add_vertex_type_properties_request();

  public:
  // .gs.rpc.groot.AddEdgeTypePropertiesRequest add_edge_type_properties_request = 8;
  bool has_add_edge_type_properties_request() const;
  private:
  bool _internal_has_add_edge_type_properties_request() const;

  public:
  void clear_add_edge_type_properties_request() ;
  const ::gs::rpc::groot::AddEdgeTypePropertiesRequest& add_edge_type_properties_request() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::AddEdgeTypePropertiesRequest* release_add_edge_type_properties_request();
  ::gs::rpc::groot::AddEdgeTypePropertiesRequest* mutable_add_edge_type_properties_request();
  void set_allocated_add_edge_type_properties_request(::gs::rpc::groot::AddEdgeTypePropertiesRequest* value);
  void unsafe_arena_set_allocated_add_edge_type_properties_request(::gs::rpc::groot::AddEdgeTypePropertiesRequest* value);
  ::gs::rpc::groot::AddEdgeTypePropertiesRequest* unsafe_arena_release_add_edge_type_properties_request();

  private:
  const ::gs::rpc::groot::AddEdgeTypePropertiesRequest& _internal_add_edge_type_properties_request() const;
  ::gs::rpc::groot::AddEdgeTypePropertiesRequest* _internal_mutable_add_edge_type_properties_request();

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.BatchSubmitRequest.DDLRequest)
 private:
  class _Internal;
  void set_has_create_vertex_type_request();
  void set_has_create_edge_type_request();
  void set_has_add_edge_kind_request();
  void set_has_remove_edge_kind_request();
  void set_has_drop_vertex_type_request();
  void set_has_drop_edge_type_request();
  void set_has_add_vertex_type_properties_request();
  void set_has_add_edge_type_properties_request();
  inline bool has_value() const;
  inline void clear_has_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 8, 8,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BatchSubmitRequest_DDLRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BatchSubmitRequest_DDLRequest& from_msg);
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::gs::rpc::groot::CreateVertexTypeRequest* create_vertex_type_request_;
      ::gs::rpc::groot::CreateEdgeTypeRequest* create_edge_type_request_;
      ::gs::rpc::groot::AddEdgeKindRequest* add_edge_kind_request_;
      ::gs::rpc::groot::RemoveEdgeKindRequest* remove_edge_kind_request_;
      ::gs::rpc::groot::DropVertexTypeRequest* drop_vertex_type_request_;
      ::gs::rpc::groot::DropEdgeTypeRequest* drop_edge_type_request_;
      ::gs::rpc::groot::AddVertexTypePropertiesRequest* add_vertex_type_properties_request_;
      ::gs::rpc::groot::AddEdgeTypePropertiesRequest* add_edge_type_properties_request_;
    } value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};
// -------------------------------------------------------------------

class BatchSubmitRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.BatchSubmitRequest) */ {
 public:
  inline BatchSubmitRequest() : BatchSubmitRequest(nullptr) {}
  ~BatchSubmitRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BatchSubmitRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BatchSubmitRequest(const BatchSubmitRequest& from) : BatchSubmitRequest(nullptr, from) {}
  inline BatchSubmitRequest(BatchSubmitRequest&& from) noexcept
      : BatchSubmitRequest(nullptr, std::move(from)) {}
  inline BatchSubmitRequest& operator=(const BatchSubmitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchSubmitRequest& operator=(BatchSubmitRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BatchSubmitRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BatchSubmitRequest* internal_default_instance() {
    return reinterpret_cast<const BatchSubmitRequest*>(
        &_BatchSubmitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BatchSubmitRequest& a, BatchSubmitRequest& b) { a.Swap(&b); }
  inline void Swap(BatchSubmitRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatchSubmitRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BatchSubmitRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BatchSubmitRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BatchSubmitRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BatchSubmitRequest& from) { BatchSubmitRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BatchSubmitRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.BatchSubmitRequest"; }

 protected:
  explicit BatchSubmitRequest(::google::protobuf::Arena* arena);
  BatchSubmitRequest(::google::protobuf::Arena* arena, const BatchSubmitRequest& from);
  BatchSubmitRequest(::google::protobuf::Arena* arena, BatchSubmitRequest&& from) noexcept
      : BatchSubmitRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DDLRequest = BatchSubmitRequest_DDLRequest;

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 3,
    kRequestOptionsFieldNumber = 4,
    kFormatVersionFieldNumber = 1,
    kSimpleResponseFieldNumber = 2,
  };
  // repeated .gs.rpc.groot.BatchSubmitRequest.DDLRequest value = 3;
  int value_size() const;
  private:
  int _internal_value_size() const;

  public:
  void clear_value() ;
  ::gs::rpc::groot::BatchSubmitRequest_DDLRequest* mutable_value(int index);
  ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::BatchSubmitRequest_DDLRequest>* mutable_value();

  private:
  const ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::BatchSubmitRequest_DDLRequest>& _internal_value() const;
  ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::BatchSubmitRequest_DDLRequest>* _internal_mutable_value();
  public:
  const ::gs::rpc::groot::BatchSubmitRequest_DDLRequest& value(int index) const;
  ::gs::rpc::groot::BatchSubmitRequest_DDLRequest* add_value();
  const ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::BatchSubmitRequest_DDLRequest>& value() const;
  // .gs.rpc.groot.RequestOptionsPb request_options = 4;
  bool has_request_options() const;
  void clear_request_options() ;
  const ::gs::rpc::groot::RequestOptionsPb& request_options() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::RequestOptionsPb* release_request_options();
  ::gs::rpc::groot::RequestOptionsPb* mutable_request_options();
  void set_allocated_request_options(::gs::rpc::groot::RequestOptionsPb* value);
  void unsafe_arena_set_allocated_request_options(::gs::rpc::groot::RequestOptionsPb* value);
  ::gs::rpc::groot::RequestOptionsPb* unsafe_arena_release_request_options();

  private:
  const ::gs::rpc::groot::RequestOptionsPb& _internal_request_options() const;
  ::gs::rpc::groot::RequestOptionsPb* _internal_mutable_request_options();

  public:
  // int32 format_version = 1;
  void clear_format_version() ;
  ::int32_t format_version() const;
  void set_format_version(::int32_t value);

  private:
  ::int32_t _internal_format_version() const;
  void _internal_set_format_version(::int32_t value);

  public:
  // bool simple_response = 2;
  void clear_simple_response() ;
  bool simple_response() const;
  void set_simple_response(bool value);

  private:
  bool _internal_simple_response() const;
  void _internal_set_simple_response(bool value);

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.BatchSubmitRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BatchSubmitRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BatchSubmitRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::gs::rpc::groot::BatchSubmitRequest_DDLRequest > value_;
    ::gs::rpc::groot::RequestOptionsPb* request_options_;
    ::int32_t format_version_;
    bool simple_response_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ddl_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BatchSubmitRequest_DDLRequest

// .gs.rpc.groot.CreateVertexTypeRequest create_vertex_type_request = 1;
inline bool BatchSubmitRequest_DDLRequest::has_create_vertex_type_request() const {
  return value_case() == kCreateVertexTypeRequest;
}
inline bool BatchSubmitRequest_DDLRequest::_internal_has_create_vertex_type_request() const {
  return value_case() == kCreateVertexTypeRequest;
}
inline void BatchSubmitRequest_DDLRequest::set_has_create_vertex_type_request() {
  _impl_._oneof_case_[0] = kCreateVertexTypeRequest;
}
inline void BatchSubmitRequest_DDLRequest::clear_create_vertex_type_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kCreateVertexTypeRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.create_vertex_type_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.create_vertex_type_request_);
    }
    clear_has_value();
  }
}
inline ::gs::rpc::groot::CreateVertexTypeRequest* BatchSubmitRequest_DDLRequest::release_create_vertex_type_request() {
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.create_vertex_type_request)
  if (value_case() == kCreateVertexTypeRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.create_vertex_type_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.create_vertex_type_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::gs::rpc::groot::CreateVertexTypeRequest& BatchSubmitRequest_DDLRequest::_internal_create_vertex_type_request() const {
  return value_case() == kCreateVertexTypeRequest ? *_impl_.value_.create_vertex_type_request_ : reinterpret_cast<::gs::rpc::groot::CreateVertexTypeRequest&>(::gs::rpc::groot::_CreateVertexTypeRequest_default_instance_);
}
inline const ::gs::rpc::groot::CreateVertexTypeRequest& BatchSubmitRequest_DDLRequest::create_vertex_type_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.DDLRequest.create_vertex_type_request)
  return _internal_create_vertex_type_request();
}
inline ::gs::rpc::groot::CreateVertexTypeRequest* BatchSubmitRequest_DDLRequest::unsafe_arena_release_create_vertex_type_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.create_vertex_type_request)
  if (value_case() == kCreateVertexTypeRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.create_vertex_type_request_;
    _impl_.value_.create_vertex_type_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BatchSubmitRequest_DDLRequest::unsafe_arena_set_allocated_create_vertex_type_request(::gs::rpc::groot::CreateVertexTypeRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_create_vertex_type_request();
    _impl_.value_.create_vertex_type_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.BatchSubmitRequest.DDLRequest.create_vertex_type_request)
}
inline ::gs::rpc::groot::CreateVertexTypeRequest* BatchSubmitRequest_DDLRequest::_internal_mutable_create_vertex_type_request() {
  if (value_case() != kCreateVertexTypeRequest) {
    clear_value();
    set_has_create_vertex_type_request();
    _impl_.value_.create_vertex_type_request_ =
        ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::CreateVertexTypeRequest>(GetArena());
  }
  return _impl_.value_.create_vertex_type_request_;
}
inline ::gs::rpc::groot::CreateVertexTypeRequest* BatchSubmitRequest_DDLRequest::mutable_create_vertex_type_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::gs::rpc::groot::CreateVertexTypeRequest* _msg = _internal_mutable_create_vertex_type_request();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchSubmitRequest.DDLRequest.create_vertex_type_request)
  return _msg;
}

// .gs.rpc.groot.CreateEdgeTypeRequest create_edge_type_request = 2;
inline bool BatchSubmitRequest_DDLRequest::has_create_edge_type_request() const {
  return value_case() == kCreateEdgeTypeRequest;
}
inline bool BatchSubmitRequest_DDLRequest::_internal_has_create_edge_type_request() const {
  return value_case() == kCreateEdgeTypeRequest;
}
inline void BatchSubmitRequest_DDLRequest::set_has_create_edge_type_request() {
  _impl_._oneof_case_[0] = kCreateEdgeTypeRequest;
}
inline void BatchSubmitRequest_DDLRequest::clear_create_edge_type_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kCreateEdgeTypeRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.create_edge_type_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.create_edge_type_request_);
    }
    clear_has_value();
  }
}
inline ::gs::rpc::groot::CreateEdgeTypeRequest* BatchSubmitRequest_DDLRequest::release_create_edge_type_request() {
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.create_edge_type_request)
  if (value_case() == kCreateEdgeTypeRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.create_edge_type_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.create_edge_type_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::gs::rpc::groot::CreateEdgeTypeRequest& BatchSubmitRequest_DDLRequest::_internal_create_edge_type_request() const {
  return value_case() == kCreateEdgeTypeRequest ? *_impl_.value_.create_edge_type_request_ : reinterpret_cast<::gs::rpc::groot::CreateEdgeTypeRequest&>(::gs::rpc::groot::_CreateEdgeTypeRequest_default_instance_);
}
inline const ::gs::rpc::groot::CreateEdgeTypeRequest& BatchSubmitRequest_DDLRequest::create_edge_type_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.DDLRequest.create_edge_type_request)
  return _internal_create_edge_type_request();
}
inline ::gs::rpc::groot::CreateEdgeTypeRequest* BatchSubmitRequest_DDLRequest::unsafe_arena_release_create_edge_type_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.create_edge_type_request)
  if (value_case() == kCreateEdgeTypeRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.create_edge_type_request_;
    _impl_.value_.create_edge_type_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BatchSubmitRequest_DDLRequest::unsafe_arena_set_allocated_create_edge_type_request(::gs::rpc::groot::CreateEdgeTypeRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_create_edge_type_request();
    _impl_.value_.create_edge_type_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.BatchSubmitRequest.DDLRequest.create_edge_type_request)
}
inline ::gs::rpc::groot::CreateEdgeTypeRequest* BatchSubmitRequest_DDLRequest::_internal_mutable_create_edge_type_request() {
  if (value_case() != kCreateEdgeTypeRequest) {
    clear_value();
    set_has_create_edge_type_request();
    _impl_.value_.create_edge_type_request_ =
        ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::CreateEdgeTypeRequest>(GetArena());
  }
  return _impl_.value_.create_edge_type_request_;
}
inline ::gs::rpc::groot::CreateEdgeTypeRequest* BatchSubmitRequest_DDLRequest::mutable_create_edge_type_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::gs::rpc::groot::CreateEdgeTypeRequest* _msg = _internal_mutable_create_edge_type_request();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchSubmitRequest.DDLRequest.create_edge_type_request)
  return _msg;
}

// .gs.rpc.groot.AddEdgeKindRequest add_edge_kind_request = 3;
inline bool BatchSubmitRequest_DDLRequest::has_add_edge_kind_request() const {
  return value_case() == kAddEdgeKindRequest;
}
inline bool BatchSubmitRequest_DDLRequest::_internal_has_add_edge_kind_request() const {
  return value_case() == kAddEdgeKindRequest;
}
inline void BatchSubmitRequest_DDLRequest::set_has_add_edge_kind_request() {
  _impl_._oneof_case_[0] = kAddEdgeKindRequest;
}
inline void BatchSubmitRequest_DDLRequest::clear_add_edge_kind_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kAddEdgeKindRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.add_edge_kind_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.add_edge_kind_request_);
    }
    clear_has_value();
  }
}
inline ::gs::rpc::groot::AddEdgeKindRequest* BatchSubmitRequest_DDLRequest::release_add_edge_kind_request() {
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_edge_kind_request)
  if (value_case() == kAddEdgeKindRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.add_edge_kind_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.add_edge_kind_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::gs::rpc::groot::AddEdgeKindRequest& BatchSubmitRequest_DDLRequest::_internal_add_edge_kind_request() const {
  return value_case() == kAddEdgeKindRequest ? *_impl_.value_.add_edge_kind_request_ : reinterpret_cast<::gs::rpc::groot::AddEdgeKindRequest&>(::gs::rpc::groot::_AddEdgeKindRequest_default_instance_);
}
inline const ::gs::rpc::groot::AddEdgeKindRequest& BatchSubmitRequest_DDLRequest::add_edge_kind_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_edge_kind_request)
  return _internal_add_edge_kind_request();
}
inline ::gs::rpc::groot::AddEdgeKindRequest* BatchSubmitRequest_DDLRequest::unsafe_arena_release_add_edge_kind_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_edge_kind_request)
  if (value_case() == kAddEdgeKindRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.add_edge_kind_request_;
    _impl_.value_.add_edge_kind_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BatchSubmitRequest_DDLRequest::unsafe_arena_set_allocated_add_edge_kind_request(::gs::rpc::groot::AddEdgeKindRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_add_edge_kind_request();
    _impl_.value_.add_edge_kind_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_edge_kind_request)
}
inline ::gs::rpc::groot::AddEdgeKindRequest* BatchSubmitRequest_DDLRequest::_internal_mutable_add_edge_kind_request() {
  if (value_case() != kAddEdgeKindRequest) {
    clear_value();
    set_has_add_edge_kind_request();
    _impl_.value_.add_edge_kind_request_ =
        ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::AddEdgeKindRequest>(GetArena());
  }
  return _impl_.value_.add_edge_kind_request_;
}
inline ::gs::rpc::groot::AddEdgeKindRequest* BatchSubmitRequest_DDLRequest::mutable_add_edge_kind_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::gs::rpc::groot::AddEdgeKindRequest* _msg = _internal_mutable_add_edge_kind_request();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_edge_kind_request)
  return _msg;
}

// .gs.rpc.groot.RemoveEdgeKindRequest remove_edge_kind_request = 4;
inline bool BatchSubmitRequest_DDLRequest::has_remove_edge_kind_request() const {
  return value_case() == kRemoveEdgeKindRequest;
}
inline bool BatchSubmitRequest_DDLRequest::_internal_has_remove_edge_kind_request() const {
  return value_case() == kRemoveEdgeKindRequest;
}
inline void BatchSubmitRequest_DDLRequest::set_has_remove_edge_kind_request() {
  _impl_._oneof_case_[0] = kRemoveEdgeKindRequest;
}
inline void BatchSubmitRequest_DDLRequest::clear_remove_edge_kind_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kRemoveEdgeKindRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.remove_edge_kind_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.remove_edge_kind_request_);
    }
    clear_has_value();
  }
}
inline ::gs::rpc::groot::RemoveEdgeKindRequest* BatchSubmitRequest_DDLRequest::release_remove_edge_kind_request() {
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.remove_edge_kind_request)
  if (value_case() == kRemoveEdgeKindRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.remove_edge_kind_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.remove_edge_kind_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::gs::rpc::groot::RemoveEdgeKindRequest& BatchSubmitRequest_DDLRequest::_internal_remove_edge_kind_request() const {
  return value_case() == kRemoveEdgeKindRequest ? *_impl_.value_.remove_edge_kind_request_ : reinterpret_cast<::gs::rpc::groot::RemoveEdgeKindRequest&>(::gs::rpc::groot::_RemoveEdgeKindRequest_default_instance_);
}
inline const ::gs::rpc::groot::RemoveEdgeKindRequest& BatchSubmitRequest_DDLRequest::remove_edge_kind_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.DDLRequest.remove_edge_kind_request)
  return _internal_remove_edge_kind_request();
}
inline ::gs::rpc::groot::RemoveEdgeKindRequest* BatchSubmitRequest_DDLRequest::unsafe_arena_release_remove_edge_kind_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.remove_edge_kind_request)
  if (value_case() == kRemoveEdgeKindRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.remove_edge_kind_request_;
    _impl_.value_.remove_edge_kind_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BatchSubmitRequest_DDLRequest::unsafe_arena_set_allocated_remove_edge_kind_request(::gs::rpc::groot::RemoveEdgeKindRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_remove_edge_kind_request();
    _impl_.value_.remove_edge_kind_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.BatchSubmitRequest.DDLRequest.remove_edge_kind_request)
}
inline ::gs::rpc::groot::RemoveEdgeKindRequest* BatchSubmitRequest_DDLRequest::_internal_mutable_remove_edge_kind_request() {
  if (value_case() != kRemoveEdgeKindRequest) {
    clear_value();
    set_has_remove_edge_kind_request();
    _impl_.value_.remove_edge_kind_request_ =
        ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::RemoveEdgeKindRequest>(GetArena());
  }
  return _impl_.value_.remove_edge_kind_request_;
}
inline ::gs::rpc::groot::RemoveEdgeKindRequest* BatchSubmitRequest_DDLRequest::mutable_remove_edge_kind_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::gs::rpc::groot::RemoveEdgeKindRequest* _msg = _internal_mutable_remove_edge_kind_request();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchSubmitRequest.DDLRequest.remove_edge_kind_request)
  return _msg;
}

// .gs.rpc.groot.DropVertexTypeRequest drop_vertex_type_request = 5;
inline bool BatchSubmitRequest_DDLRequest::has_drop_vertex_type_request() const {
  return value_case() == kDropVertexTypeRequest;
}
inline bool BatchSubmitRequest_DDLRequest::_internal_has_drop_vertex_type_request() const {
  return value_case() == kDropVertexTypeRequest;
}
inline void BatchSubmitRequest_DDLRequest::set_has_drop_vertex_type_request() {
  _impl_._oneof_case_[0] = kDropVertexTypeRequest;
}
inline void BatchSubmitRequest_DDLRequest::clear_drop_vertex_type_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kDropVertexTypeRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.drop_vertex_type_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.drop_vertex_type_request_);
    }
    clear_has_value();
  }
}
inline ::gs::rpc::groot::DropVertexTypeRequest* BatchSubmitRequest_DDLRequest::release_drop_vertex_type_request() {
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.drop_vertex_type_request)
  if (value_case() == kDropVertexTypeRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.drop_vertex_type_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.drop_vertex_type_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::gs::rpc::groot::DropVertexTypeRequest& BatchSubmitRequest_DDLRequest::_internal_drop_vertex_type_request() const {
  return value_case() == kDropVertexTypeRequest ? *_impl_.value_.drop_vertex_type_request_ : reinterpret_cast<::gs::rpc::groot::DropVertexTypeRequest&>(::gs::rpc::groot::_DropVertexTypeRequest_default_instance_);
}
inline const ::gs::rpc::groot::DropVertexTypeRequest& BatchSubmitRequest_DDLRequest::drop_vertex_type_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.DDLRequest.drop_vertex_type_request)
  return _internal_drop_vertex_type_request();
}
inline ::gs::rpc::groot::DropVertexTypeRequest* BatchSubmitRequest_DDLRequest::unsafe_arena_release_drop_vertex_type_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.drop_vertex_type_request)
  if (value_case() == kDropVertexTypeRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.drop_vertex_type_request_;
    _impl_.value_.drop_vertex_type_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BatchSubmitRequest_DDLRequest::unsafe_arena_set_allocated_drop_vertex_type_request(::gs::rpc::groot::DropVertexTypeRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_drop_vertex_type_request();
    _impl_.value_.drop_vertex_type_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.BatchSubmitRequest.DDLRequest.drop_vertex_type_request)
}
inline ::gs::rpc::groot::DropVertexTypeRequest* BatchSubmitRequest_DDLRequest::_internal_mutable_drop_vertex_type_request() {
  if (value_case() != kDropVertexTypeRequest) {
    clear_value();
    set_has_drop_vertex_type_request();
    _impl_.value_.drop_vertex_type_request_ =
        ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::DropVertexTypeRequest>(GetArena());
  }
  return _impl_.value_.drop_vertex_type_request_;
}
inline ::gs::rpc::groot::DropVertexTypeRequest* BatchSubmitRequest_DDLRequest::mutable_drop_vertex_type_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::gs::rpc::groot::DropVertexTypeRequest* _msg = _internal_mutable_drop_vertex_type_request();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchSubmitRequest.DDLRequest.drop_vertex_type_request)
  return _msg;
}

// .gs.rpc.groot.DropEdgeTypeRequest drop_edge_type_request = 6;
inline bool BatchSubmitRequest_DDLRequest::has_drop_edge_type_request() const {
  return value_case() == kDropEdgeTypeRequest;
}
inline bool BatchSubmitRequest_DDLRequest::_internal_has_drop_edge_type_request() const {
  return value_case() == kDropEdgeTypeRequest;
}
inline void BatchSubmitRequest_DDLRequest::set_has_drop_edge_type_request() {
  _impl_._oneof_case_[0] = kDropEdgeTypeRequest;
}
inline void BatchSubmitRequest_DDLRequest::clear_drop_edge_type_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kDropEdgeTypeRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.drop_edge_type_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.drop_edge_type_request_);
    }
    clear_has_value();
  }
}
inline ::gs::rpc::groot::DropEdgeTypeRequest* BatchSubmitRequest_DDLRequest::release_drop_edge_type_request() {
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.drop_edge_type_request)
  if (value_case() == kDropEdgeTypeRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.drop_edge_type_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.drop_edge_type_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::gs::rpc::groot::DropEdgeTypeRequest& BatchSubmitRequest_DDLRequest::_internal_drop_edge_type_request() const {
  return value_case() == kDropEdgeTypeRequest ? *_impl_.value_.drop_edge_type_request_ : reinterpret_cast<::gs::rpc::groot::DropEdgeTypeRequest&>(::gs::rpc::groot::_DropEdgeTypeRequest_default_instance_);
}
inline const ::gs::rpc::groot::DropEdgeTypeRequest& BatchSubmitRequest_DDLRequest::drop_edge_type_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.DDLRequest.drop_edge_type_request)
  return _internal_drop_edge_type_request();
}
inline ::gs::rpc::groot::DropEdgeTypeRequest* BatchSubmitRequest_DDLRequest::unsafe_arena_release_drop_edge_type_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.drop_edge_type_request)
  if (value_case() == kDropEdgeTypeRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.drop_edge_type_request_;
    _impl_.value_.drop_edge_type_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BatchSubmitRequest_DDLRequest::unsafe_arena_set_allocated_drop_edge_type_request(::gs::rpc::groot::DropEdgeTypeRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_drop_edge_type_request();
    _impl_.value_.drop_edge_type_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.BatchSubmitRequest.DDLRequest.drop_edge_type_request)
}
inline ::gs::rpc::groot::DropEdgeTypeRequest* BatchSubmitRequest_DDLRequest::_internal_mutable_drop_edge_type_request() {
  if (value_case() != kDropEdgeTypeRequest) {
    clear_value();
    set_has_drop_edge_type_request();
    _impl_.value_.drop_edge_type_request_ =
        ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::DropEdgeTypeRequest>(GetArena());
  }
  return _impl_.value_.drop_edge_type_request_;
}
inline ::gs::rpc::groot::DropEdgeTypeRequest* BatchSubmitRequest_DDLRequest::mutable_drop_edge_type_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::gs::rpc::groot::DropEdgeTypeRequest* _msg = _internal_mutable_drop_edge_type_request();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchSubmitRequest.DDLRequest.drop_edge_type_request)
  return _msg;
}

// .gs.rpc.groot.AddVertexTypePropertiesRequest add_vertex_type_properties_request = 7;
inline bool BatchSubmitRequest_DDLRequest::has_add_vertex_type_properties_request() const {
  return value_case() == kAddVertexTypePropertiesRequest;
}
inline bool BatchSubmitRequest_DDLRequest::_internal_has_add_vertex_type_properties_request() const {
  return value_case() == kAddVertexTypePropertiesRequest;
}
inline void BatchSubmitRequest_DDLRequest::set_has_add_vertex_type_properties_request() {
  _impl_._oneof_case_[0] = kAddVertexTypePropertiesRequest;
}
inline void BatchSubmitRequest_DDLRequest::clear_add_vertex_type_properties_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kAddVertexTypePropertiesRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.add_vertex_type_properties_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.add_vertex_type_properties_request_);
    }
    clear_has_value();
  }
}
inline ::gs::rpc::groot::AddVertexTypePropertiesRequest* BatchSubmitRequest_DDLRequest::release_add_vertex_type_properties_request() {
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_vertex_type_properties_request)
  if (value_case() == kAddVertexTypePropertiesRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.add_vertex_type_properties_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.add_vertex_type_properties_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::gs::rpc::groot::AddVertexTypePropertiesRequest& BatchSubmitRequest_DDLRequest::_internal_add_vertex_type_properties_request() const {
  return value_case() == kAddVertexTypePropertiesRequest ? *_impl_.value_.add_vertex_type_properties_request_ : reinterpret_cast<::gs::rpc::groot::AddVertexTypePropertiesRequest&>(::gs::rpc::groot::_AddVertexTypePropertiesRequest_default_instance_);
}
inline const ::gs::rpc::groot::AddVertexTypePropertiesRequest& BatchSubmitRequest_DDLRequest::add_vertex_type_properties_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_vertex_type_properties_request)
  return _internal_add_vertex_type_properties_request();
}
inline ::gs::rpc::groot::AddVertexTypePropertiesRequest* BatchSubmitRequest_DDLRequest::unsafe_arena_release_add_vertex_type_properties_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_vertex_type_properties_request)
  if (value_case() == kAddVertexTypePropertiesRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.add_vertex_type_properties_request_;
    _impl_.value_.add_vertex_type_properties_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BatchSubmitRequest_DDLRequest::unsafe_arena_set_allocated_add_vertex_type_properties_request(::gs::rpc::groot::AddVertexTypePropertiesRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_add_vertex_type_properties_request();
    _impl_.value_.add_vertex_type_properties_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_vertex_type_properties_request)
}
inline ::gs::rpc::groot::AddVertexTypePropertiesRequest* BatchSubmitRequest_DDLRequest::_internal_mutable_add_vertex_type_properties_request() {
  if (value_case() != kAddVertexTypePropertiesRequest) {
    clear_value();
    set_has_add_vertex_type_properties_request();
    _impl_.value_.add_vertex_type_properties_request_ =
        ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::AddVertexTypePropertiesRequest>(GetArena());
  }
  return _impl_.value_.add_vertex_type_properties_request_;
}
inline ::gs::rpc::groot::AddVertexTypePropertiesRequest* BatchSubmitRequest_DDLRequest::mutable_add_vertex_type_properties_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::gs::rpc::groot::AddVertexTypePropertiesRequest* _msg = _internal_mutable_add_vertex_type_properties_request();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_vertex_type_properties_request)
  return _msg;
}

// .gs.rpc.groot.AddEdgeTypePropertiesRequest add_edge_type_properties_request = 8;
inline bool BatchSubmitRequest_DDLRequest::has_add_edge_type_properties_request() const {
  return value_case() == kAddEdgeTypePropertiesRequest;
}
inline bool BatchSubmitRequest_DDLRequest::_internal_has_add_edge_type_properties_request() const {
  return value_case() == kAddEdgeTypePropertiesRequest;
}
inline void BatchSubmitRequest_DDLRequest::set_has_add_edge_type_properties_request() {
  _impl_._oneof_case_[0] = kAddEdgeTypePropertiesRequest;
}
inline void BatchSubmitRequest_DDLRequest::clear_add_edge_type_properties_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kAddEdgeTypePropertiesRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.add_edge_type_properties_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.add_edge_type_properties_request_);
    }
    clear_has_value();
  }
}
inline ::gs::rpc::groot::AddEdgeTypePropertiesRequest* BatchSubmitRequest_DDLRequest::release_add_edge_type_properties_request() {
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_edge_type_properties_request)
  if (value_case() == kAddEdgeTypePropertiesRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.add_edge_type_properties_request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.add_edge_type_properties_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::gs::rpc::groot::AddEdgeTypePropertiesRequest& BatchSubmitRequest_DDLRequest::_internal_add_edge_type_properties_request() const {
  return value_case() == kAddEdgeTypePropertiesRequest ? *_impl_.value_.add_edge_type_properties_request_ : reinterpret_cast<::gs::rpc::groot::AddEdgeTypePropertiesRequest&>(::gs::rpc::groot::_AddEdgeTypePropertiesRequest_default_instance_);
}
inline const ::gs::rpc::groot::AddEdgeTypePropertiesRequest& BatchSubmitRequest_DDLRequest::add_edge_type_properties_request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_edge_type_properties_request)
  return _internal_add_edge_type_properties_request();
}
inline ::gs::rpc::groot::AddEdgeTypePropertiesRequest* BatchSubmitRequest_DDLRequest::unsafe_arena_release_add_edge_type_properties_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_edge_type_properties_request)
  if (value_case() == kAddEdgeTypePropertiesRequest) {
    clear_has_value();
    auto* temp = _impl_.value_.add_edge_type_properties_request_;
    _impl_.value_.add_edge_type_properties_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BatchSubmitRequest_DDLRequest::unsafe_arena_set_allocated_add_edge_type_properties_request(::gs::rpc::groot::AddEdgeTypePropertiesRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_add_edge_type_properties_request();
    _impl_.value_.add_edge_type_properties_request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_edge_type_properties_request)
}
inline ::gs::rpc::groot::AddEdgeTypePropertiesRequest* BatchSubmitRequest_DDLRequest::_internal_mutable_add_edge_type_properties_request() {
  if (value_case() != kAddEdgeTypePropertiesRequest) {
    clear_value();
    set_has_add_edge_type_properties_request();
    _impl_.value_.add_edge_type_properties_request_ =
        ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::AddEdgeTypePropertiesRequest>(GetArena());
  }
  return _impl_.value_.add_edge_type_properties_request_;
}
inline ::gs::rpc::groot::AddEdgeTypePropertiesRequest* BatchSubmitRequest_DDLRequest::mutable_add_edge_type_properties_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::gs::rpc::groot::AddEdgeTypePropertiesRequest* _msg = _internal_mutable_add_edge_type_properties_request();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchSubmitRequest.DDLRequest.add_edge_type_properties_request)
  return _msg;
}

inline bool BatchSubmitRequest_DDLRequest::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void BatchSubmitRequest_DDLRequest::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline BatchSubmitRequest_DDLRequest::ValueCase BatchSubmitRequest_DDLRequest::value_case() const {
  return BatchSubmitRequest_DDLRequest::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// BatchSubmitRequest

// int32 format_version = 1;
inline void BatchSubmitRequest::clear_format_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_version_ = 0;
}
inline ::int32_t BatchSubmitRequest::format_version() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.format_version)
  return _internal_format_version();
}
inline void BatchSubmitRequest::set_format_version(::int32_t value) {
  _internal_set_format_version(value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.BatchSubmitRequest.format_version)
}
inline ::int32_t BatchSubmitRequest::_internal_format_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.format_version_;
}
inline void BatchSubmitRequest::_internal_set_format_version(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_version_ = value;
}

// bool simple_response = 2;
inline void BatchSubmitRequest::clear_simple_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.simple_response_ = false;
}
inline bool BatchSubmitRequest::simple_response() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.simple_response)
  return _internal_simple_response();
}
inline void BatchSubmitRequest::set_simple_response(bool value) {
  _internal_set_simple_response(value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.BatchSubmitRequest.simple_response)
}
inline bool BatchSubmitRequest::_internal_simple_response() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.simple_response_;
}
inline void BatchSubmitRequest::_internal_set_simple_response(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.simple_response_ = value;
}

// repeated .gs.rpc.groot.BatchSubmitRequest.DDLRequest value = 3;
inline int BatchSubmitRequest::_internal_value_size() const {
  return _internal_value().size();
}
inline int BatchSubmitRequest::value_size() const {
  return _internal_value_size();
}
inline void BatchSubmitRequest::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Clear();
}
inline ::gs::rpc::groot::BatchSubmitRequest_DDLRequest* BatchSubmitRequest::mutable_value(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchSubmitRequest.value)
  return _internal_mutable_value()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::BatchSubmitRequest_DDLRequest>* BatchSubmitRequest::mutable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:gs.rpc.groot.BatchSubmitRequest.value)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_value();
}
inline const ::gs::rpc::groot::BatchSubmitRequest_DDLRequest& BatchSubmitRequest::value(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.value)
  return _internal_value().Get(index);
}
inline ::gs::rpc::groot::BatchSubmitRequest_DDLRequest* BatchSubmitRequest::add_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::gs::rpc::groot::BatchSubmitRequest_DDLRequest* _add = _internal_mutable_value()->Add();
  // @@protoc_insertion_point(field_add:gs.rpc.groot.BatchSubmitRequest.value)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::BatchSubmitRequest_DDLRequest>& BatchSubmitRequest::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:gs.rpc.groot.BatchSubmitRequest.value)
  return _internal_value();
}
inline const ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::BatchSubmitRequest_DDLRequest>&
BatchSubmitRequest::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::BatchSubmitRequest_DDLRequest>*
BatchSubmitRequest::_internal_mutable_value() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.value_;
}

// .gs.rpc.groot.RequestOptionsPb request_options = 4;
inline bool BatchSubmitRequest::has_request_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.request_options_ != nullptr);
  return value;
}
inline const ::gs::rpc::groot::RequestOptionsPb& BatchSubmitRequest::_internal_request_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::groot::RequestOptionsPb* p = _impl_.request_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::groot::RequestOptionsPb&>(::gs::rpc::groot::_RequestOptionsPb_default_instance_);
}
inline const ::gs::rpc::groot::RequestOptionsPb& BatchSubmitRequest::request_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitRequest.request_options)
  return _internal_request_options();
}
inline void BatchSubmitRequest::unsafe_arena_set_allocated_request_options(::gs::rpc::groot::RequestOptionsPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_options_);
  }
  _impl_.request_options_ = reinterpret_cast<::gs::rpc::groot::RequestOptionsPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.BatchSubmitRequest.request_options)
}
inline ::gs::rpc::groot::RequestOptionsPb* BatchSubmitRequest::release_request_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::groot::RequestOptionsPb* released = _impl_.request_options_;
  _impl_.request_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::groot::RequestOptionsPb* BatchSubmitRequest::unsafe_arena_release_request_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchSubmitRequest.request_options)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::groot::RequestOptionsPb* temp = _impl_.request_options_;
  _impl_.request_options_ = nullptr;
  return temp;
}
inline ::gs::rpc::groot::RequestOptionsPb* BatchSubmitRequest::_internal_mutable_request_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::RequestOptionsPb>(GetArena());
    _impl_.request_options_ = reinterpret_cast<::gs::rpc::groot::RequestOptionsPb*>(p);
  }
  return _impl_.request_options_;
}
inline ::gs::rpc::groot::RequestOptionsPb* BatchSubmitRequest::mutable_request_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::groot::RequestOptionsPb* _msg = _internal_mutable_request_options();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchSubmitRequest.request_options)
  return _msg;
}
inline void BatchSubmitRequest::set_allocated_request_options(::gs::rpc::groot::RequestOptionsPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.request_options_ = reinterpret_cast<::gs::rpc::groot::RequestOptionsPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.BatchSubmitRequest.request_options)
}

// -------------------------------------------------------------------

// BatchSubmitResponse

// int32 format_version = 1;
inline void BatchSubmitResponse::clear_format_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_version_ = 0;
}
inline ::int32_t BatchSubmitResponse::format_version() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitResponse.format_version)
  return _internal_format_version();
}
inline void BatchSubmitResponse::set_format_version(::int32_t value) {
  _internal_set_format_version(value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.BatchSubmitResponse.format_version)
}
inline ::int32_t BatchSubmitResponse::_internal_format_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.format_version_;
}
inline void BatchSubmitResponse::_internal_set_format_version(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_version_ = value;
}

// .gs.rpc.graph.GraphDefPb graph_def = 2;
inline bool BatchSubmitResponse::has_graph_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.graph_def_ != nullptr);
  return value;
}
inline const ::gs::rpc::graph::GraphDefPb& BatchSubmitResponse::_internal_graph_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::graph::GraphDefPb* p = _impl_.graph_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::graph::GraphDefPb&>(::gs::rpc::graph::_GraphDefPb_default_instance_);
}
inline const ::gs::rpc::graph::GraphDefPb& BatchSubmitResponse::graph_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchSubmitResponse.graph_def)
  return _internal_graph_def();
}
inline void BatchSubmitResponse::unsafe_arena_set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.graph_def_);
  }
  _impl_.graph_def_ = reinterpret_cast<::gs::rpc::graph::GraphDefPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.BatchSubmitResponse.graph_def)
}
inline ::gs::rpc::graph::GraphDefPb* BatchSubmitResponse::release_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::GraphDefPb* released = _impl_.graph_def_;
  _impl_.graph_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::graph::GraphDefPb* BatchSubmitResponse::unsafe_arena_release_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchSubmitResponse.graph_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::GraphDefPb* temp = _impl_.graph_def_;
  _impl_.graph_def_ = nullptr;
  return temp;
}
inline ::gs::rpc::graph::GraphDefPb* BatchSubmitResponse::_internal_mutable_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.graph_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::graph::GraphDefPb>(GetArena());
    _impl_.graph_def_ = reinterpret_cast<::gs::rpc::graph::GraphDefPb*>(p);
  }
  return _impl_.graph_def_;
}
inline ::gs::rpc::graph::GraphDefPb* BatchSubmitResponse::mutable_graph_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::graph::GraphDefPb* _msg = _internal_mutable_graph_def();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchSubmitResponse.graph_def)
  return _msg;
}
inline void BatchSubmitResponse::set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.graph_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.graph_def_ = reinterpret_cast<::gs::rpc::graph::GraphDefPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.BatchSubmitResponse.graph_def)
}

// -------------------------------------------------------------------

// CreateVertexTypeRequest

// .gs.rpc.graph.TypeDefPb type_def = 1;
inline bool CreateVertexTypeRequest::has_type_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.type_def_ != nullptr);
  return value;
}
inline const ::gs::rpc::graph::TypeDefPb& CreateVertexTypeRequest::_internal_type_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::graph::TypeDefPb* p = _impl_.type_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::graph::TypeDefPb&>(::gs::rpc::graph::_TypeDefPb_default_instance_);
}
inline const ::gs::rpc::graph::TypeDefPb& CreateVertexTypeRequest::type_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.CreateVertexTypeRequest.type_def)
  return _internal_type_def();
}
inline void CreateVertexTypeRequest::unsafe_arena_set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_def_);
  }
  _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.CreateVertexTypeRequest.type_def)
}
inline ::gs::rpc::graph::TypeDefPb* CreateVertexTypeRequest::release_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::TypeDefPb* released = _impl_.type_def_;
  _impl_.type_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::graph::TypeDefPb* CreateVertexTypeRequest::unsafe_arena_release_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.CreateVertexTypeRequest.type_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::TypeDefPb* temp = _impl_.type_def_;
  _impl_.type_def_ = nullptr;
  return temp;
}
inline ::gs::rpc::graph::TypeDefPb* CreateVertexTypeRequest::_internal_mutable_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.type_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::graph::TypeDefPb>(GetArena());
    _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(p);
  }
  return _impl_.type_def_;
}
inline ::gs::rpc::graph::TypeDefPb* CreateVertexTypeRequest::mutable_type_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::graph::TypeDefPb* _msg = _internal_mutable_type_def();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.CreateVertexTypeRequest.type_def)
  return _msg;
}
inline void CreateVertexTypeRequest::set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.CreateVertexTypeRequest.type_def)
}

// -------------------------------------------------------------------

// AddVertexTypePropertiesRequest

// .gs.rpc.graph.TypeDefPb type_def = 1;
inline bool AddVertexTypePropertiesRequest::has_type_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.type_def_ != nullptr);
  return value;
}
inline const ::gs::rpc::graph::TypeDefPb& AddVertexTypePropertiesRequest::_internal_type_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::graph::TypeDefPb* p = _impl_.type_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::graph::TypeDefPb&>(::gs::rpc::graph::_TypeDefPb_default_instance_);
}
inline const ::gs::rpc::graph::TypeDefPb& AddVertexTypePropertiesRequest::type_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.AddVertexTypePropertiesRequest.type_def)
  return _internal_type_def();
}
inline void AddVertexTypePropertiesRequest::unsafe_arena_set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_def_);
  }
  _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.AddVertexTypePropertiesRequest.type_def)
}
inline ::gs::rpc::graph::TypeDefPb* AddVertexTypePropertiesRequest::release_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::TypeDefPb* released = _impl_.type_def_;
  _impl_.type_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::graph::TypeDefPb* AddVertexTypePropertiesRequest::unsafe_arena_release_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.AddVertexTypePropertiesRequest.type_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::TypeDefPb* temp = _impl_.type_def_;
  _impl_.type_def_ = nullptr;
  return temp;
}
inline ::gs::rpc::graph::TypeDefPb* AddVertexTypePropertiesRequest::_internal_mutable_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.type_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::graph::TypeDefPb>(GetArena());
    _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(p);
  }
  return _impl_.type_def_;
}
inline ::gs::rpc::graph::TypeDefPb* AddVertexTypePropertiesRequest::mutable_type_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::graph::TypeDefPb* _msg = _internal_mutable_type_def();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.AddVertexTypePropertiesRequest.type_def)
  return _msg;
}
inline void AddVertexTypePropertiesRequest::set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.AddVertexTypePropertiesRequest.type_def)
}

// -------------------------------------------------------------------

// CreateEdgeTypeRequest

// .gs.rpc.graph.TypeDefPb type_def = 1;
inline bool CreateEdgeTypeRequest::has_type_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.type_def_ != nullptr);
  return value;
}
inline const ::gs::rpc::graph::TypeDefPb& CreateEdgeTypeRequest::_internal_type_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::graph::TypeDefPb* p = _impl_.type_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::graph::TypeDefPb&>(::gs::rpc::graph::_TypeDefPb_default_instance_);
}
inline const ::gs::rpc::graph::TypeDefPb& CreateEdgeTypeRequest::type_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.CreateEdgeTypeRequest.type_def)
  return _internal_type_def();
}
inline void CreateEdgeTypeRequest::unsafe_arena_set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_def_);
  }
  _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.CreateEdgeTypeRequest.type_def)
}
inline ::gs::rpc::graph::TypeDefPb* CreateEdgeTypeRequest::release_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::TypeDefPb* released = _impl_.type_def_;
  _impl_.type_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::graph::TypeDefPb* CreateEdgeTypeRequest::unsafe_arena_release_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.CreateEdgeTypeRequest.type_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::TypeDefPb* temp = _impl_.type_def_;
  _impl_.type_def_ = nullptr;
  return temp;
}
inline ::gs::rpc::graph::TypeDefPb* CreateEdgeTypeRequest::_internal_mutable_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.type_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::graph::TypeDefPb>(GetArena());
    _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(p);
  }
  return _impl_.type_def_;
}
inline ::gs::rpc::graph::TypeDefPb* CreateEdgeTypeRequest::mutable_type_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::graph::TypeDefPb* _msg = _internal_mutable_type_def();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.CreateEdgeTypeRequest.type_def)
  return _msg;
}
inline void CreateEdgeTypeRequest::set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.CreateEdgeTypeRequest.type_def)
}

// -------------------------------------------------------------------

// AddEdgeTypePropertiesRequest

// .gs.rpc.graph.TypeDefPb type_def = 1;
inline bool AddEdgeTypePropertiesRequest::has_type_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.type_def_ != nullptr);
  return value;
}
inline const ::gs::rpc::graph::TypeDefPb& AddEdgeTypePropertiesRequest::_internal_type_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::graph::TypeDefPb* p = _impl_.type_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::graph::TypeDefPb&>(::gs::rpc::graph::_TypeDefPb_default_instance_);
}
inline const ::gs::rpc::graph::TypeDefPb& AddEdgeTypePropertiesRequest::type_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.AddEdgeTypePropertiesRequest.type_def)
  return _internal_type_def();
}
inline void AddEdgeTypePropertiesRequest::unsafe_arena_set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_def_);
  }
  _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.AddEdgeTypePropertiesRequest.type_def)
}
inline ::gs::rpc::graph::TypeDefPb* AddEdgeTypePropertiesRequest::release_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::TypeDefPb* released = _impl_.type_def_;
  _impl_.type_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::graph::TypeDefPb* AddEdgeTypePropertiesRequest::unsafe_arena_release_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.AddEdgeTypePropertiesRequest.type_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::TypeDefPb* temp = _impl_.type_def_;
  _impl_.type_def_ = nullptr;
  return temp;
}
inline ::gs::rpc::graph::TypeDefPb* AddEdgeTypePropertiesRequest::_internal_mutable_type_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.type_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::graph::TypeDefPb>(GetArena());
    _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(p);
  }
  return _impl_.type_def_;
}
inline ::gs::rpc::graph::TypeDefPb* AddEdgeTypePropertiesRequest::mutable_type_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::graph::TypeDefPb* _msg = _internal_mutable_type_def();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.AddEdgeTypePropertiesRequest.type_def)
  return _msg;
}
inline void AddEdgeTypePropertiesRequest::set_allocated_type_def(::gs::rpc::graph::TypeDefPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.type_def_ = reinterpret_cast<::gs::rpc::graph::TypeDefPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.AddEdgeTypePropertiesRequest.type_def)
}

// -------------------------------------------------------------------

// AddEdgeKindRequest

// string edge_label = 1;
inline void AddEdgeKindRequest::clear_edge_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edge_label_.ClearToEmpty();
}
inline const std::string& AddEdgeKindRequest::edge_label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.AddEdgeKindRequest.edge_label)
  return _internal_edge_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddEdgeKindRequest::set_edge_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edge_label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.AddEdgeKindRequest.edge_label)
}
inline std::string* AddEdgeKindRequest::mutable_edge_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_edge_label();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.AddEdgeKindRequest.edge_label)
  return _s;
}
inline const std::string& AddEdgeKindRequest::_internal_edge_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.edge_label_.Get();
}
inline void AddEdgeKindRequest::_internal_set_edge_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edge_label_.Set(value, GetArena());
}
inline std::string* AddEdgeKindRequest::_internal_mutable_edge_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.edge_label_.Mutable( GetArena());
}
inline std::string* AddEdgeKindRequest::release_edge_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.AddEdgeKindRequest.edge_label)
  return _impl_.edge_label_.Release();
}
inline void AddEdgeKindRequest::set_allocated_edge_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edge_label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.edge_label_.IsDefault()) {
          _impl_.edge_label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.AddEdgeKindRequest.edge_label)
}

// string src_vertex_label = 2;
inline void AddEdgeKindRequest::clear_src_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_vertex_label_.ClearToEmpty();
}
inline const std::string& AddEdgeKindRequest::src_vertex_label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.AddEdgeKindRequest.src_vertex_label)
  return _internal_src_vertex_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddEdgeKindRequest::set_src_vertex_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_vertex_label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.AddEdgeKindRequest.src_vertex_label)
}
inline std::string* AddEdgeKindRequest::mutable_src_vertex_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_src_vertex_label();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.AddEdgeKindRequest.src_vertex_label)
  return _s;
}
inline const std::string& AddEdgeKindRequest::_internal_src_vertex_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.src_vertex_label_.Get();
}
inline void AddEdgeKindRequest::_internal_set_src_vertex_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_vertex_label_.Set(value, GetArena());
}
inline std::string* AddEdgeKindRequest::_internal_mutable_src_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.src_vertex_label_.Mutable( GetArena());
}
inline std::string* AddEdgeKindRequest::release_src_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.AddEdgeKindRequest.src_vertex_label)
  return _impl_.src_vertex_label_.Release();
}
inline void AddEdgeKindRequest::set_allocated_src_vertex_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_vertex_label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.src_vertex_label_.IsDefault()) {
          _impl_.src_vertex_label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.AddEdgeKindRequest.src_vertex_label)
}

// string dst_vertex_label = 3;
inline void AddEdgeKindRequest::clear_dst_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_vertex_label_.ClearToEmpty();
}
inline const std::string& AddEdgeKindRequest::dst_vertex_label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.AddEdgeKindRequest.dst_vertex_label)
  return _internal_dst_vertex_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddEdgeKindRequest::set_dst_vertex_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_vertex_label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.AddEdgeKindRequest.dst_vertex_label)
}
inline std::string* AddEdgeKindRequest::mutable_dst_vertex_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dst_vertex_label();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.AddEdgeKindRequest.dst_vertex_label)
  return _s;
}
inline const std::string& AddEdgeKindRequest::_internal_dst_vertex_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dst_vertex_label_.Get();
}
inline void AddEdgeKindRequest::_internal_set_dst_vertex_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_vertex_label_.Set(value, GetArena());
}
inline std::string* AddEdgeKindRequest::_internal_mutable_dst_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dst_vertex_label_.Mutable( GetArena());
}
inline std::string* AddEdgeKindRequest::release_dst_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.AddEdgeKindRequest.dst_vertex_label)
  return _impl_.dst_vertex_label_.Release();
}
inline void AddEdgeKindRequest::set_allocated_dst_vertex_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_vertex_label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dst_vertex_label_.IsDefault()) {
          _impl_.dst_vertex_label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.AddEdgeKindRequest.dst_vertex_label)
}

// -------------------------------------------------------------------

// RemoveEdgeKindRequest

// string edge_label = 1;
inline void RemoveEdgeKindRequest::clear_edge_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edge_label_.ClearToEmpty();
}
inline const std::string& RemoveEdgeKindRequest::edge_label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.RemoveEdgeKindRequest.edge_label)
  return _internal_edge_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveEdgeKindRequest::set_edge_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edge_label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.RemoveEdgeKindRequest.edge_label)
}
inline std::string* RemoveEdgeKindRequest::mutable_edge_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_edge_label();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.RemoveEdgeKindRequest.edge_label)
  return _s;
}
inline const std::string& RemoveEdgeKindRequest::_internal_edge_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.edge_label_.Get();
}
inline void RemoveEdgeKindRequest::_internal_set_edge_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edge_label_.Set(value, GetArena());
}
inline std::string* RemoveEdgeKindRequest::_internal_mutable_edge_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.edge_label_.Mutable( GetArena());
}
inline std::string* RemoveEdgeKindRequest::release_edge_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.RemoveEdgeKindRequest.edge_label)
  return _impl_.edge_label_.Release();
}
inline void RemoveEdgeKindRequest::set_allocated_edge_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edge_label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.edge_label_.IsDefault()) {
          _impl_.edge_label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.RemoveEdgeKindRequest.edge_label)
}

// string src_vertex_label = 2;
inline void RemoveEdgeKindRequest::clear_src_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_vertex_label_.ClearToEmpty();
}
inline const std::string& RemoveEdgeKindRequest::src_vertex_label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.RemoveEdgeKindRequest.src_vertex_label)
  return _internal_src_vertex_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveEdgeKindRequest::set_src_vertex_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_vertex_label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.RemoveEdgeKindRequest.src_vertex_label)
}
inline std::string* RemoveEdgeKindRequest::mutable_src_vertex_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_src_vertex_label();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.RemoveEdgeKindRequest.src_vertex_label)
  return _s;
}
inline const std::string& RemoveEdgeKindRequest::_internal_src_vertex_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.src_vertex_label_.Get();
}
inline void RemoveEdgeKindRequest::_internal_set_src_vertex_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_vertex_label_.Set(value, GetArena());
}
inline std::string* RemoveEdgeKindRequest::_internal_mutable_src_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.src_vertex_label_.Mutable( GetArena());
}
inline std::string* RemoveEdgeKindRequest::release_src_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.RemoveEdgeKindRequest.src_vertex_label)
  return _impl_.src_vertex_label_.Release();
}
inline void RemoveEdgeKindRequest::set_allocated_src_vertex_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_vertex_label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.src_vertex_label_.IsDefault()) {
          _impl_.src_vertex_label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.RemoveEdgeKindRequest.src_vertex_label)
}

// string dst_vertex_label = 3;
inline void RemoveEdgeKindRequest::clear_dst_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_vertex_label_.ClearToEmpty();
}
inline const std::string& RemoveEdgeKindRequest::dst_vertex_label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.RemoveEdgeKindRequest.dst_vertex_label)
  return _internal_dst_vertex_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveEdgeKindRequest::set_dst_vertex_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_vertex_label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.RemoveEdgeKindRequest.dst_vertex_label)
}
inline std::string* RemoveEdgeKindRequest::mutable_dst_vertex_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dst_vertex_label();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.RemoveEdgeKindRequest.dst_vertex_label)
  return _s;
}
inline const std::string& RemoveEdgeKindRequest::_internal_dst_vertex_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dst_vertex_label_.Get();
}
inline void RemoveEdgeKindRequest::_internal_set_dst_vertex_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_vertex_label_.Set(value, GetArena());
}
inline std::string* RemoveEdgeKindRequest::_internal_mutable_dst_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dst_vertex_label_.Mutable( GetArena());
}
inline std::string* RemoveEdgeKindRequest::release_dst_vertex_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.RemoveEdgeKindRequest.dst_vertex_label)
  return _impl_.dst_vertex_label_.Release();
}
inline void RemoveEdgeKindRequest::set_allocated_dst_vertex_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_vertex_label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dst_vertex_label_.IsDefault()) {
          _impl_.dst_vertex_label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.RemoveEdgeKindRequest.dst_vertex_label)
}

// -------------------------------------------------------------------

// DropVertexTypeRequest

// string label = 1;
inline void DropVertexTypeRequest::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& DropVertexTypeRequest::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.DropVertexTypeRequest.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DropVertexTypeRequest::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.DropVertexTypeRequest.label)
}
inline std::string* DropVertexTypeRequest::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.DropVertexTypeRequest.label)
  return _s;
}
inline const std::string& DropVertexTypeRequest::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void DropVertexTypeRequest::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* DropVertexTypeRequest::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* DropVertexTypeRequest::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.DropVertexTypeRequest.label)
  return _impl_.label_.Release();
}
inline void DropVertexTypeRequest::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.DropVertexTypeRequest.label)
}

// -------------------------------------------------------------------

// DropEdgeTypeRequest

// string label = 1;
inline void DropEdgeTypeRequest::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& DropEdgeTypeRequest::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.DropEdgeTypeRequest.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DropEdgeTypeRequest::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.DropEdgeTypeRequest.label)
}
inline std::string* DropEdgeTypeRequest::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.DropEdgeTypeRequest.label)
  return _s;
}
inline const std::string& DropEdgeTypeRequest::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void DropEdgeTypeRequest::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* DropEdgeTypeRequest::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* DropEdgeTypeRequest::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.DropEdgeTypeRequest.label)
  return _impl_.label_.Release();
}
inline void DropEdgeTypeRequest::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.DropEdgeTypeRequest.label)
}

// -------------------------------------------------------------------

// GetGraphDefRequest

// string key = 1;
inline void GetGraphDefRequest::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& GetGraphDefRequest::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.GetGraphDefRequest.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetGraphDefRequest::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.GetGraphDefRequest.key)
}
inline std::string* GetGraphDefRequest::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.GetGraphDefRequest.key)
  return _s;
}
inline const std::string& GetGraphDefRequest::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void GetGraphDefRequest::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* GetGraphDefRequest::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* GetGraphDefRequest::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.GetGraphDefRequest.key)
  return _impl_.key_.Release();
}
inline void GetGraphDefRequest::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.GetGraphDefRequest.key)
}

// -------------------------------------------------------------------

// GetGraphDefResponse

// .gs.rpc.graph.GraphDefPb graph_def = 1;
inline bool GetGraphDefResponse::has_graph_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.graph_def_ != nullptr);
  return value;
}
inline const ::gs::rpc::graph::GraphDefPb& GetGraphDefResponse::_internal_graph_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::graph::GraphDefPb* p = _impl_.graph_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::graph::GraphDefPb&>(::gs::rpc::graph::_GraphDefPb_default_instance_);
}
inline const ::gs::rpc::graph::GraphDefPb& GetGraphDefResponse::graph_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.GetGraphDefResponse.graph_def)
  return _internal_graph_def();
}
inline void GetGraphDefResponse::unsafe_arena_set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.graph_def_);
  }
  _impl_.graph_def_ = reinterpret_cast<::gs::rpc::graph::GraphDefPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.GetGraphDefResponse.graph_def)
}
inline ::gs::rpc::graph::GraphDefPb* GetGraphDefResponse::release_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::GraphDefPb* released = _impl_.graph_def_;
  _impl_.graph_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::graph::GraphDefPb* GetGraphDefResponse::unsafe_arena_release_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.GetGraphDefResponse.graph_def)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::graph::GraphDefPb* temp = _impl_.graph_def_;
  _impl_.graph_def_ = nullptr;
  return temp;
}
inline ::gs::rpc::graph::GraphDefPb* GetGraphDefResponse::_internal_mutable_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.graph_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::graph::GraphDefPb>(GetArena());
    _impl_.graph_def_ = reinterpret_cast<::gs::rpc::graph::GraphDefPb*>(p);
  }
  return _impl_.graph_def_;
}
inline ::gs::rpc::graph::GraphDefPb* GetGraphDefResponse::mutable_graph_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::graph::GraphDefPb* _msg = _internal_mutable_graph_def();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.GetGraphDefResponse.graph_def)
  return _msg;
}
inline void GetGraphDefResponse::set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.graph_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.graph_def_ = reinterpret_cast<::gs::rpc::graph::GraphDefPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.GetGraphDefResponse.graph_def)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace groot
}  // namespace rpc
}  // namespace gs


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ddl_5fservice_2eproto_2epb_2eh
