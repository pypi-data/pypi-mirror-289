// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: write_service.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_write_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_write_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "request_option.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_write_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_write_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_write_5fservice_2eproto;
namespace gs {
namespace rpc {
namespace groot {
class BatchWriteRequest;
struct BatchWriteRequestDefaultTypeInternal;
extern BatchWriteRequestDefaultTypeInternal _BatchWriteRequest_default_instance_;
class BatchWriteResponse;
struct BatchWriteResponseDefaultTypeInternal;
extern BatchWriteResponseDefaultTypeInternal _BatchWriteResponse_default_instance_;
class DataRecordPb;
struct DataRecordPbDefaultTypeInternal;
extern DataRecordPbDefaultTypeInternal _DataRecordPb_default_instance_;
class DataRecordPb_PropertiesEntry_DoNotUse;
struct DataRecordPb_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern DataRecordPb_PropertiesEntry_DoNotUseDefaultTypeInternal _DataRecordPb_PropertiesEntry_DoNotUse_default_instance_;
class EdgeRecordKeyPb;
struct EdgeRecordKeyPbDefaultTypeInternal;
extern EdgeRecordKeyPbDefaultTypeInternal _EdgeRecordKeyPb_default_instance_;
class GetClientIdRequest;
struct GetClientIdRequestDefaultTypeInternal;
extern GetClientIdRequestDefaultTypeInternal _GetClientIdRequest_default_instance_;
class GetClientIdResponse;
struct GetClientIdResponseDefaultTypeInternal;
extern GetClientIdResponseDefaultTypeInternal _GetClientIdResponse_default_instance_;
class RemoteFlushRequest;
struct RemoteFlushRequestDefaultTypeInternal;
extern RemoteFlushRequestDefaultTypeInternal _RemoteFlushRequest_default_instance_;
class RemoteFlushResponse;
struct RemoteFlushResponseDefaultTypeInternal;
extern RemoteFlushResponseDefaultTypeInternal _RemoteFlushResponse_default_instance_;
class ReplayRecordsRequest;
struct ReplayRecordsRequestDefaultTypeInternal;
extern ReplayRecordsRequestDefaultTypeInternal _ReplayRecordsRequest_default_instance_;
class ReplayRecordsResponse;
struct ReplayRecordsResponseDefaultTypeInternal;
extern ReplayRecordsResponseDefaultTypeInternal _ReplayRecordsResponse_default_instance_;
class VertexRecordKeyPb;
struct VertexRecordKeyPbDefaultTypeInternal;
extern VertexRecordKeyPbDefaultTypeInternal _VertexRecordKeyPb_default_instance_;
class VertexRecordKeyPb_PkPropertiesEntry_DoNotUse;
struct VertexRecordKeyPb_PkPropertiesEntry_DoNotUseDefaultTypeInternal;
extern VertexRecordKeyPb_PkPropertiesEntry_DoNotUseDefaultTypeInternal _VertexRecordKeyPb_PkPropertiesEntry_DoNotUse_default_instance_;
class WriteRequestPb;
struct WriteRequestPbDefaultTypeInternal;
extern WriteRequestPbDefaultTypeInternal _WriteRequestPb_default_instance_;
}  // namespace groot
}  // namespace rpc
}  // namespace gs
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace gs {
namespace rpc {
namespace groot {
enum WriteTypePb : int {
  UNKNOWN = 0,
  INSERT = 1,
  UPDATE = 2,
  DELETE = 3,
  CLEAR_PROPERTY = 4,
  WriteTypePb_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WriteTypePb_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WriteTypePb_IsValid(int value);
extern const uint32_t WriteTypePb_internal_data_[];
constexpr WriteTypePb WriteTypePb_MIN = static_cast<WriteTypePb>(0);
constexpr WriteTypePb WriteTypePb_MAX = static_cast<WriteTypePb>(4);
constexpr int WriteTypePb_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
WriteTypePb_descriptor();
template <typename T>
const std::string& WriteTypePb_Name(T value) {
  static_assert(std::is_same<T, WriteTypePb>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to WriteTypePb_Name().");
  return WriteTypePb_Name(static_cast<WriteTypePb>(value));
}
template <>
inline const std::string& WriteTypePb_Name(WriteTypePb value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WriteTypePb_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool WriteTypePb_Parse(absl::string_view name, WriteTypePb* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WriteTypePb>(
      WriteTypePb_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class VertexRecordKeyPb_PkPropertiesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          VertexRecordKeyPb_PkPropertiesEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      VertexRecordKeyPb_PkPropertiesEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  VertexRecordKeyPb_PkPropertiesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VertexRecordKeyPb_PkPropertiesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit VertexRecordKeyPb_PkPropertiesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const VertexRecordKeyPb_PkPropertiesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const VertexRecordKeyPb_PkPropertiesEntry_DoNotUse*>(
        &_VertexRecordKeyPb_PkPropertiesEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ReplayRecordsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.ReplayRecordsResponse) */ {
 public:
  inline ReplayRecordsResponse() : ReplayRecordsResponse(nullptr) {}
  ~ReplayRecordsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplayRecordsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReplayRecordsResponse(const ReplayRecordsResponse& from) : ReplayRecordsResponse(nullptr, from) {}
  inline ReplayRecordsResponse(ReplayRecordsResponse&& from) noexcept
      : ReplayRecordsResponse(nullptr, std::move(from)) {}
  inline ReplayRecordsResponse& operator=(const ReplayRecordsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplayRecordsResponse& operator=(ReplayRecordsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplayRecordsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplayRecordsResponse* internal_default_instance() {
    return reinterpret_cast<const ReplayRecordsResponse*>(
        &_ReplayRecordsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ReplayRecordsResponse& a, ReplayRecordsResponse& b) { a.Swap(&b); }
  inline void Swap(ReplayRecordsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplayRecordsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplayRecordsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ReplayRecordsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplayRecordsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReplayRecordsResponse& from) { ReplayRecordsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReplayRecordsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.ReplayRecordsResponse"; }

 protected:
  explicit ReplayRecordsResponse(::google::protobuf::Arena* arena);
  ReplayRecordsResponse(::google::protobuf::Arena* arena, const ReplayRecordsResponse& from);
  ReplayRecordsResponse(::google::protobuf::Arena* arena, ReplayRecordsResponse&& from) noexcept
      : ReplayRecordsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSnapshotIdFieldNumber = 1,
  };
  // repeated int64 snapshot_id = 1;
  int snapshot_id_size() const;
  private:
  int _internal_snapshot_id_size() const;

  public:
  void clear_snapshot_id() ;
  ::int64_t snapshot_id(int index) const;
  void set_snapshot_id(int index, ::int64_t value);
  void add_snapshot_id(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& snapshot_id() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_snapshot_id();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_snapshot_id() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_snapshot_id();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.ReplayRecordsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ReplayRecordsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReplayRecordsResponse& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> snapshot_id_;
    mutable ::google::protobuf::internal::CachedSize _snapshot_id_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ReplayRecordsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.ReplayRecordsRequest) */ {
 public:
  inline ReplayRecordsRequest() : ReplayRecordsRequest(nullptr) {}
  ~ReplayRecordsRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplayRecordsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReplayRecordsRequest(const ReplayRecordsRequest& from) : ReplayRecordsRequest(nullptr, from) {}
  inline ReplayRecordsRequest(ReplayRecordsRequest&& from) noexcept
      : ReplayRecordsRequest(nullptr, std::move(from)) {}
  inline ReplayRecordsRequest& operator=(const ReplayRecordsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplayRecordsRequest& operator=(ReplayRecordsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplayRecordsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplayRecordsRequest* internal_default_instance() {
    return reinterpret_cast<const ReplayRecordsRequest*>(
        &_ReplayRecordsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ReplayRecordsRequest& a, ReplayRecordsRequest& b) { a.Swap(&b); }
  inline void Swap(ReplayRecordsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplayRecordsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplayRecordsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ReplayRecordsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplayRecordsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReplayRecordsRequest& from) { ReplayRecordsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReplayRecordsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.ReplayRecordsRequest"; }

 protected:
  explicit ReplayRecordsRequest(::google::protobuf::Arena* arena);
  ReplayRecordsRequest(::google::protobuf::Arena* arena, const ReplayRecordsRequest& from);
  ReplayRecordsRequest(::google::protobuf::Arena* arena, ReplayRecordsRequest&& from) noexcept
      : ReplayRecordsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOffsetFieldNumber = 1,
    kTimestampFieldNumber = 2,
  };
  // int64 offset = 1;
  void clear_offset() ;
  ::int64_t offset() const;
  void set_offset(::int64_t value);

  private:
  ::int64_t _internal_offset() const;
  void _internal_set_offset(::int64_t value);

  public:
  // int64 timestamp = 2;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.ReplayRecordsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ReplayRecordsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReplayRecordsRequest& from_msg);
    ::int64_t offset_;
    ::int64_t timestamp_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RemoteFlushResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.RemoteFlushResponse) */ {
 public:
  inline RemoteFlushResponse() : RemoteFlushResponse(nullptr) {}
  ~RemoteFlushResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoteFlushResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoteFlushResponse(const RemoteFlushResponse& from) : RemoteFlushResponse(nullptr, from) {}
  inline RemoteFlushResponse(RemoteFlushResponse&& from) noexcept
      : RemoteFlushResponse(nullptr, std::move(from)) {}
  inline RemoteFlushResponse& operator=(const RemoteFlushResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoteFlushResponse& operator=(RemoteFlushResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoteFlushResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoteFlushResponse* internal_default_instance() {
    return reinterpret_cast<const RemoteFlushResponse*>(
        &_RemoteFlushResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(RemoteFlushResponse& a, RemoteFlushResponse& b) { a.Swap(&b); }
  inline void Swap(RemoteFlushResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoteFlushResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoteFlushResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RemoteFlushResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoteFlushResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoteFlushResponse& from) { RemoteFlushResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoteFlushResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.RemoteFlushResponse"; }

 protected:
  explicit RemoteFlushResponse(::google::protobuf::Arena* arena);
  RemoteFlushResponse(::google::protobuf::Arena* arena, const RemoteFlushResponse& from);
  RemoteFlushResponse(::google::protobuf::Arena* arena, RemoteFlushResponse&& from) noexcept
      : RemoteFlushResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.RemoteFlushResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RemoteFlushResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoteFlushResponse& from_msg);
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RemoteFlushRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.RemoteFlushRequest) */ {
 public:
  inline RemoteFlushRequest() : RemoteFlushRequest(nullptr) {}
  ~RemoteFlushRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoteFlushRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoteFlushRequest(const RemoteFlushRequest& from) : RemoteFlushRequest(nullptr, from) {}
  inline RemoteFlushRequest(RemoteFlushRequest&& from) noexcept
      : RemoteFlushRequest(nullptr, std::move(from)) {}
  inline RemoteFlushRequest& operator=(const RemoteFlushRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoteFlushRequest& operator=(RemoteFlushRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoteFlushRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoteFlushRequest* internal_default_instance() {
    return reinterpret_cast<const RemoteFlushRequest*>(
        &_RemoteFlushRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(RemoteFlushRequest& a, RemoteFlushRequest& b) { a.Swap(&b); }
  inline void Swap(RemoteFlushRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoteFlushRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoteFlushRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RemoteFlushRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoteFlushRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoteFlushRequest& from) { RemoteFlushRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoteFlushRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.RemoteFlushRequest"; }

 protected:
  explicit RemoteFlushRequest(::google::protobuf::Arena* arena);
  RemoteFlushRequest(::google::protobuf::Arena* arena, const RemoteFlushRequest& from);
  RemoteFlushRequest(::google::protobuf::Arena* arena, RemoteFlushRequest&& from) noexcept
      : RemoteFlushRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSnapshotIdFieldNumber = 1,
    kWaitTimeMsFieldNumber = 2,
  };
  // int64 snapshot_id = 1;
  void clear_snapshot_id() ;
  ::int64_t snapshot_id() const;
  void set_snapshot_id(::int64_t value);

  private:
  ::int64_t _internal_snapshot_id() const;
  void _internal_set_snapshot_id(::int64_t value);

  public:
  // int64 wait_time_ms = 2;
  void clear_wait_time_ms() ;
  ::int64_t wait_time_ms() const;
  void set_wait_time_ms(::int64_t value);

  private:
  ::int64_t _internal_wait_time_ms() const;
  void _internal_set_wait_time_ms(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.RemoteFlushRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RemoteFlushRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoteFlushRequest& from_msg);
    ::int64_t snapshot_id_;
    ::int64_t wait_time_ms_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetClientIdResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.GetClientIdResponse) */ {
 public:
  inline GetClientIdResponse() : GetClientIdResponse(nullptr) {}
  ~GetClientIdResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetClientIdResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetClientIdResponse(const GetClientIdResponse& from) : GetClientIdResponse(nullptr, from) {}
  inline GetClientIdResponse(GetClientIdResponse&& from) noexcept
      : GetClientIdResponse(nullptr, std::move(from)) {}
  inline GetClientIdResponse& operator=(const GetClientIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetClientIdResponse& operator=(GetClientIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetClientIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetClientIdResponse* internal_default_instance() {
    return reinterpret_cast<const GetClientIdResponse*>(
        &_GetClientIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetClientIdResponse& a, GetClientIdResponse& b) { a.Swap(&b); }
  inline void Swap(GetClientIdResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetClientIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetClientIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetClientIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetClientIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetClientIdResponse& from) { GetClientIdResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetClientIdResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.GetClientIdResponse"; }

 protected:
  explicit GetClientIdResponse(::google::protobuf::Arena* arena);
  GetClientIdResponse(::google::protobuf::Arena* arena, const GetClientIdResponse& from);
  GetClientIdResponse(::google::protobuf::Arena* arena, GetClientIdResponse&& from) noexcept
      : GetClientIdResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClientIdFieldNumber = 1,
  };
  // string client_id = 1;
  void clear_client_id() ;
  const std::string& client_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* value);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.GetClientIdResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetClientIdResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetClientIdResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr client_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetClientIdRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.GetClientIdRequest) */ {
 public:
  inline GetClientIdRequest() : GetClientIdRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetClientIdRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetClientIdRequest(const GetClientIdRequest& from) : GetClientIdRequest(nullptr, from) {}
  inline GetClientIdRequest(GetClientIdRequest&& from) noexcept
      : GetClientIdRequest(nullptr, std::move(from)) {}
  inline GetClientIdRequest& operator=(const GetClientIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetClientIdRequest& operator=(GetClientIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetClientIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetClientIdRequest* internal_default_instance() {
    return reinterpret_cast<const GetClientIdRequest*>(
        &_GetClientIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetClientIdRequest& a, GetClientIdRequest& b) { a.Swap(&b); }
  inline void Swap(GetClientIdRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetClientIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetClientIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetClientIdRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetClientIdRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetClientIdRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.GetClientIdRequest"; }

 protected:
  explicit GetClientIdRequest(::google::protobuf::Arena* arena);
  GetClientIdRequest(::google::protobuf::Arena* arena, const GetClientIdRequest& from);
  GetClientIdRequest(::google::protobuf::Arena* arena, GetClientIdRequest&& from) noexcept
      : GetClientIdRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.GetClientIdRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetClientIdRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetClientIdRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class DataRecordPb_PropertiesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          DataRecordPb_PropertiesEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      DataRecordPb_PropertiesEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  DataRecordPb_PropertiesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DataRecordPb_PropertiesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit DataRecordPb_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const DataRecordPb_PropertiesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const DataRecordPb_PropertiesEntry_DoNotUse*>(
        &_DataRecordPb_PropertiesEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class BatchWriteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.BatchWriteResponse) */ {
 public:
  inline BatchWriteResponse() : BatchWriteResponse(nullptr) {}
  ~BatchWriteResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BatchWriteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline BatchWriteResponse(const BatchWriteResponse& from) : BatchWriteResponse(nullptr, from) {}
  inline BatchWriteResponse(BatchWriteResponse&& from) noexcept
      : BatchWriteResponse(nullptr, std::move(from)) {}
  inline BatchWriteResponse& operator=(const BatchWriteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchWriteResponse& operator=(BatchWriteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BatchWriteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BatchWriteResponse* internal_default_instance() {
    return reinterpret_cast<const BatchWriteResponse*>(
        &_BatchWriteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(BatchWriteResponse& a, BatchWriteResponse& b) { a.Swap(&b); }
  inline void Swap(BatchWriteResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatchWriteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BatchWriteResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BatchWriteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BatchWriteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BatchWriteResponse& from) { BatchWriteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BatchWriteResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.BatchWriteResponse"; }

 protected:
  explicit BatchWriteResponse(::google::protobuf::Arena* arena);
  BatchWriteResponse(::google::protobuf::Arena* arena, const BatchWriteResponse& from);
  BatchWriteResponse(::google::protobuf::Arena* arena, BatchWriteResponse&& from) noexcept
      : BatchWriteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSnapshotIdFieldNumber = 1,
  };
  // int64 snapshot_id = 1;
  void clear_snapshot_id() ;
  ::int64_t snapshot_id() const;
  void set_snapshot_id(::int64_t value);

  private:
  ::int64_t _internal_snapshot_id() const;
  void _internal_set_snapshot_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.BatchWriteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BatchWriteResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BatchWriteResponse& from_msg);
    ::int64_t snapshot_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class VertexRecordKeyPb final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.VertexRecordKeyPb) */ {
 public:
  inline VertexRecordKeyPb() : VertexRecordKeyPb(nullptr) {}
  ~VertexRecordKeyPb() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VertexRecordKeyPb(
      ::google::protobuf::internal::ConstantInitialized);

  inline VertexRecordKeyPb(const VertexRecordKeyPb& from) : VertexRecordKeyPb(nullptr, from) {}
  inline VertexRecordKeyPb(VertexRecordKeyPb&& from) noexcept
      : VertexRecordKeyPb(nullptr, std::move(from)) {}
  inline VertexRecordKeyPb& operator=(const VertexRecordKeyPb& from) {
    CopyFrom(from);
    return *this;
  }
  inline VertexRecordKeyPb& operator=(VertexRecordKeyPb&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VertexRecordKeyPb& default_instance() {
    return *internal_default_instance();
  }
  static inline const VertexRecordKeyPb* internal_default_instance() {
    return reinterpret_cast<const VertexRecordKeyPb*>(
        &_VertexRecordKeyPb_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(VertexRecordKeyPb& a, VertexRecordKeyPb& b) { a.Swap(&b); }
  inline void Swap(VertexRecordKeyPb* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VertexRecordKeyPb* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VertexRecordKeyPb* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<VertexRecordKeyPb>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VertexRecordKeyPb& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VertexRecordKeyPb& from) { VertexRecordKeyPb::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VertexRecordKeyPb* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.VertexRecordKeyPb"; }

 protected:
  explicit VertexRecordKeyPb(::google::protobuf::Arena* arena);
  VertexRecordKeyPb(::google::protobuf::Arena* arena, const VertexRecordKeyPb& from);
  VertexRecordKeyPb(::google::protobuf::Arena* arena, VertexRecordKeyPb&& from) noexcept
      : VertexRecordKeyPb(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPkPropertiesFieldNumber = 2,
    kLabelFieldNumber = 1,
  };
  // map<string, string> pk_properties = 2;
  int pk_properties_size() const;
  private:
  int _internal_pk_properties_size() const;

  public:
  void clear_pk_properties() ;
  const ::google::protobuf::Map<std::string, std::string>& pk_properties() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_pk_properties();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_pk_properties() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_pk_properties();

  public:
  // string label = 1;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.VertexRecordKeyPb)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_VertexRecordKeyPb_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VertexRecordKeyPb& from_msg);
    ::google::protobuf::internal::MapField<VertexRecordKeyPb_PkPropertiesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        pk_properties_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class EdgeRecordKeyPb final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.EdgeRecordKeyPb) */ {
 public:
  inline EdgeRecordKeyPb() : EdgeRecordKeyPb(nullptr) {}
  ~EdgeRecordKeyPb() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdgeRecordKeyPb(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdgeRecordKeyPb(const EdgeRecordKeyPb& from) : EdgeRecordKeyPb(nullptr, from) {}
  inline EdgeRecordKeyPb(EdgeRecordKeyPb&& from) noexcept
      : EdgeRecordKeyPb(nullptr, std::move(from)) {}
  inline EdgeRecordKeyPb& operator=(const EdgeRecordKeyPb& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdgeRecordKeyPb& operator=(EdgeRecordKeyPb&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdgeRecordKeyPb& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdgeRecordKeyPb* internal_default_instance() {
    return reinterpret_cast<const EdgeRecordKeyPb*>(
        &_EdgeRecordKeyPb_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(EdgeRecordKeyPb& a, EdgeRecordKeyPb& b) { a.Swap(&b); }
  inline void Swap(EdgeRecordKeyPb* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdgeRecordKeyPb* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdgeRecordKeyPb* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<EdgeRecordKeyPb>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdgeRecordKeyPb& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdgeRecordKeyPb& from) { EdgeRecordKeyPb::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EdgeRecordKeyPb* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.EdgeRecordKeyPb"; }

 protected:
  explicit EdgeRecordKeyPb(::google::protobuf::Arena* arena);
  EdgeRecordKeyPb(::google::protobuf::Arena* arena, const EdgeRecordKeyPb& from);
  EdgeRecordKeyPb(::google::protobuf::Arena* arena, EdgeRecordKeyPb&& from) noexcept
      : EdgeRecordKeyPb(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLabelFieldNumber = 1,
    kSrcVertexKeyFieldNumber = 2,
    kDstVertexKeyFieldNumber = 3,
    kInnerIdFieldNumber = 4,
  };
  // string label = 1;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // .gs.rpc.groot.VertexRecordKeyPb src_vertex_key = 2;
  bool has_src_vertex_key() const;
  void clear_src_vertex_key() ;
  const ::gs::rpc::groot::VertexRecordKeyPb& src_vertex_key() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::VertexRecordKeyPb* release_src_vertex_key();
  ::gs::rpc::groot::VertexRecordKeyPb* mutable_src_vertex_key();
  void set_allocated_src_vertex_key(::gs::rpc::groot::VertexRecordKeyPb* value);
  void unsafe_arena_set_allocated_src_vertex_key(::gs::rpc::groot::VertexRecordKeyPb* value);
  ::gs::rpc::groot::VertexRecordKeyPb* unsafe_arena_release_src_vertex_key();

  private:
  const ::gs::rpc::groot::VertexRecordKeyPb& _internal_src_vertex_key() const;
  ::gs::rpc::groot::VertexRecordKeyPb* _internal_mutable_src_vertex_key();

  public:
  // .gs.rpc.groot.VertexRecordKeyPb dst_vertex_key = 3;
  bool has_dst_vertex_key() const;
  void clear_dst_vertex_key() ;
  const ::gs::rpc::groot::VertexRecordKeyPb& dst_vertex_key() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::VertexRecordKeyPb* release_dst_vertex_key();
  ::gs::rpc::groot::VertexRecordKeyPb* mutable_dst_vertex_key();
  void set_allocated_dst_vertex_key(::gs::rpc::groot::VertexRecordKeyPb* value);
  void unsafe_arena_set_allocated_dst_vertex_key(::gs::rpc::groot::VertexRecordKeyPb* value);
  ::gs::rpc::groot::VertexRecordKeyPb* unsafe_arena_release_dst_vertex_key();

  private:
  const ::gs::rpc::groot::VertexRecordKeyPb& _internal_dst_vertex_key() const;
  ::gs::rpc::groot::VertexRecordKeyPb* _internal_mutable_dst_vertex_key();

  public:
  // int64 inner_id = 4;
  void clear_inner_id() ;
  ::int64_t inner_id() const;
  void set_inner_id(::int64_t value);

  private:
  ::int64_t _internal_inner_id() const;
  void _internal_set_inner_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.EdgeRecordKeyPb)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EdgeRecordKeyPb_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdgeRecordKeyPb& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::gs::rpc::groot::VertexRecordKeyPb* src_vertex_key_;
    ::gs::rpc::groot::VertexRecordKeyPb* dst_vertex_key_;
    ::int64_t inner_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class DataRecordPb final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.DataRecordPb) */ {
 public:
  inline DataRecordPb() : DataRecordPb(nullptr) {}
  ~DataRecordPb() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DataRecordPb(
      ::google::protobuf::internal::ConstantInitialized);

  inline DataRecordPb(const DataRecordPb& from) : DataRecordPb(nullptr, from) {}
  inline DataRecordPb(DataRecordPb&& from) noexcept
      : DataRecordPb(nullptr, std::move(from)) {}
  inline DataRecordPb& operator=(const DataRecordPb& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataRecordPb& operator=(DataRecordPb&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataRecordPb& default_instance() {
    return *internal_default_instance();
  }
  enum RecordKeyCase {
    kVertexRecordKey = 1,
    kEdgeRecordKey = 2,
    RECORD_KEY_NOT_SET = 0,
  };
  static inline const DataRecordPb* internal_default_instance() {
    return reinterpret_cast<const DataRecordPb*>(
        &_DataRecordPb_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(DataRecordPb& a, DataRecordPb& b) { a.Swap(&b); }
  inline void Swap(DataRecordPb* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataRecordPb* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataRecordPb* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DataRecordPb>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DataRecordPb& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DataRecordPb& from) { DataRecordPb::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DataRecordPb* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.DataRecordPb"; }

 protected:
  explicit DataRecordPb(::google::protobuf::Arena* arena);
  DataRecordPb(::google::protobuf::Arena* arena, const DataRecordPb& from);
  DataRecordPb(::google::protobuf::Arena* arena, DataRecordPb&& from) noexcept
      : DataRecordPb(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPropertiesFieldNumber = 3,
    kVertexRecordKeyFieldNumber = 1,
    kEdgeRecordKeyFieldNumber = 2,
  };
  // map<string, string> properties = 3;
  int properties_size() const;
  private:
  int _internal_properties_size() const;

  public:
  void clear_properties() ;
  const ::google::protobuf::Map<std::string, std::string>& properties() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_properties();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_properties() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_properties();

  public:
  // .gs.rpc.groot.VertexRecordKeyPb vertex_record_key = 1;
  bool has_vertex_record_key() const;
  private:
  bool _internal_has_vertex_record_key() const;

  public:
  void clear_vertex_record_key() ;
  const ::gs::rpc::groot::VertexRecordKeyPb& vertex_record_key() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::VertexRecordKeyPb* release_vertex_record_key();
  ::gs::rpc::groot::VertexRecordKeyPb* mutable_vertex_record_key();
  void set_allocated_vertex_record_key(::gs::rpc::groot::VertexRecordKeyPb* value);
  void unsafe_arena_set_allocated_vertex_record_key(::gs::rpc::groot::VertexRecordKeyPb* value);
  ::gs::rpc::groot::VertexRecordKeyPb* unsafe_arena_release_vertex_record_key();

  private:
  const ::gs::rpc::groot::VertexRecordKeyPb& _internal_vertex_record_key() const;
  ::gs::rpc::groot::VertexRecordKeyPb* _internal_mutable_vertex_record_key();

  public:
  // .gs.rpc.groot.EdgeRecordKeyPb edge_record_key = 2;
  bool has_edge_record_key() const;
  private:
  bool _internal_has_edge_record_key() const;

  public:
  void clear_edge_record_key() ;
  const ::gs::rpc::groot::EdgeRecordKeyPb& edge_record_key() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::EdgeRecordKeyPb* release_edge_record_key();
  ::gs::rpc::groot::EdgeRecordKeyPb* mutable_edge_record_key();
  void set_allocated_edge_record_key(::gs::rpc::groot::EdgeRecordKeyPb* value);
  void unsafe_arena_set_allocated_edge_record_key(::gs::rpc::groot::EdgeRecordKeyPb* value);
  ::gs::rpc::groot::EdgeRecordKeyPb* unsafe_arena_release_edge_record_key();

  private:
  const ::gs::rpc::groot::EdgeRecordKeyPb& _internal_edge_record_key() const;
  ::gs::rpc::groot::EdgeRecordKeyPb* _internal_mutable_edge_record_key();

  public:
  void clear_record_key();
  RecordKeyCase record_key_case() const;
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.DataRecordPb)
 private:
  class _Internal;
  void set_has_vertex_record_key();
  void set_has_edge_record_key();
  inline bool has_record_key() const;
  inline void clear_has_record_key();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DataRecordPb_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DataRecordPb& from_msg);
    ::google::protobuf::internal::MapField<DataRecordPb_PropertiesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        properties_;
    union RecordKeyUnion {
      constexpr RecordKeyUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::gs::rpc::groot::VertexRecordKeyPb* vertex_record_key_;
      ::gs::rpc::groot::EdgeRecordKeyPb* edge_record_key_;
    } record_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class WriteRequestPb final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.WriteRequestPb) */ {
 public:
  inline WriteRequestPb() : WriteRequestPb(nullptr) {}
  ~WriteRequestPb() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WriteRequestPb(
      ::google::protobuf::internal::ConstantInitialized);

  inline WriteRequestPb(const WriteRequestPb& from) : WriteRequestPb(nullptr, from) {}
  inline WriteRequestPb(WriteRequestPb&& from) noexcept
      : WriteRequestPb(nullptr, std::move(from)) {}
  inline WriteRequestPb& operator=(const WriteRequestPb& from) {
    CopyFrom(from);
    return *this;
  }
  inline WriteRequestPb& operator=(WriteRequestPb&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WriteRequestPb& default_instance() {
    return *internal_default_instance();
  }
  static inline const WriteRequestPb* internal_default_instance() {
    return reinterpret_cast<const WriteRequestPb*>(
        &_WriteRequestPb_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(WriteRequestPb& a, WriteRequestPb& b) { a.Swap(&b); }
  inline void Swap(WriteRequestPb* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WriteRequestPb* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WriteRequestPb* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<WriteRequestPb>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WriteRequestPb& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WriteRequestPb& from) { WriteRequestPb::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WriteRequestPb* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.WriteRequestPb"; }

 protected:
  explicit WriteRequestPb(::google::protobuf::Arena* arena);
  WriteRequestPb(::google::protobuf::Arena* arena, const WriteRequestPb& from);
  WriteRequestPb(::google::protobuf::Arena* arena, WriteRequestPb&& from) noexcept
      : WriteRequestPb(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataRecordFieldNumber = 2,
    kWriteTypeFieldNumber = 1,
  };
  // .gs.rpc.groot.DataRecordPb data_record = 2;
  bool has_data_record() const;
  void clear_data_record() ;
  const ::gs::rpc::groot::DataRecordPb& data_record() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::DataRecordPb* release_data_record();
  ::gs::rpc::groot::DataRecordPb* mutable_data_record();
  void set_allocated_data_record(::gs::rpc::groot::DataRecordPb* value);
  void unsafe_arena_set_allocated_data_record(::gs::rpc::groot::DataRecordPb* value);
  ::gs::rpc::groot::DataRecordPb* unsafe_arena_release_data_record();

  private:
  const ::gs::rpc::groot::DataRecordPb& _internal_data_record() const;
  ::gs::rpc::groot::DataRecordPb* _internal_mutable_data_record();

  public:
  // .gs.rpc.groot.WriteTypePb write_type = 1;
  void clear_write_type() ;
  ::gs::rpc::groot::WriteTypePb write_type() const;
  void set_write_type(::gs::rpc::groot::WriteTypePb value);

  private:
  ::gs::rpc::groot::WriteTypePb _internal_write_type() const;
  void _internal_set_write_type(::gs::rpc::groot::WriteTypePb value);

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.WriteRequestPb)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_WriteRequestPb_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WriteRequestPb& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::gs::rpc::groot::DataRecordPb* data_record_;
    int write_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_write_5fservice_2eproto;
};
// -------------------------------------------------------------------

class BatchWriteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.groot.BatchWriteRequest) */ {
 public:
  inline BatchWriteRequest() : BatchWriteRequest(nullptr) {}
  ~BatchWriteRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BatchWriteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BatchWriteRequest(const BatchWriteRequest& from) : BatchWriteRequest(nullptr, from) {}
  inline BatchWriteRequest(BatchWriteRequest&& from) noexcept
      : BatchWriteRequest(nullptr, std::move(from)) {}
  inline BatchWriteRequest& operator=(const BatchWriteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchWriteRequest& operator=(BatchWriteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BatchWriteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BatchWriteRequest* internal_default_instance() {
    return reinterpret_cast<const BatchWriteRequest*>(
        &_BatchWriteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(BatchWriteRequest& a, BatchWriteRequest& b) { a.Swap(&b); }
  inline void Swap(BatchWriteRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatchWriteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BatchWriteRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BatchWriteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BatchWriteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BatchWriteRequest& from) { BatchWriteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BatchWriteRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.groot.BatchWriteRequest"; }

 protected:
  explicit BatchWriteRequest(::google::protobuf::Arena* arena);
  BatchWriteRequest(::google::protobuf::Arena* arena, const BatchWriteRequest& from);
  BatchWriteRequest(::google::protobuf::Arena* arena, BatchWriteRequest&& from) noexcept
      : BatchWriteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWriteRequestsFieldNumber = 2,
    kClientIdFieldNumber = 1,
    kRequestOptionsFieldNumber = 3,
  };
  // repeated .gs.rpc.groot.WriteRequestPb write_requests = 2;
  int write_requests_size() const;
  private:
  int _internal_write_requests_size() const;

  public:
  void clear_write_requests() ;
  ::gs::rpc::groot::WriteRequestPb* mutable_write_requests(int index);
  ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::WriteRequestPb>* mutable_write_requests();

  private:
  const ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::WriteRequestPb>& _internal_write_requests() const;
  ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::WriteRequestPb>* _internal_mutable_write_requests();
  public:
  const ::gs::rpc::groot::WriteRequestPb& write_requests(int index) const;
  ::gs::rpc::groot::WriteRequestPb* add_write_requests();
  const ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::WriteRequestPb>& write_requests() const;
  // string client_id = 1;
  void clear_client_id() ;
  const std::string& client_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* value);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // .gs.rpc.groot.RequestOptionsPb request_options = 3;
  bool has_request_options() const;
  void clear_request_options() ;
  const ::gs::rpc::groot::RequestOptionsPb& request_options() const;
  PROTOBUF_NODISCARD ::gs::rpc::groot::RequestOptionsPb* release_request_options();
  ::gs::rpc::groot::RequestOptionsPb* mutable_request_options();
  void set_allocated_request_options(::gs::rpc::groot::RequestOptionsPb* value);
  void unsafe_arena_set_allocated_request_options(::gs::rpc::groot::RequestOptionsPb* value);
  ::gs::rpc::groot::RequestOptionsPb* unsafe_arena_release_request_options();

  private:
  const ::gs::rpc::groot::RequestOptionsPb& _internal_request_options() const;
  ::gs::rpc::groot::RequestOptionsPb* _internal_mutable_request_options();

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.groot.BatchWriteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BatchWriteRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BatchWriteRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::gs::rpc::groot::WriteRequestPb > write_requests_;
    ::google::protobuf::internal::ArenaStringPtr client_id_;
    ::gs::rpc::groot::RequestOptionsPb* request_options_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_write_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ReplayRecordsRequest

// int64 offset = 1;
inline void ReplayRecordsRequest::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = ::int64_t{0};
}
inline ::int64_t ReplayRecordsRequest::offset() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.ReplayRecordsRequest.offset)
  return _internal_offset();
}
inline void ReplayRecordsRequest::set_offset(::int64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.ReplayRecordsRequest.offset)
}
inline ::int64_t ReplayRecordsRequest::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void ReplayRecordsRequest::_internal_set_offset(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// int64 timestamp = 2;
inline void ReplayRecordsRequest::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
}
inline ::int64_t ReplayRecordsRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.ReplayRecordsRequest.timestamp)
  return _internal_timestamp();
}
inline void ReplayRecordsRequest::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.ReplayRecordsRequest.timestamp)
}
inline ::int64_t ReplayRecordsRequest::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void ReplayRecordsRequest::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// ReplayRecordsResponse

// repeated int64 snapshot_id = 1;
inline int ReplayRecordsResponse::_internal_snapshot_id_size() const {
  return _internal_snapshot_id().size();
}
inline int ReplayRecordsResponse::snapshot_id_size() const {
  return _internal_snapshot_id_size();
}
inline void ReplayRecordsResponse::clear_snapshot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshot_id_.Clear();
}
inline ::int64_t ReplayRecordsResponse::snapshot_id(int index) const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.ReplayRecordsResponse.snapshot_id)
  return _internal_snapshot_id().Get(index);
}
inline void ReplayRecordsResponse::set_snapshot_id(int index, ::int64_t value) {
  _internal_mutable_snapshot_id()->Set(index, value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.ReplayRecordsResponse.snapshot_id)
}
inline void ReplayRecordsResponse::add_snapshot_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_snapshot_id()->Add(value);
  // @@protoc_insertion_point(field_add:gs.rpc.groot.ReplayRecordsResponse.snapshot_id)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& ReplayRecordsResponse::snapshot_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:gs.rpc.groot.ReplayRecordsResponse.snapshot_id)
  return _internal_snapshot_id();
}
inline ::google::protobuf::RepeatedField<::int64_t>* ReplayRecordsResponse::mutable_snapshot_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:gs.rpc.groot.ReplayRecordsResponse.snapshot_id)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_snapshot_id();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
ReplayRecordsResponse::_internal_snapshot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snapshot_id_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* ReplayRecordsResponse::_internal_mutable_snapshot_id() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.snapshot_id_;
}

// -------------------------------------------------------------------

// GetClientIdRequest

// -------------------------------------------------------------------

// GetClientIdResponse

// string client_id = 1;
inline void GetClientIdResponse::clear_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& GetClientIdResponse::client_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.GetClientIdResponse.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetClientIdResponse::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.GetClientIdResponse.client_id)
}
inline std::string* GetClientIdResponse::mutable_client_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.GetClientIdResponse.client_id)
  return _s;
}
inline const std::string& GetClientIdResponse::_internal_client_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_id_.Get();
}
inline void GetClientIdResponse::_internal_set_client_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(value, GetArena());
}
inline std::string* GetClientIdResponse::_internal_mutable_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_id_.Mutable( GetArena());
}
inline std::string* GetClientIdResponse::release_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.GetClientIdResponse.client_id)
  return _impl_.client_id_.Release();
}
inline void GetClientIdResponse::set_allocated_client_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.client_id_.IsDefault()) {
          _impl_.client_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.GetClientIdResponse.client_id)
}

// -------------------------------------------------------------------

// BatchWriteRequest

// string client_id = 1;
inline void BatchWriteRequest::clear_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& BatchWriteRequest::client_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchWriteRequest.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BatchWriteRequest::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.BatchWriteRequest.client_id)
}
inline std::string* BatchWriteRequest::mutable_client_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchWriteRequest.client_id)
  return _s;
}
inline const std::string& BatchWriteRequest::_internal_client_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_id_.Get();
}
inline void BatchWriteRequest::_internal_set_client_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(value, GetArena());
}
inline std::string* BatchWriteRequest::_internal_mutable_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_id_.Mutable( GetArena());
}
inline std::string* BatchWriteRequest::release_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchWriteRequest.client_id)
  return _impl_.client_id_.Release();
}
inline void BatchWriteRequest::set_allocated_client_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.client_id_.IsDefault()) {
          _impl_.client_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.BatchWriteRequest.client_id)
}

// repeated .gs.rpc.groot.WriteRequestPb write_requests = 2;
inline int BatchWriteRequest::_internal_write_requests_size() const {
  return _internal_write_requests().size();
}
inline int BatchWriteRequest::write_requests_size() const {
  return _internal_write_requests_size();
}
inline void BatchWriteRequest::clear_write_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.write_requests_.Clear();
}
inline ::gs::rpc::groot::WriteRequestPb* BatchWriteRequest::mutable_write_requests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchWriteRequest.write_requests)
  return _internal_mutable_write_requests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::WriteRequestPb>* BatchWriteRequest::mutable_write_requests()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:gs.rpc.groot.BatchWriteRequest.write_requests)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_write_requests();
}
inline const ::gs::rpc::groot::WriteRequestPb& BatchWriteRequest::write_requests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchWriteRequest.write_requests)
  return _internal_write_requests().Get(index);
}
inline ::gs::rpc::groot::WriteRequestPb* BatchWriteRequest::add_write_requests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::gs::rpc::groot::WriteRequestPb* _add = _internal_mutable_write_requests()->Add();
  // @@protoc_insertion_point(field_add:gs.rpc.groot.BatchWriteRequest.write_requests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::WriteRequestPb>& BatchWriteRequest::write_requests() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:gs.rpc.groot.BatchWriteRequest.write_requests)
  return _internal_write_requests();
}
inline const ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::WriteRequestPb>&
BatchWriteRequest::_internal_write_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.write_requests_;
}
inline ::google::protobuf::RepeatedPtrField<::gs::rpc::groot::WriteRequestPb>*
BatchWriteRequest::_internal_mutable_write_requests() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.write_requests_;
}

// .gs.rpc.groot.RequestOptionsPb request_options = 3;
inline bool BatchWriteRequest::has_request_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.request_options_ != nullptr);
  return value;
}
inline const ::gs::rpc::groot::RequestOptionsPb& BatchWriteRequest::_internal_request_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::groot::RequestOptionsPb* p = _impl_.request_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::groot::RequestOptionsPb&>(::gs::rpc::groot::_RequestOptionsPb_default_instance_);
}
inline const ::gs::rpc::groot::RequestOptionsPb& BatchWriteRequest::request_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchWriteRequest.request_options)
  return _internal_request_options();
}
inline void BatchWriteRequest::unsafe_arena_set_allocated_request_options(::gs::rpc::groot::RequestOptionsPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_options_);
  }
  _impl_.request_options_ = reinterpret_cast<::gs::rpc::groot::RequestOptionsPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.BatchWriteRequest.request_options)
}
inline ::gs::rpc::groot::RequestOptionsPb* BatchWriteRequest::release_request_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::groot::RequestOptionsPb* released = _impl_.request_options_;
  _impl_.request_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::groot::RequestOptionsPb* BatchWriteRequest::unsafe_arena_release_request_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.BatchWriteRequest.request_options)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::groot::RequestOptionsPb* temp = _impl_.request_options_;
  _impl_.request_options_ = nullptr;
  return temp;
}
inline ::gs::rpc::groot::RequestOptionsPb* BatchWriteRequest::_internal_mutable_request_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::RequestOptionsPb>(GetArena());
    _impl_.request_options_ = reinterpret_cast<::gs::rpc::groot::RequestOptionsPb*>(p);
  }
  return _impl_.request_options_;
}
inline ::gs::rpc::groot::RequestOptionsPb* BatchWriteRequest::mutable_request_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::groot::RequestOptionsPb* _msg = _internal_mutable_request_options();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.BatchWriteRequest.request_options)
  return _msg;
}
inline void BatchWriteRequest::set_allocated_request_options(::gs::rpc::groot::RequestOptionsPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.request_options_ = reinterpret_cast<::gs::rpc::groot::RequestOptionsPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.BatchWriteRequest.request_options)
}

// -------------------------------------------------------------------

// BatchWriteResponse

// int64 snapshot_id = 1;
inline void BatchWriteResponse::clear_snapshot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshot_id_ = ::int64_t{0};
}
inline ::int64_t BatchWriteResponse::snapshot_id() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.BatchWriteResponse.snapshot_id)
  return _internal_snapshot_id();
}
inline void BatchWriteResponse::set_snapshot_id(::int64_t value) {
  _internal_set_snapshot_id(value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.BatchWriteResponse.snapshot_id)
}
inline ::int64_t BatchWriteResponse::_internal_snapshot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snapshot_id_;
}
inline void BatchWriteResponse::_internal_set_snapshot_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshot_id_ = value;
}

// -------------------------------------------------------------------

// RemoteFlushRequest

// int64 snapshot_id = 1;
inline void RemoteFlushRequest::clear_snapshot_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshot_id_ = ::int64_t{0};
}
inline ::int64_t RemoteFlushRequest::snapshot_id() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.RemoteFlushRequest.snapshot_id)
  return _internal_snapshot_id();
}
inline void RemoteFlushRequest::set_snapshot_id(::int64_t value) {
  _internal_set_snapshot_id(value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.RemoteFlushRequest.snapshot_id)
}
inline ::int64_t RemoteFlushRequest::_internal_snapshot_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snapshot_id_;
}
inline void RemoteFlushRequest::_internal_set_snapshot_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshot_id_ = value;
}

// int64 wait_time_ms = 2;
inline void RemoteFlushRequest::clear_wait_time_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wait_time_ms_ = ::int64_t{0};
}
inline ::int64_t RemoteFlushRequest::wait_time_ms() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.RemoteFlushRequest.wait_time_ms)
  return _internal_wait_time_ms();
}
inline void RemoteFlushRequest::set_wait_time_ms(::int64_t value) {
  _internal_set_wait_time_ms(value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.RemoteFlushRequest.wait_time_ms)
}
inline ::int64_t RemoteFlushRequest::_internal_wait_time_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wait_time_ms_;
}
inline void RemoteFlushRequest::_internal_set_wait_time_ms(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wait_time_ms_ = value;
}

// -------------------------------------------------------------------

// RemoteFlushResponse

// bool success = 1;
inline void RemoteFlushResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool RemoteFlushResponse::success() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.RemoteFlushResponse.success)
  return _internal_success();
}
inline void RemoteFlushResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.RemoteFlushResponse.success)
}
inline bool RemoteFlushResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void RemoteFlushResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// WriteRequestPb

// .gs.rpc.groot.WriteTypePb write_type = 1;
inline void WriteRequestPb::clear_write_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.write_type_ = 0;
}
inline ::gs::rpc::groot::WriteTypePb WriteRequestPb::write_type() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.WriteRequestPb.write_type)
  return _internal_write_type();
}
inline void WriteRequestPb::set_write_type(::gs::rpc::groot::WriteTypePb value) {
  _internal_set_write_type(value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.WriteRequestPb.write_type)
}
inline ::gs::rpc::groot::WriteTypePb WriteRequestPb::_internal_write_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::gs::rpc::groot::WriteTypePb>(_impl_.write_type_);
}
inline void WriteRequestPb::_internal_set_write_type(::gs::rpc::groot::WriteTypePb value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.write_type_ = value;
}

// .gs.rpc.groot.DataRecordPb data_record = 2;
inline bool WriteRequestPb::has_data_record() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_record_ != nullptr);
  return value;
}
inline void WriteRequestPb::clear_data_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_record_ != nullptr) _impl_.data_record_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::gs::rpc::groot::DataRecordPb& WriteRequestPb::_internal_data_record() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::groot::DataRecordPb* p = _impl_.data_record_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::groot::DataRecordPb&>(::gs::rpc::groot::_DataRecordPb_default_instance_);
}
inline const ::gs::rpc::groot::DataRecordPb& WriteRequestPb::data_record() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.WriteRequestPb.data_record)
  return _internal_data_record();
}
inline void WriteRequestPb::unsafe_arena_set_allocated_data_record(::gs::rpc::groot::DataRecordPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_record_);
  }
  _impl_.data_record_ = reinterpret_cast<::gs::rpc::groot::DataRecordPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.WriteRequestPb.data_record)
}
inline ::gs::rpc::groot::DataRecordPb* WriteRequestPb::release_data_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::groot::DataRecordPb* released = _impl_.data_record_;
  _impl_.data_record_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::groot::DataRecordPb* WriteRequestPb::unsafe_arena_release_data_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.WriteRequestPb.data_record)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::groot::DataRecordPb* temp = _impl_.data_record_;
  _impl_.data_record_ = nullptr;
  return temp;
}
inline ::gs::rpc::groot::DataRecordPb* WriteRequestPb::_internal_mutable_data_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_record_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::DataRecordPb>(GetArena());
    _impl_.data_record_ = reinterpret_cast<::gs::rpc::groot::DataRecordPb*>(p);
  }
  return _impl_.data_record_;
}
inline ::gs::rpc::groot::DataRecordPb* WriteRequestPb::mutable_data_record() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::groot::DataRecordPb* _msg = _internal_mutable_data_record();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.WriteRequestPb.data_record)
  return _msg;
}
inline void WriteRequestPb::set_allocated_data_record(::gs::rpc::groot::DataRecordPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.data_record_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.data_record_ = reinterpret_cast<::gs::rpc::groot::DataRecordPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.WriteRequestPb.data_record)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// DataRecordPb

// .gs.rpc.groot.VertexRecordKeyPb vertex_record_key = 1;
inline bool DataRecordPb::has_vertex_record_key() const {
  return record_key_case() == kVertexRecordKey;
}
inline bool DataRecordPb::_internal_has_vertex_record_key() const {
  return record_key_case() == kVertexRecordKey;
}
inline void DataRecordPb::set_has_vertex_record_key() {
  _impl_._oneof_case_[0] = kVertexRecordKey;
}
inline void DataRecordPb::clear_vertex_record_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (record_key_case() == kVertexRecordKey) {
    if (GetArena() == nullptr) {
      delete _impl_.record_key_.vertex_record_key_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.record_key_.vertex_record_key_);
    }
    clear_has_record_key();
  }
}
inline ::gs::rpc::groot::VertexRecordKeyPb* DataRecordPb::release_vertex_record_key() {
  // @@protoc_insertion_point(field_release:gs.rpc.groot.DataRecordPb.vertex_record_key)
  if (record_key_case() == kVertexRecordKey) {
    clear_has_record_key();
    auto* temp = _impl_.record_key_.vertex_record_key_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.record_key_.vertex_record_key_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::gs::rpc::groot::VertexRecordKeyPb& DataRecordPb::_internal_vertex_record_key() const {
  return record_key_case() == kVertexRecordKey ? *_impl_.record_key_.vertex_record_key_ : reinterpret_cast<::gs::rpc::groot::VertexRecordKeyPb&>(::gs::rpc::groot::_VertexRecordKeyPb_default_instance_);
}
inline const ::gs::rpc::groot::VertexRecordKeyPb& DataRecordPb::vertex_record_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.DataRecordPb.vertex_record_key)
  return _internal_vertex_record_key();
}
inline ::gs::rpc::groot::VertexRecordKeyPb* DataRecordPb::unsafe_arena_release_vertex_record_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gs.rpc.groot.DataRecordPb.vertex_record_key)
  if (record_key_case() == kVertexRecordKey) {
    clear_has_record_key();
    auto* temp = _impl_.record_key_.vertex_record_key_;
    _impl_.record_key_.vertex_record_key_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void DataRecordPb::unsafe_arena_set_allocated_vertex_record_key(::gs::rpc::groot::VertexRecordKeyPb* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_record_key();
  if (value) {
    set_has_vertex_record_key();
    _impl_.record_key_.vertex_record_key_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.DataRecordPb.vertex_record_key)
}
inline ::gs::rpc::groot::VertexRecordKeyPb* DataRecordPb::_internal_mutable_vertex_record_key() {
  if (record_key_case() != kVertexRecordKey) {
    clear_record_key();
    set_has_vertex_record_key();
    _impl_.record_key_.vertex_record_key_ =
        ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::VertexRecordKeyPb>(GetArena());
  }
  return _impl_.record_key_.vertex_record_key_;
}
inline ::gs::rpc::groot::VertexRecordKeyPb* DataRecordPb::mutable_vertex_record_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::gs::rpc::groot::VertexRecordKeyPb* _msg = _internal_mutable_vertex_record_key();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.DataRecordPb.vertex_record_key)
  return _msg;
}

// .gs.rpc.groot.EdgeRecordKeyPb edge_record_key = 2;
inline bool DataRecordPb::has_edge_record_key() const {
  return record_key_case() == kEdgeRecordKey;
}
inline bool DataRecordPb::_internal_has_edge_record_key() const {
  return record_key_case() == kEdgeRecordKey;
}
inline void DataRecordPb::set_has_edge_record_key() {
  _impl_._oneof_case_[0] = kEdgeRecordKey;
}
inline void DataRecordPb::clear_edge_record_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (record_key_case() == kEdgeRecordKey) {
    if (GetArena() == nullptr) {
      delete _impl_.record_key_.edge_record_key_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.record_key_.edge_record_key_);
    }
    clear_has_record_key();
  }
}
inline ::gs::rpc::groot::EdgeRecordKeyPb* DataRecordPb::release_edge_record_key() {
  // @@protoc_insertion_point(field_release:gs.rpc.groot.DataRecordPb.edge_record_key)
  if (record_key_case() == kEdgeRecordKey) {
    clear_has_record_key();
    auto* temp = _impl_.record_key_.edge_record_key_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.record_key_.edge_record_key_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::gs::rpc::groot::EdgeRecordKeyPb& DataRecordPb::_internal_edge_record_key() const {
  return record_key_case() == kEdgeRecordKey ? *_impl_.record_key_.edge_record_key_ : reinterpret_cast<::gs::rpc::groot::EdgeRecordKeyPb&>(::gs::rpc::groot::_EdgeRecordKeyPb_default_instance_);
}
inline const ::gs::rpc::groot::EdgeRecordKeyPb& DataRecordPb::edge_record_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.DataRecordPb.edge_record_key)
  return _internal_edge_record_key();
}
inline ::gs::rpc::groot::EdgeRecordKeyPb* DataRecordPb::unsafe_arena_release_edge_record_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gs.rpc.groot.DataRecordPb.edge_record_key)
  if (record_key_case() == kEdgeRecordKey) {
    clear_has_record_key();
    auto* temp = _impl_.record_key_.edge_record_key_;
    _impl_.record_key_.edge_record_key_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void DataRecordPb::unsafe_arena_set_allocated_edge_record_key(::gs::rpc::groot::EdgeRecordKeyPb* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_record_key();
  if (value) {
    set_has_edge_record_key();
    _impl_.record_key_.edge_record_key_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.DataRecordPb.edge_record_key)
}
inline ::gs::rpc::groot::EdgeRecordKeyPb* DataRecordPb::_internal_mutable_edge_record_key() {
  if (record_key_case() != kEdgeRecordKey) {
    clear_record_key();
    set_has_edge_record_key();
    _impl_.record_key_.edge_record_key_ =
        ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::EdgeRecordKeyPb>(GetArena());
  }
  return _impl_.record_key_.edge_record_key_;
}
inline ::gs::rpc::groot::EdgeRecordKeyPb* DataRecordPb::mutable_edge_record_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::gs::rpc::groot::EdgeRecordKeyPb* _msg = _internal_mutable_edge_record_key();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.DataRecordPb.edge_record_key)
  return _msg;
}

// map<string, string> properties = 3;
inline int DataRecordPb::_internal_properties_size() const {
  return _internal_properties().size();
}
inline int DataRecordPb::properties_size() const {
  return _internal_properties_size();
}
inline void DataRecordPb::clear_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.properties_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& DataRecordPb::_internal_properties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.properties_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& DataRecordPb::properties() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:gs.rpc.groot.DataRecordPb.properties)
  return _internal_properties();
}
inline ::google::protobuf::Map<std::string, std::string>* DataRecordPb::_internal_mutable_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.properties_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* DataRecordPb::mutable_properties() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:gs.rpc.groot.DataRecordPb.properties)
  return _internal_mutable_properties();
}

inline bool DataRecordPb::has_record_key() const {
  return record_key_case() != RECORD_KEY_NOT_SET;
}
inline void DataRecordPb::clear_has_record_key() {
  _impl_._oneof_case_[0] = RECORD_KEY_NOT_SET;
}
inline DataRecordPb::RecordKeyCase DataRecordPb::record_key_case() const {
  return DataRecordPb::RecordKeyCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// VertexRecordKeyPb

// string label = 1;
inline void VertexRecordKeyPb::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& VertexRecordKeyPb::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.VertexRecordKeyPb.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VertexRecordKeyPb::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.VertexRecordKeyPb.label)
}
inline std::string* VertexRecordKeyPb::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.VertexRecordKeyPb.label)
  return _s;
}
inline const std::string& VertexRecordKeyPb::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void VertexRecordKeyPb::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* VertexRecordKeyPb::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* VertexRecordKeyPb::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.VertexRecordKeyPb.label)
  return _impl_.label_.Release();
}
inline void VertexRecordKeyPb::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.VertexRecordKeyPb.label)
}

// map<string, string> pk_properties = 2;
inline int VertexRecordKeyPb::_internal_pk_properties_size() const {
  return _internal_pk_properties().size();
}
inline int VertexRecordKeyPb::pk_properties_size() const {
  return _internal_pk_properties_size();
}
inline void VertexRecordKeyPb::clear_pk_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_properties_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& VertexRecordKeyPb::_internal_pk_properties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pk_properties_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& VertexRecordKeyPb::pk_properties() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:gs.rpc.groot.VertexRecordKeyPb.pk_properties)
  return _internal_pk_properties();
}
inline ::google::protobuf::Map<std::string, std::string>* VertexRecordKeyPb::_internal_mutable_pk_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pk_properties_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* VertexRecordKeyPb::mutable_pk_properties() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:gs.rpc.groot.VertexRecordKeyPb.pk_properties)
  return _internal_mutable_pk_properties();
}

// -------------------------------------------------------------------

// EdgeRecordKeyPb

// string label = 1;
inline void EdgeRecordKeyPb::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& EdgeRecordKeyPb::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.EdgeRecordKeyPb.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdgeRecordKeyPb::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.groot.EdgeRecordKeyPb.label)
}
inline std::string* EdgeRecordKeyPb::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.EdgeRecordKeyPb.label)
  return _s;
}
inline const std::string& EdgeRecordKeyPb::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void EdgeRecordKeyPb::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* EdgeRecordKeyPb::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* EdgeRecordKeyPb::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.EdgeRecordKeyPb.label)
  return _impl_.label_.Release();
}
inline void EdgeRecordKeyPb::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.EdgeRecordKeyPb.label)
}

// .gs.rpc.groot.VertexRecordKeyPb src_vertex_key = 2;
inline bool EdgeRecordKeyPb::has_src_vertex_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.src_vertex_key_ != nullptr);
  return value;
}
inline void EdgeRecordKeyPb::clear_src_vertex_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.src_vertex_key_ != nullptr) _impl_.src_vertex_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::gs::rpc::groot::VertexRecordKeyPb& EdgeRecordKeyPb::_internal_src_vertex_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::groot::VertexRecordKeyPb* p = _impl_.src_vertex_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::groot::VertexRecordKeyPb&>(::gs::rpc::groot::_VertexRecordKeyPb_default_instance_);
}
inline const ::gs::rpc::groot::VertexRecordKeyPb& EdgeRecordKeyPb::src_vertex_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.EdgeRecordKeyPb.src_vertex_key)
  return _internal_src_vertex_key();
}
inline void EdgeRecordKeyPb::unsafe_arena_set_allocated_src_vertex_key(::gs::rpc::groot::VertexRecordKeyPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.src_vertex_key_);
  }
  _impl_.src_vertex_key_ = reinterpret_cast<::gs::rpc::groot::VertexRecordKeyPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.EdgeRecordKeyPb.src_vertex_key)
}
inline ::gs::rpc::groot::VertexRecordKeyPb* EdgeRecordKeyPb::release_src_vertex_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::groot::VertexRecordKeyPb* released = _impl_.src_vertex_key_;
  _impl_.src_vertex_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::groot::VertexRecordKeyPb* EdgeRecordKeyPb::unsafe_arena_release_src_vertex_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.EdgeRecordKeyPb.src_vertex_key)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::groot::VertexRecordKeyPb* temp = _impl_.src_vertex_key_;
  _impl_.src_vertex_key_ = nullptr;
  return temp;
}
inline ::gs::rpc::groot::VertexRecordKeyPb* EdgeRecordKeyPb::_internal_mutable_src_vertex_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.src_vertex_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::VertexRecordKeyPb>(GetArena());
    _impl_.src_vertex_key_ = reinterpret_cast<::gs::rpc::groot::VertexRecordKeyPb*>(p);
  }
  return _impl_.src_vertex_key_;
}
inline ::gs::rpc::groot::VertexRecordKeyPb* EdgeRecordKeyPb::mutable_src_vertex_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::groot::VertexRecordKeyPb* _msg = _internal_mutable_src_vertex_key();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.EdgeRecordKeyPb.src_vertex_key)
  return _msg;
}
inline void EdgeRecordKeyPb::set_allocated_src_vertex_key(::gs::rpc::groot::VertexRecordKeyPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.src_vertex_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.src_vertex_key_ = reinterpret_cast<::gs::rpc::groot::VertexRecordKeyPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.EdgeRecordKeyPb.src_vertex_key)
}

// .gs.rpc.groot.VertexRecordKeyPb dst_vertex_key = 3;
inline bool EdgeRecordKeyPb::has_dst_vertex_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dst_vertex_key_ != nullptr);
  return value;
}
inline void EdgeRecordKeyPb::clear_dst_vertex_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dst_vertex_key_ != nullptr) _impl_.dst_vertex_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::gs::rpc::groot::VertexRecordKeyPb& EdgeRecordKeyPb::_internal_dst_vertex_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::groot::VertexRecordKeyPb* p = _impl_.dst_vertex_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::groot::VertexRecordKeyPb&>(::gs::rpc::groot::_VertexRecordKeyPb_default_instance_);
}
inline const ::gs::rpc::groot::VertexRecordKeyPb& EdgeRecordKeyPb::dst_vertex_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.EdgeRecordKeyPb.dst_vertex_key)
  return _internal_dst_vertex_key();
}
inline void EdgeRecordKeyPb::unsafe_arena_set_allocated_dst_vertex_key(::gs::rpc::groot::VertexRecordKeyPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dst_vertex_key_);
  }
  _impl_.dst_vertex_key_ = reinterpret_cast<::gs::rpc::groot::VertexRecordKeyPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.groot.EdgeRecordKeyPb.dst_vertex_key)
}
inline ::gs::rpc::groot::VertexRecordKeyPb* EdgeRecordKeyPb::release_dst_vertex_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::gs::rpc::groot::VertexRecordKeyPb* released = _impl_.dst_vertex_key_;
  _impl_.dst_vertex_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::groot::VertexRecordKeyPb* EdgeRecordKeyPb::unsafe_arena_release_dst_vertex_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.groot.EdgeRecordKeyPb.dst_vertex_key)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::gs::rpc::groot::VertexRecordKeyPb* temp = _impl_.dst_vertex_key_;
  _impl_.dst_vertex_key_ = nullptr;
  return temp;
}
inline ::gs::rpc::groot::VertexRecordKeyPb* EdgeRecordKeyPb::_internal_mutable_dst_vertex_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dst_vertex_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::groot::VertexRecordKeyPb>(GetArena());
    _impl_.dst_vertex_key_ = reinterpret_cast<::gs::rpc::groot::VertexRecordKeyPb*>(p);
  }
  return _impl_.dst_vertex_key_;
}
inline ::gs::rpc::groot::VertexRecordKeyPb* EdgeRecordKeyPb::mutable_dst_vertex_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::gs::rpc::groot::VertexRecordKeyPb* _msg = _internal_mutable_dst_vertex_key();
  // @@protoc_insertion_point(field_mutable:gs.rpc.groot.EdgeRecordKeyPb.dst_vertex_key)
  return _msg;
}
inline void EdgeRecordKeyPb::set_allocated_dst_vertex_key(::gs::rpc::groot::VertexRecordKeyPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.dst_vertex_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.dst_vertex_key_ = reinterpret_cast<::gs::rpc::groot::VertexRecordKeyPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.groot.EdgeRecordKeyPb.dst_vertex_key)
}

// int64 inner_id = 4;
inline void EdgeRecordKeyPb::clear_inner_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inner_id_ = ::int64_t{0};
}
inline ::int64_t EdgeRecordKeyPb::inner_id() const {
  // @@protoc_insertion_point(field_get:gs.rpc.groot.EdgeRecordKeyPb.inner_id)
  return _internal_inner_id();
}
inline void EdgeRecordKeyPb::set_inner_id(::int64_t value) {
  _internal_set_inner_id(value);
  // @@protoc_insertion_point(field_set:gs.rpc.groot.EdgeRecordKeyPb.inner_id)
}
inline ::int64_t EdgeRecordKeyPb::_internal_inner_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inner_id_;
}
inline void EdgeRecordKeyPb::_internal_set_inner_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inner_id_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace groot
}  // namespace rpc
}  // namespace gs


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::gs::rpc::groot::WriteTypePb> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::gs::rpc::groot::WriteTypePb>() {
  return ::gs::rpc::groot::WriteTypePb_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_write_5fservice_2eproto_2epb_2eh
