// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: op_def.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_op_5fdef_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_op_5fdef_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "attr_value.pb.h"
#include "error/coordinator.pb.h"
#include "graph_def.pb.h"
#include "types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_op_5fdef_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_op_5fdef_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_op_5fdef_2eproto;
namespace gs {
namespace rpc {
class DagDef;
struct DagDefDefaultTypeInternal;
extern DagDefDefaultTypeInternal _DagDef_default_instance_;
class OpDef;
struct OpDefDefaultTypeInternal;
extern OpDefDefaultTypeInternal _OpDef_default_instance_;
class OpDef_AttrEntry_DoNotUse;
struct OpDef_AttrEntry_DoNotUseDefaultTypeInternal;
extern OpDef_AttrEntry_DoNotUseDefaultTypeInternal _OpDef_AttrEntry_DoNotUse_default_instance_;
class OpResult;
struct OpResultDefaultTypeInternal;
extern OpResultDefaultTypeInternal _OpResult_default_instance_;
class OpResult_Meta;
struct OpResult_MetaDefaultTypeInternal;
extern OpResult_MetaDefaultTypeInternal _OpResult_Meta_default_instance_;
}  // namespace rpc
}  // namespace gs
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace gs {
namespace rpc {

// ===================================================================


// -------------------------------------------------------------------

class OpResult_Meta final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.OpResult.Meta) */ {
 public:
  inline OpResult_Meta() : OpResult_Meta(nullptr) {}
  ~OpResult_Meta() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpResult_Meta(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpResult_Meta(const OpResult_Meta& from) : OpResult_Meta(nullptr, from) {}
  inline OpResult_Meta(OpResult_Meta&& from) noexcept
      : OpResult_Meta(nullptr, std::move(from)) {}
  inline OpResult_Meta& operator=(const OpResult_Meta& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpResult_Meta& operator=(OpResult_Meta&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpResult_Meta& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpResult_Meta* internal_default_instance() {
    return reinterpret_cast<const OpResult_Meta*>(
        &_OpResult_Meta_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(OpResult_Meta& a, OpResult_Meta& b) { a.Swap(&b); }
  inline void Swap(OpResult_Meta* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpResult_Meta* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpResult_Meta* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OpResult_Meta>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpResult_Meta& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpResult_Meta& from) { OpResult_Meta::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpResult_Meta* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.OpResult.Meta"; }

 protected:
  explicit OpResult_Meta(::google::protobuf::Arena* arena);
  OpResult_Meta(::google::protobuf::Arena* arena, const OpResult_Meta& from);
  OpResult_Meta(::google::protobuf::Arena* arena, OpResult_Meta&& from) noexcept
      : OpResult_Meta(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetricsFieldNumber = 1,
    kHasLargeResultFieldNumber = 2,
  };
  // string metrics = 1;
  void clear_metrics() ;
  const std::string& metrics() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metrics(Arg_&& arg, Args_... args);
  std::string* mutable_metrics();
  PROTOBUF_NODISCARD std::string* release_metrics();
  void set_allocated_metrics(std::string* value);

  private:
  const std::string& _internal_metrics() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_metrics(
      const std::string& value);
  std::string* _internal_mutable_metrics();

  public:
  // bool has_large_result = 2;
  void clear_has_large_result() ;
  bool has_large_result() const;
  void set_has_large_result(bool value);

  private:
  bool _internal_has_large_result() const;
  void _internal_set_has_large_result(bool value);

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.OpResult.Meta)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OpResult_Meta_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpResult_Meta& from_msg);
    ::google::protobuf::internal::ArenaStringPtr metrics_;
    bool has_large_result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_op_5fdef_2eproto;
};
// -------------------------------------------------------------------

class OpDef_AttrEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          OpDef_AttrEntry_DoNotUse, ::int32_t, ::gs::rpc::AttrValue,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      OpDef_AttrEntry_DoNotUse, ::int32_t, ::gs::rpc::AttrValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  OpDef_AttrEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpDef_AttrEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit OpDef_AttrEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const OpDef_AttrEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const OpDef_AttrEntry_DoNotUse*>(
        &_OpDef_AttrEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_op_5fdef_2eproto;
};
// -------------------------------------------------------------------

class OpResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.OpResult) */ {
 public:
  inline OpResult() : OpResult(nullptr) {}
  ~OpResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpResult(const OpResult& from) : OpResult(nullptr, from) {}
  inline OpResult(OpResult&& from) noexcept
      : OpResult(nullptr, std::move(from)) {}
  inline OpResult& operator=(const OpResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpResult& operator=(OpResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpResult* internal_default_instance() {
    return reinterpret_cast<const OpResult*>(
        &_OpResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(OpResult& a, OpResult& b) { a.Swap(&b); }
  inline void Swap(OpResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OpResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpResult& from) { OpResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.OpResult"; }

 protected:
  explicit OpResult(::google::protobuf::Arena* arena);
  OpResult(::google::protobuf::Arena* arena, const OpResult& from);
  OpResult(::google::protobuf::Arena* arena, OpResult&& from) noexcept
      : OpResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Meta = OpResult_Meta;

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 2,
    kResultFieldNumber = 4,
    kErrorMsgFieldNumber = 5,
    kMetaFieldNumber = 3,
    kGraphDefFieldNumber = 7,
    kCodeFieldNumber = 1,
  };
  // string key = 2;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // bytes result = 4;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // string error_msg = 5;
  void clear_error_msg() ;
  const std::string& error_msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_msg(Arg_&& arg, Args_... args);
  std::string* mutable_error_msg();
  PROTOBUF_NODISCARD std::string* release_error_msg();
  void set_allocated_error_msg(std::string* value);

  private:
  const std::string& _internal_error_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_msg(
      const std::string& value);
  std::string* _internal_mutable_error_msg();

  public:
  // .gs.rpc.OpResult.Meta meta = 3;
  bool has_meta() const;
  void clear_meta() ;
  const ::gs::rpc::OpResult_Meta& meta() const;
  PROTOBUF_NODISCARD ::gs::rpc::OpResult_Meta* release_meta();
  ::gs::rpc::OpResult_Meta* mutable_meta();
  void set_allocated_meta(::gs::rpc::OpResult_Meta* value);
  void unsafe_arena_set_allocated_meta(::gs::rpc::OpResult_Meta* value);
  ::gs::rpc::OpResult_Meta* unsafe_arena_release_meta();

  private:
  const ::gs::rpc::OpResult_Meta& _internal_meta() const;
  ::gs::rpc::OpResult_Meta* _internal_mutable_meta();

  public:
  // .gs.rpc.graph.GraphDefPb graph_def = 7;
  bool has_graph_def() const;
  void clear_graph_def() ;
  const ::gs::rpc::graph::GraphDefPb& graph_def() const;
  PROTOBUF_NODISCARD ::gs::rpc::graph::GraphDefPb* release_graph_def();
  ::gs::rpc::graph::GraphDefPb* mutable_graph_def();
  void set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value);
  void unsafe_arena_set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value);
  ::gs::rpc::graph::GraphDefPb* unsafe_arena_release_graph_def();

  private:
  const ::gs::rpc::graph::GraphDefPb& _internal_graph_def() const;
  ::gs::rpc::graph::GraphDefPb* _internal_mutable_graph_def();

  public:
  // .gs.rpc.Code code = 1;
  void clear_code() ;
  ::gs::rpc::Code code() const;
  void set_code(::gs::rpc::Code value);

  private:
  ::gs::rpc::Code _internal_code() const;
  void _internal_set_code(::gs::rpc::Code value);

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.OpResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OpResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpResult& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr result_;
    ::google::protobuf::internal::ArenaStringPtr error_msg_;
    ::gs::rpc::OpResult_Meta* meta_;
    ::gs::rpc::graph::GraphDefPb* graph_def_;
    int code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_op_5fdef_2eproto;
};
// -------------------------------------------------------------------

class OpDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.OpDef) */ {
 public:
  inline OpDef() : OpDef(nullptr) {}
  ~OpDef() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpDef(const OpDef& from) : OpDef(nullptr, from) {}
  inline OpDef(OpDef&& from) noexcept
      : OpDef(nullptr, std::move(from)) {}
  inline OpDef& operator=(const OpDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpDef& operator=(OpDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpDef* internal_default_instance() {
    return reinterpret_cast<const OpDef*>(
        &_OpDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OpDef& a, OpDef& b) { a.Swap(&b); }
  inline void Swap(OpDef* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpDef* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OpDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpDef& from) { OpDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpDef* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.OpDef"; }

 protected:
  explicit OpDef(::google::protobuf::Arena* arena);
  OpDef(::google::protobuf::Arena* arena, const OpDef& from);
  OpDef(::google::protobuf::Arena* arena, OpDef&& from) noexcept
      : OpDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParentsFieldNumber = 4,
    kAttrFieldNumber = 6,
    kKeyFieldNumber = 2,
    kLargeAttrFieldNumber = 7,
    kQueryArgsFieldNumber = 8,
    kOpFieldNumber = 3,
    kOutputTypeFieldNumber = 5,
  };
  // repeated string parents = 4;
  int parents_size() const;
  private:
  int _internal_parents_size() const;

  public:
  void clear_parents() ;
  const std::string& parents(int index) const;
  std::string* mutable_parents(int index);
  void set_parents(int index, const std::string& value);
  void set_parents(int index, std::string&& value);
  void set_parents(int index, const char* value);
  void set_parents(int index, const char* value, std::size_t size);
  void set_parents(int index, absl::string_view value);
  std::string* add_parents();
  void add_parents(const std::string& value);
  void add_parents(std::string&& value);
  void add_parents(const char* value);
  void add_parents(const char* value, std::size_t size);
  void add_parents(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& parents() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_parents();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_parents() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_parents();

  public:
  // map<int32, .gs.rpc.AttrValue> attr = 6;
  int attr_size() const;
  private:
  int _internal_attr_size() const;

  public:
  void clear_attr() ;
  const ::google::protobuf::Map<::int32_t, ::gs::rpc::AttrValue>& attr() const;
  ::google::protobuf::Map<::int32_t, ::gs::rpc::AttrValue>* mutable_attr();

  private:
  const ::google::protobuf::Map<::int32_t, ::gs::rpc::AttrValue>& _internal_attr() const;
  ::google::protobuf::Map<::int32_t, ::gs::rpc::AttrValue>* _internal_mutable_attr();

  public:
  // string key = 2;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .gs.rpc.LargeAttrValue large_attr = 7;
  bool has_large_attr() const;
  void clear_large_attr() ;
  const ::gs::rpc::LargeAttrValue& large_attr() const;
  PROTOBUF_NODISCARD ::gs::rpc::LargeAttrValue* release_large_attr();
  ::gs::rpc::LargeAttrValue* mutable_large_attr();
  void set_allocated_large_attr(::gs::rpc::LargeAttrValue* value);
  void unsafe_arena_set_allocated_large_attr(::gs::rpc::LargeAttrValue* value);
  ::gs::rpc::LargeAttrValue* unsafe_arena_release_large_attr();

  private:
  const ::gs::rpc::LargeAttrValue& _internal_large_attr() const;
  ::gs::rpc::LargeAttrValue* _internal_mutable_large_attr();

  public:
  // .gs.rpc.QueryArgs query_args = 8;
  bool has_query_args() const;
  void clear_query_args() ;
  const ::gs::rpc::QueryArgs& query_args() const;
  PROTOBUF_NODISCARD ::gs::rpc::QueryArgs* release_query_args();
  ::gs::rpc::QueryArgs* mutable_query_args();
  void set_allocated_query_args(::gs::rpc::QueryArgs* value);
  void unsafe_arena_set_allocated_query_args(::gs::rpc::QueryArgs* value);
  ::gs::rpc::QueryArgs* unsafe_arena_release_query_args();

  private:
  const ::gs::rpc::QueryArgs& _internal_query_args() const;
  ::gs::rpc::QueryArgs* _internal_mutable_query_args();

  public:
  // .gs.rpc.OperationType op = 3;
  void clear_op() ;
  ::gs::rpc::OperationType op() const;
  void set_op(::gs::rpc::OperationType value);

  private:
  ::gs::rpc::OperationType _internal_op() const;
  void _internal_set_op(::gs::rpc::OperationType value);

  public:
  // .gs.rpc.OutputType output_type = 5;
  void clear_output_type() ;
  ::gs::rpc::OutputType output_type() const;
  void set_output_type(::gs::rpc::OutputType value);

  private:
  ::gs::rpc::OutputType _internal_output_type() const;
  void _internal_set_output_type(::gs::rpc::OutputType value);

  public:
  // @@protoc_insertion_point(class_scope:gs.rpc.OpDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 4,
      31, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OpDef_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpDef& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> parents_;
    ::google::protobuf::internal::MapField<OpDef_AttrEntry_DoNotUse, ::int32_t, ::gs::rpc::AttrValue,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        attr_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::gs::rpc::LargeAttrValue* large_attr_;
    ::gs::rpc::QueryArgs* query_args_;
    int op_;
    int output_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_op_5fdef_2eproto;
};
// -------------------------------------------------------------------

class DagDef final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gs.rpc.DagDef) */ {
 public:
  inline DagDef() : DagDef(nullptr) {}
  ~DagDef() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DagDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline DagDef(const DagDef& from) : DagDef(nullptr, from) {}
  inline DagDef(DagDef&& from) noexcept
      : DagDef(nullptr, std::move(from)) {}
  inline DagDef& operator=(const DagDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline DagDef& operator=(DagDef&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DagDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const DagDef* internal_default_instance() {
    return reinterpret_cast<const DagDef*>(
        &_DagDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(DagDef& a, DagDef& b) { a.Swap(&b); }
  inline void Swap(DagDef* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DagDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DagDef* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DagDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DagDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DagDef& from) { DagDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DagDef* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "gs.rpc.DagDef"; }

 protected:
  explicit DagDef(::google::protobuf::Arena* arena);
  DagDef(::google::protobuf::Arena* arena, const DagDef& from);
  DagDef(::google::protobuf::Arena* arena, DagDef&& from) noexcept
      : DagDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOpFieldNumber = 1,
  };
  // repeated .gs.rpc.OpDef op = 1;
  int op_size() const;
  private:
  int _internal_op_size() const;

  public:
  void clear_op() ;
  ::gs::rpc::OpDef* mutable_op(int index);
  ::google::protobuf::RepeatedPtrField<::gs::rpc::OpDef>* mutable_op();

  private:
  const ::google::protobuf::RepeatedPtrField<::gs::rpc::OpDef>& _internal_op() const;
  ::google::protobuf::RepeatedPtrField<::gs::rpc::OpDef>* _internal_mutable_op();
  public:
  const ::gs::rpc::OpDef& op(int index) const;
  ::gs::rpc::OpDef* add_op();
  const ::google::protobuf::RepeatedPtrField<::gs::rpc::OpDef>& op() const;
  // @@protoc_insertion_point(class_scope:gs.rpc.DagDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DagDef_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DagDef& from_msg);
    ::google::protobuf::RepeatedPtrField< ::gs::rpc::OpDef > op_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_op_5fdef_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OpDef

// string key = 2;
inline void OpDef::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& OpDef::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.OpDef.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpDef::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.OpDef.key)
}
inline std::string* OpDef::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:gs.rpc.OpDef.key)
  return _s;
}
inline const std::string& OpDef::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void OpDef::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* OpDef::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* OpDef::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.OpDef.key)
  return _impl_.key_.Release();
}
inline void OpDef::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.OpDef.key)
}

// .gs.rpc.OperationType op = 3;
inline void OpDef::clear_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_ = 0;
}
inline ::gs::rpc::OperationType OpDef::op() const {
  // @@protoc_insertion_point(field_get:gs.rpc.OpDef.op)
  return _internal_op();
}
inline void OpDef::set_op(::gs::rpc::OperationType value) {
  _internal_set_op(value);
  // @@protoc_insertion_point(field_set:gs.rpc.OpDef.op)
}
inline ::gs::rpc::OperationType OpDef::_internal_op() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::gs::rpc::OperationType>(_impl_.op_);
}
inline void OpDef::_internal_set_op(::gs::rpc::OperationType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_ = value;
}

// repeated string parents = 4;
inline int OpDef::_internal_parents_size() const {
  return _internal_parents().size();
}
inline int OpDef::parents_size() const {
  return _internal_parents_size();
}
inline void OpDef::clear_parents() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parents_.Clear();
}
inline std::string* OpDef::add_parents()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_parents()->Add();
  // @@protoc_insertion_point(field_add_mutable:gs.rpc.OpDef.parents)
  return _s;
}
inline const std::string& OpDef::parents(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.OpDef.parents)
  return _internal_parents().Get(index);
}
inline std::string* OpDef::mutable_parents(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:gs.rpc.OpDef.parents)
  return _internal_mutable_parents()->Mutable(index);
}
inline void OpDef::set_parents(int index, const std::string& value) {
  _internal_mutable_parents()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:gs.rpc.OpDef.parents)
}
inline void OpDef::set_parents(int index, std::string&& value) {
  _internal_mutable_parents()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:gs.rpc.OpDef.parents)
}
inline void OpDef::set_parents(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_parents()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gs.rpc.OpDef.parents)
}
inline void OpDef::set_parents(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_parents()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gs.rpc.OpDef.parents)
}
inline void OpDef::set_parents(int index, absl::string_view value) {
  _internal_mutable_parents()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:gs.rpc.OpDef.parents)
}
inline void OpDef::add_parents(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_parents()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:gs.rpc.OpDef.parents)
}
inline void OpDef::add_parents(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_parents()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:gs.rpc.OpDef.parents)
}
inline void OpDef::add_parents(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_parents()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gs.rpc.OpDef.parents)
}
inline void OpDef::add_parents(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_parents()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gs.rpc.OpDef.parents)
}
inline void OpDef::add_parents(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_parents()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:gs.rpc.OpDef.parents)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OpDef::parents() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:gs.rpc.OpDef.parents)
  return _internal_parents();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OpDef::mutable_parents() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:gs.rpc.OpDef.parents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_parents();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OpDef::_internal_parents() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parents_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OpDef::_internal_mutable_parents() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.parents_;
}

// .gs.rpc.OutputType output_type = 5;
inline void OpDef::clear_output_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_type_ = 0;
}
inline ::gs::rpc::OutputType OpDef::output_type() const {
  // @@protoc_insertion_point(field_get:gs.rpc.OpDef.output_type)
  return _internal_output_type();
}
inline void OpDef::set_output_type(::gs::rpc::OutputType value) {
  _internal_set_output_type(value);
  // @@protoc_insertion_point(field_set:gs.rpc.OpDef.output_type)
}
inline ::gs::rpc::OutputType OpDef::_internal_output_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::gs::rpc::OutputType>(_impl_.output_type_);
}
inline void OpDef::_internal_set_output_type(::gs::rpc::OutputType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_type_ = value;
}

// map<int32, .gs.rpc.AttrValue> attr = 6;
inline int OpDef::_internal_attr_size() const {
  return _internal_attr().size();
}
inline int OpDef::attr_size() const {
  return _internal_attr_size();
}
inline const ::google::protobuf::Map<::int32_t, ::gs::rpc::AttrValue>& OpDef::_internal_attr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attr_.GetMap();
}
inline const ::google::protobuf::Map<::int32_t, ::gs::rpc::AttrValue>& OpDef::attr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:gs.rpc.OpDef.attr)
  return _internal_attr();
}
inline ::google::protobuf::Map<::int32_t, ::gs::rpc::AttrValue>* OpDef::_internal_mutable_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attr_.MutableMap();
}
inline ::google::protobuf::Map<::int32_t, ::gs::rpc::AttrValue>* OpDef::mutable_attr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:gs.rpc.OpDef.attr)
  return _internal_mutable_attr();
}

// .gs.rpc.LargeAttrValue large_attr = 7;
inline bool OpDef::has_large_attr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.large_attr_ != nullptr);
  return value;
}
inline const ::gs::rpc::LargeAttrValue& OpDef::_internal_large_attr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::LargeAttrValue* p = _impl_.large_attr_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::LargeAttrValue&>(::gs::rpc::_LargeAttrValue_default_instance_);
}
inline const ::gs::rpc::LargeAttrValue& OpDef::large_attr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.OpDef.large_attr)
  return _internal_large_attr();
}
inline void OpDef::unsafe_arena_set_allocated_large_attr(::gs::rpc::LargeAttrValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.large_attr_);
  }
  _impl_.large_attr_ = reinterpret_cast<::gs::rpc::LargeAttrValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.OpDef.large_attr)
}
inline ::gs::rpc::LargeAttrValue* OpDef::release_large_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::LargeAttrValue* released = _impl_.large_attr_;
  _impl_.large_attr_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::LargeAttrValue* OpDef::unsafe_arena_release_large_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.OpDef.large_attr)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::LargeAttrValue* temp = _impl_.large_attr_;
  _impl_.large_attr_ = nullptr;
  return temp;
}
inline ::gs::rpc::LargeAttrValue* OpDef::_internal_mutable_large_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.large_attr_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::LargeAttrValue>(GetArena());
    _impl_.large_attr_ = reinterpret_cast<::gs::rpc::LargeAttrValue*>(p);
  }
  return _impl_.large_attr_;
}
inline ::gs::rpc::LargeAttrValue* OpDef::mutable_large_attr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::LargeAttrValue* _msg = _internal_mutable_large_attr();
  // @@protoc_insertion_point(field_mutable:gs.rpc.OpDef.large_attr)
  return _msg;
}
inline void OpDef::set_allocated_large_attr(::gs::rpc::LargeAttrValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.large_attr_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.large_attr_ = reinterpret_cast<::gs::rpc::LargeAttrValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.OpDef.large_attr)
}

// .gs.rpc.QueryArgs query_args = 8;
inline bool OpDef::has_query_args() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.query_args_ != nullptr);
  return value;
}
inline const ::gs::rpc::QueryArgs& OpDef::_internal_query_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::QueryArgs* p = _impl_.query_args_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::QueryArgs&>(::gs::rpc::_QueryArgs_default_instance_);
}
inline const ::gs::rpc::QueryArgs& OpDef::query_args() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.OpDef.query_args)
  return _internal_query_args();
}
inline void OpDef::unsafe_arena_set_allocated_query_args(::gs::rpc::QueryArgs* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.query_args_);
  }
  _impl_.query_args_ = reinterpret_cast<::gs::rpc::QueryArgs*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.OpDef.query_args)
}
inline ::gs::rpc::QueryArgs* OpDef::release_query_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::gs::rpc::QueryArgs* released = _impl_.query_args_;
  _impl_.query_args_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::QueryArgs* OpDef::unsafe_arena_release_query_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.OpDef.query_args)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::gs::rpc::QueryArgs* temp = _impl_.query_args_;
  _impl_.query_args_ = nullptr;
  return temp;
}
inline ::gs::rpc::QueryArgs* OpDef::_internal_mutable_query_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.query_args_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::QueryArgs>(GetArena());
    _impl_.query_args_ = reinterpret_cast<::gs::rpc::QueryArgs*>(p);
  }
  return _impl_.query_args_;
}
inline ::gs::rpc::QueryArgs* OpDef::mutable_query_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::gs::rpc::QueryArgs* _msg = _internal_mutable_query_args();
  // @@protoc_insertion_point(field_mutable:gs.rpc.OpDef.query_args)
  return _msg;
}
inline void OpDef::set_allocated_query_args(::gs::rpc::QueryArgs* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.query_args_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.query_args_ = reinterpret_cast<::gs::rpc::QueryArgs*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.OpDef.query_args)
}

// -------------------------------------------------------------------

// OpResult_Meta

// string metrics = 1;
inline void OpResult_Meta::clear_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metrics_.ClearToEmpty();
}
inline const std::string& OpResult_Meta::metrics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.OpResult.Meta.metrics)
  return _internal_metrics();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpResult_Meta::set_metrics(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metrics_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.OpResult.Meta.metrics)
}
inline std::string* OpResult_Meta::mutable_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_metrics();
  // @@protoc_insertion_point(field_mutable:gs.rpc.OpResult.Meta.metrics)
  return _s;
}
inline const std::string& OpResult_Meta::_internal_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metrics_.Get();
}
inline void OpResult_Meta::_internal_set_metrics(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metrics_.Set(value, GetArena());
}
inline std::string* OpResult_Meta::_internal_mutable_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metrics_.Mutable( GetArena());
}
inline std::string* OpResult_Meta::release_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.OpResult.Meta.metrics)
  return _impl_.metrics_.Release();
}
inline void OpResult_Meta::set_allocated_metrics(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metrics_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.metrics_.IsDefault()) {
          _impl_.metrics_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.OpResult.Meta.metrics)
}

// bool has_large_result = 2;
inline void OpResult_Meta::clear_has_large_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_large_result_ = false;
}
inline bool OpResult_Meta::has_large_result() const {
  // @@protoc_insertion_point(field_get:gs.rpc.OpResult.Meta.has_large_result)
  return _internal_has_large_result();
}
inline void OpResult_Meta::set_has_large_result(bool value) {
  _internal_set_has_large_result(value);
  // @@protoc_insertion_point(field_set:gs.rpc.OpResult.Meta.has_large_result)
}
inline bool OpResult_Meta::_internal_has_large_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.has_large_result_;
}
inline void OpResult_Meta::_internal_set_has_large_result(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_large_result_ = value;
}

// -------------------------------------------------------------------

// OpResult

// .gs.rpc.Code code = 1;
inline void OpResult::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
}
inline ::gs::rpc::Code OpResult::code() const {
  // @@protoc_insertion_point(field_get:gs.rpc.OpResult.code)
  return _internal_code();
}
inline void OpResult::set_code(::gs::rpc::Code value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:gs.rpc.OpResult.code)
}
inline ::gs::rpc::Code OpResult::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::gs::rpc::Code>(_impl_.code_);
}
inline void OpResult::_internal_set_code(::gs::rpc::Code value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string key = 2;
inline void OpResult::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& OpResult::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.OpResult.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpResult::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.OpResult.key)
}
inline std::string* OpResult::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:gs.rpc.OpResult.key)
  return _s;
}
inline const std::string& OpResult::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void OpResult::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* OpResult::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* OpResult::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.OpResult.key)
  return _impl_.key_.Release();
}
inline void OpResult::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.OpResult.key)
}

// .gs.rpc.OpResult.Meta meta = 3;
inline bool OpResult::has_meta() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.meta_ != nullptr);
  return value;
}
inline void OpResult::clear_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ != nullptr) _impl_.meta_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::gs::rpc::OpResult_Meta& OpResult::_internal_meta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::OpResult_Meta* p = _impl_.meta_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::OpResult_Meta&>(::gs::rpc::_OpResult_Meta_default_instance_);
}
inline const ::gs::rpc::OpResult_Meta& OpResult::meta() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.OpResult.meta)
  return _internal_meta();
}
inline void OpResult::unsafe_arena_set_allocated_meta(::gs::rpc::OpResult_Meta* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }
  _impl_.meta_ = reinterpret_cast<::gs::rpc::OpResult_Meta*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.OpResult.meta)
}
inline ::gs::rpc::OpResult_Meta* OpResult::release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::OpResult_Meta* released = _impl_.meta_;
  _impl_.meta_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::OpResult_Meta* OpResult::unsafe_arena_release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.OpResult.meta)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::gs::rpc::OpResult_Meta* temp = _impl_.meta_;
  _impl_.meta_ = nullptr;
  return temp;
}
inline ::gs::rpc::OpResult_Meta* OpResult::_internal_mutable_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::OpResult_Meta>(GetArena());
    _impl_.meta_ = reinterpret_cast<::gs::rpc::OpResult_Meta*>(p);
  }
  return _impl_.meta_;
}
inline ::gs::rpc::OpResult_Meta* OpResult::mutable_meta() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::gs::rpc::OpResult_Meta* _msg = _internal_mutable_meta();
  // @@protoc_insertion_point(field_mutable:gs.rpc.OpResult.meta)
  return _msg;
}
inline void OpResult::set_allocated_meta(::gs::rpc::OpResult_Meta* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.meta_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.meta_ = reinterpret_cast<::gs::rpc::OpResult_Meta*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.OpResult.meta)
}

// bytes result = 4;
inline void OpResult::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& OpResult::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.OpResult.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpResult::set_result(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.OpResult.result)
}
inline std::string* OpResult::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:gs.rpc.OpResult.result)
  return _s;
}
inline const std::string& OpResult::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_.Get();
}
inline void OpResult::_internal_set_result(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_.Set(value, GetArena());
}
inline std::string* OpResult::_internal_mutable_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* OpResult::release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.OpResult.result)
  return _impl_.result_.Release();
}
inline void OpResult::set_allocated_result(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.OpResult.result)
}

// string error_msg = 5;
inline void OpResult::clear_error_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_msg_.ClearToEmpty();
}
inline const std::string& OpResult::error_msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.OpResult.error_msg)
  return _internal_error_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpResult::set_error_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gs.rpc.OpResult.error_msg)
}
inline std::string* OpResult::mutable_error_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_msg();
  // @@protoc_insertion_point(field_mutable:gs.rpc.OpResult.error_msg)
  return _s;
}
inline const std::string& OpResult::_internal_error_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_msg_.Get();
}
inline void OpResult::_internal_set_error_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_msg_.Set(value, GetArena());
}
inline std::string* OpResult::_internal_mutable_error_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_msg_.Mutable( GetArena());
}
inline std::string* OpResult::release_error_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.OpResult.error_msg)
  return _impl_.error_msg_.Release();
}
inline void OpResult::set_allocated_error_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_msg_.IsDefault()) {
          _impl_.error_msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.OpResult.error_msg)
}

// .gs.rpc.graph.GraphDefPb graph_def = 7;
inline bool OpResult::has_graph_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.graph_def_ != nullptr);
  return value;
}
inline const ::gs::rpc::graph::GraphDefPb& OpResult::_internal_graph_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gs::rpc::graph::GraphDefPb* p = _impl_.graph_def_;
  return p != nullptr ? *p : reinterpret_cast<const ::gs::rpc::graph::GraphDefPb&>(::gs::rpc::graph::_GraphDefPb_default_instance_);
}
inline const ::gs::rpc::graph::GraphDefPb& OpResult::graph_def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.OpResult.graph_def)
  return _internal_graph_def();
}
inline void OpResult::unsafe_arena_set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.graph_def_);
  }
  _impl_.graph_def_ = reinterpret_cast<::gs::rpc::graph::GraphDefPb*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gs.rpc.OpResult.graph_def)
}
inline ::gs::rpc::graph::GraphDefPb* OpResult::release_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::gs::rpc::graph::GraphDefPb* released = _impl_.graph_def_;
  _impl_.graph_def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::gs::rpc::graph::GraphDefPb* OpResult::unsafe_arena_release_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gs.rpc.OpResult.graph_def)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::gs::rpc::graph::GraphDefPb* temp = _impl_.graph_def_;
  _impl_.graph_def_ = nullptr;
  return temp;
}
inline ::gs::rpc::graph::GraphDefPb* OpResult::_internal_mutable_graph_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.graph_def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gs::rpc::graph::GraphDefPb>(GetArena());
    _impl_.graph_def_ = reinterpret_cast<::gs::rpc::graph::GraphDefPb*>(p);
  }
  return _impl_.graph_def_;
}
inline ::gs::rpc::graph::GraphDefPb* OpResult::mutable_graph_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::gs::rpc::graph::GraphDefPb* _msg = _internal_mutable_graph_def();
  // @@protoc_insertion_point(field_mutable:gs.rpc.OpResult.graph_def)
  return _msg;
}
inline void OpResult::set_allocated_graph_def(::gs::rpc::graph::GraphDefPb* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.graph_def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.graph_def_ = reinterpret_cast<::gs::rpc::graph::GraphDefPb*>(value);
  // @@protoc_insertion_point(field_set_allocated:gs.rpc.OpResult.graph_def)
}

// -------------------------------------------------------------------

// DagDef

// repeated .gs.rpc.OpDef op = 1;
inline int DagDef::_internal_op_size() const {
  return _internal_op().size();
}
inline int DagDef::op_size() const {
  return _internal_op_size();
}
inline void DagDef::clear_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_.Clear();
}
inline ::gs::rpc::OpDef* DagDef::mutable_op(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:gs.rpc.DagDef.op)
  return _internal_mutable_op()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::gs::rpc::OpDef>* DagDef::mutable_op()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:gs.rpc.DagDef.op)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_op();
}
inline const ::gs::rpc::OpDef& DagDef::op(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gs.rpc.DagDef.op)
  return _internal_op().Get(index);
}
inline ::gs::rpc::OpDef* DagDef::add_op() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::gs::rpc::OpDef* _add = _internal_mutable_op()->Add();
  // @@protoc_insertion_point(field_add:gs.rpc.DagDef.op)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::gs::rpc::OpDef>& DagDef::op() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:gs.rpc.DagDef.op)
  return _internal_op();
}
inline const ::google::protobuf::RepeatedPtrField<::gs::rpc::OpDef>&
DagDef::_internal_op() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_;
}
inline ::google::protobuf::RepeatedPtrField<::gs::rpc::OpDef>*
DagDef::_internal_mutable_op() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.op_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
}  // namespace gs


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_op_5fdef_2eproto_2epb_2eh
